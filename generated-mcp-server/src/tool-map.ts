import { McpToolDefinition } from './index.js';

export const toolDefinitionMap: Map<string, McpToolDefinition> = new Map([
  [
    'AffiliateCreatorV202405Api_OpenCollaborationsProductsSearchPost',
    {
      name: 'AffiliateCreatorV202405Api_OpenCollaborationsProductsSearchPost',
      description: `This API is used to search the information of products with open collaboration by category, commission rate, and keywords. It will return all products on the TikTok Shop Affiliate Product Marketplace that are in an open collaboration. Creators can only search for open collaboration within the regions they are registered in the affiliate.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_field: { type: 'string' },
          sort_order: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              category: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The category identifier. Note that only first-level categories are supported.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              commission_rate_range: {
                type: 'object',
                properties: {
                  rate_ge: {
                    type: 'number',
                    description:
                      'The commission rate must be greater than this value in order to be included in the search results. The commission rate is expressed in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `1000`.',
                  },
                  rate_lt: {
                    type: 'number',
                    description:
                      'The commission rate must be less than this value in order to be included in the search results. The commission rate is expressed in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `1000`.',
                  },
                },
                required: ['rate_ge', 'rate_lt'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              sales_price_range: {
                type: 'object',
                properties: {
                  amount_ge: {
                    type: 'string',
                    description:
                      'The product price must be greater than this value in order to be included in the search results. The value must be greater than `0`.',
                  },
                  amount_lt: {
                    type: 'string',
                    description:
                      'The product price must be greater than this value in order to be included in the search results. The value must be greater than `0`. No upper bound is set if this property is not included.',
                  },
                },
                required: ['amount_ge', 'amount_lt'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              title_keywords: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of product keywords for searching. Product titles, or names, are loosely matched. Keywords in the list form a query and the resulting set of matching product names is based on the conjunctive operator `AND` between each keyword. For example, the keyword list `[\\"Men\\", \\"Fashion\\"]` creates a query `\\"Men\\" AND \\"Fashion\\"` and the resulting set of matching product names contains the loosely matched conjuction of \\"Men\\" and \\"Fashion\\" such as \\"Male Fashionable\\". Maximum length of the list is 20 keywords. Maximum keyword string length is 255 characters.',
              },
            },
            required: ['category', 'commission_rate_range', 'sales_price_range', 'title_keywords'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202405/open_collaborations/products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_field', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202405Api_OrdersSearchPost',
    {
      name: 'AffiliateCreatorV202405Api_OrdersSearchPost',
      description: `Search Creator Affiliate Orders This API allows the partner to retrieve a list of affiliate orders generated by a creator, returning the order ID and the product ID. Using this, the partner can track their affiliate-conversions on behalf of a creator, using the order ID. For now, this API returns all historical affiliate orders by a creator. We do not provide any filtering mechanisms (based on timestamp) at this time. We will provide this functionality in a future iteration. Thus this API is technically a \\"Get Affiliate Orders List\\" at this stage, but it will be improved in the future to be a search based API (with robust filtering).`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          version: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202405/orders/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202405Api_ProfilesGet',
    {
      name: 'AffiliateCreatorV202405Api_ProfilesGet',
      description: `This API gets the creator profile information.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_creator/202405/profiles',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202405Api_ShowcasesProductsAddPost',
    {
      name: 'AffiliateCreatorV202405Api_ShowcasesProductsAddPost',
      description: `This API adds the products to the creator\\'s showcase. The platform will return the add status of the products, and error code and error message if the deletion fails.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              add_type: {
                type: 'string',
                description:
                  'Specifies how products are added to the showcase. This an enumerated type with values: - PRODUCT_ID - PRODUCT_LINK',
              },
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of product identifiers included if `add_type` is set to `PRODUCT_ID`. The products associated with the identifiers are added to the showcase. Maximum length of the list is 20 product identifiers.',
              },
              product_link: {
                type: 'string',
                description:
                  'A list of product URLs included if `add_type` is set to `PRODUCT_LINK`. The products associated with the URLs are added to the showcase. Maximum length of the list is 20 product URLs.',
              },
            },
            required: ['add_type', 'product_ids', 'product_link'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202405/showcases/products/add',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202405Api_ShowcasesProductsGet',
    {
      name: 'AffiliateCreatorV202405Api_ShowcasesProductsGet',
      description: `This API lists the products in the creator\\'s showcase, paginated by specified page size and iterated through pages by page token for up to 2000 products in the showcase. This API is generally used when a creator would like to view the products in the showcase.  The platform will return the product details in the showcase, as well as the products in the livebag if the creator is live streaming.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          origin: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'origin',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_creator/202405/showcases/products',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'origin', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202405Api_TargetCollaborationsSearchPost',
    {
      name: 'AffiliateCreatorV202405Api_TargetCollaborationsSearchPost',
      description: `This API is used to search for creator\\'s target collaborations and the products within these target collaborations.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Target collaborations in the response are restricted to the expressed name.',
              },
              keyword_type: {
                type: 'string',
                description:
                  'Target collaborations in the response are restricted to the the expressed type. This is an enumerated wtype with values: - TARGET_COLLABORATIONS_ID - TARGET_COLLABORATIONS_NAME  `TARGET_COLLABORATIONS_ID` returns target collaborations with state set to `LIVE`, `EXPIRED`, `DELETED`, and `ENDED`.   `TARGET_COLLABORATIONS_NAME` returns target collaborations with state set to `LIVE` only.',
              },
              shop_id: { type: 'string', description: 'The TikTok Shop identifier.' },
            },
            required: ['keyword', 'keyword_type', 'shop_id'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202405/target_collaborations/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202407Api_AffiliateSharingLinksGenerateBatchPost',
    {
      name: 'AffiliateCreatorV202407Api_AffiliateSharingLinksGenerateBatchPost',
      description: `Use externally input material id, distributor customized tags, promotion channel and other needed parameters to generate affiliate share link, which contains chain keys.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              channel: { type: 'string', description: 'The customized promotion channel' },
              material: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of product/campiagn/showcase that our partner wants to promote. We use this material id to generate the sharing link',
                  },
                  type: {
                    type: 'string',
                    description:
                      'For the mvp version, we only use product type, but we have 3 types in total: PRODUCT CAMPAIGN SHOWCASE',
                  },
                },
                required: ['id', 'type'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              tags: {
                type: 'array',
                items: { type: 'string' },
                description: 'The parameter provided for creator to record his own tracking info',
              },
            },
            required: ['channel', 'material', 'tags'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202407/affiliate_sharing_links/generate_batch',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202409Api_SampleApplicationsFulfillmentsSearchPost',
    {
      name: 'AffiliateCreatorV202409Api_SampleApplicationsFulfillmentsSearchPost',
      description: `You, the creator, can use this API to query the fulfillment status for the received sample applications.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          sort_field: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              fulfillment_statuses: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of fulfillment statuses. The response is filtered to include sample fulfillments with the fulfillment_status field set to one of the specified values.  The possible values are: - PENDING: The creator has not yet fulfilled the content creation obligation. - ONGOING: Fulfillment is in progress; content has been created and is being evaluated against criteria. - SUCCEED: Fulfillment has been successfully completed; the content meets the required standards. - FAILED: Fulfillment failed; the content did not meet the required standards. - OVERDUE: Fulfillment is overdue; the creator did not meet the deadline. - SUSPEND: Fulfillment has been suspended. - CANCELLED: Fulfillment has been cancelled, either by the creator or due to operational reasons. - EXEMPTED: The creator is exempt from the fulfillment obligation.',
              },
            },
            required: ['fulfillment_statuses'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202409/sample_applications/fulfillments/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'sort_field', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202409Api_ShowcasesProductsDelete',
    {
      name: 'AffiliateCreatorV202409Api_ShowcasesProductsDelete',
      description: `This API removes the products in the creator\\'s showcase. The platform will return error code and error message if the deletion fails.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The product IDs to remove from the creator\\'s showcase. The maximum number of products to delete at once is 200.",
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/affiliate_creator/202409/showcases/products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202409Api_ShowcasesProductsTopPost',
    {
      name: 'AffiliateCreatorV202409Api_ShowcasesProductsTopPost',
      description: `Use this API to move products to the top in a creator\\'s showcase. The platform will return the error code and error message if the pinning operation fails.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The product IDs to move to the top in a creator\\'s showcase. If multiple products are provided, they will display according to the order passed in this parameter.",
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202409/showcases/products/top',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202410Api_OrdersSearchPost',
    {
      name: 'AffiliateCreatorV202410Api_OrdersSearchPost',
      description: `Search Creator Affiliate Orders This API allows the partner to retrieve a list of affiliate orders generated by a creator, returning the order ID and the product ID. Using this, the partner can track their affiliate-conversions on behalf of a creator, using the order ID.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              create_time_ge: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created on or after the specified date and time. Unix timestamp.  Note: `create_time_ge` and `create_time_lt` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_lt` is empty, `create_time_lt` will default to the current time. - If `create_time_lt` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
            },
            required: ['create_time_ge', 'create_time_lt'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202410/orders/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202412Api_SampleApplicationsSearchPost',
    {
      name: 'AffiliateCreatorV202412Api_SampleApplicationsSearchPost',
      description: `Get sample application list of creator.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              application_statuses: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The status of sample applications. The possible enumerated values are: - PENDING: The sample application is waiting for the seller\\'s review. - AWAITING_SHIPMENT: The application is approved, and the seller needs to ship the sample. - SHIPPED: The sample has been shipped by the seller and is waiting for the creator to receive the package. - CONTENT_PENDING: The creator has received the sample package and is expected to create content. - REJECT_CANCELLED: The sample application has been rejected by the seller. - OVERDUE_CANCELLED: The sample application has expired due to being overdue. - UNFULFILL_CANCELLED: The creator did not fulfill the commitment to create content within the agreed timeframe. - DEL_OPEN_COLLAB: Open collaboration has been deleted. - SELLER_NOT_SHIP_CANCELLED: The seller did not ship the sample within the required timeframe. - WITHDRAW_CANCELLED: The creator withdrew the sample application before the seller approved it. - UNFULFILLABLE_CANCELLED: The application was cancelled due to reasons beyond the creator\\'s control, making it impossible to create content. - OPS_CANCELLED: The application was manually cancelled by operations staff. - OPS_FAILED: The application was marked as failed by operations staff. - OPS_ COMPLETED: The application was manually marked as completed by operations staff. - COMPLETED: The application is complete, and the creator has posted the content. This field allows for tracking the status of a sample application throughout its lifecycle, providing visibility into each stage of the process for sellers and creators.",
              },
            },
            required: ['application_statuses'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202412/sample_applications/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202412Api_SampleApplicationsSingleQueryPost',
    {
      name: 'AffiliateCreatorV202412Api_SampleApplicationsSingleQueryPost',
      description: `Get the sample detail of specified sample application.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              application_id: {
                type: 'string',
                description:
                  'Free sample application ID, required when application type is \\"FREE_SAMPLE\\".',
              },
              application_type: {
                type: 'string',
                description:
                  'The type of creator sample application. - FREE_SAMPLE : free sample supplied by seller which creator can apply for by themselves from product detail page. - SAMPLE_COUPON: creator claimed sample coupon (a type of coupon) and used it to place orders at a discount price. - SAMPLE_CAMPAIGN: activity organized by the platform. Creators can participate in this activity to obtain sample products provided by the platform for free.',
              },
              main_order_id: {
                type: 'string',
                description:
                  'The real main order identifier, required when application  is \\"SAMPLE_COUPON\\"  or \\"SAMPLE_CAMPAIGN\\" or \\"REFUNDABLE_SAMPLE\\".',
              },
              product_id: { type: 'string', description: 'The product identifier.' },
            },
            required: ['application_id', 'application_type', 'main_order_id', 'product_id'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202412/sample_applications/single_query',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202412Api_SamplesLabelsGet',
    {
      name: 'AffiliateCreatorV202412Api_SamplesLabelsGet',
      description: `Check if a creator can apply for a sample of a specific product.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_creator/202412/samples/labels',
      executionParameters: [
        { name: 'product_id', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202501Api_AffiliateSharingLinksGenerateBatchPost',
    {
      name: 'AffiliateCreatorV202501Api_AffiliateSharingLinksGenerateBatchPost',
      description: `Use externally input material id, distributor customized tags, promotion channel and other needed parameters to generate affiliate share link, which contains chain keys.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              channel: { type: 'string', description: 'The customized promotion channel' },
              material: {
                type: 'object',
                properties: {
                  campaign_url: {
                    type: 'string',
                    description:
                      'The original url of the campaign page, which will be returned after verified and concatenated with chainkey and other event tracking parameters.',
                  },
                  id: {
                    type: 'string',
                    description:
                      'The ID of product/campiagn/showcase that our partner wants to promote. We use this material id to generate the sharing link',
                  },
                  type: {
                    type: 'string',
                    description:
                      'You can use the following enumerations: - PRODUCT - CAMPAIGN - SHOWCASE When `type==PRODUCT`, use pid as `id`; when `type==CAMPAIGN`, use campaign ID as `id`, and pass in `campaign_url`; when `type==SHOWCASE`, no need to pass in `id` and `campaign_url`.',
                  },
                },
                required: ['campaign_url', 'id', 'type'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              tags: {
                type: 'array',
                items: { type: 'string' },
                description: 'The parameter provided for creator to record his own tracking info',
              },
            },
            required: ['channel', 'material', 'tags'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202501/affiliate_sharing_links/generate_batch',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateCreatorV202501Api_SelectionProductsSearchPost',
    {
      name: 'AffiliateCreatorV202501Api_SelectionProductsSearchPost',
      description: `As a creator, you can use this API to filter products using various conditions. When no filter parameter is given, the API will return affiliate products recommended by algorithm with no specific limits.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              filter_params: {
                type: 'object',
                properties: {
                  category_ids: {
                    type: 'array',
                    items: { type: 'string' },
                    description:
                      "The categories\\' unique IDs of the searched product needed to be limited in this param Prerequisites: - The length of category_ids is less than 1000",
                  },
                  commission_rate_range: {
                    type: 'object',
                    properties: {
                      rate_ge: {
                        type: 'number',
                        description:
                          'The minimum value of commission rate in the search scope Prerequisites: - The value of must be greater than 100 or equal to 100, and less than 8000 or equal to 8000. - This value equals the actual commission rate multiplied by 100. For example: 1200 means the actual commission rate is 12% - Currently, the value will be automatically truncated to its floor hundred. For instance, 1239 will be truncated to 1200',
                      },
                      rate_le: {
                        type: 'number',
                        description:
                          'The maximum value of commission rate in the search range Prerequisites: - The value of must be greater than 100 or equal to 100, and less than 8000 or equal to 8000. - This value equals the actual commission rate multiplied by 100. For example: 1200 means the actual commission rate is 12% - Currently, the value will be automatically truncated to its floor hundred. For instance, 1239 will be truncated to 1200',
                      },
                    },
                    required: ['rate_ge', 'rate_le'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  pool_ids: {
                    type: 'array',
                    items: { type: 'string' },
                    description:
                      'The list of product pool IDs. A product pool is edited by the operations, corresponding to a bunch of product IDs. The product pool IDs will be provided by the operations offline.  Notice: Currently, if no title_keyword is given, only 1 pool_id is supported. So in this situation, the length of this field should be 1, otherwise we will only use the first pool.',
                  },
                  price_range: {
                    type: 'object',
                    properties: {
                      price_ge: {
                        type: 'string',
                        description:
                          "The minimum price of the searched product needed to be limited The unit is the local currency of the creator\\'s marketing country. Prerequisites: - The value must be greater than or equal to zero - If no value is given, it means 0 - Currently, the value needs to be an integer, otherwise we will automatically truncate it to its floor integer. For instance, 12.54 will be truncated to 12",
                      },
                      price_le: {
                        type: 'string',
                        description:
                          "The maximum price of the searched product needed to be limited The unit is the local currency of the creator\\'s marketing country. Prerequisites: - The value must be greater than or equal to zero - If no value is given, it means 0 - Currently, the value needs to be an integer, otherwise we will automatically truncate it to its floor integer. For instance, 12.54 will be truncated to 12",
                      },
                    },
                    required: ['price_ge', 'price_le'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  product_ids: {
                    type: 'array',
                    items: { type: 'string' },
                    description:
                      'The exact product IDs the search needs. If this field is not empty, we will ignore other fields Prereqsites: The length of product_ids should be less or equal than 50',
                  },
                  shop_rating_range: {
                    type: 'object',
                    properties: {
                      rating_ge: {
                        type: 'number',
                        description:
                          'The minimum value of shop rating for the search. Prerequisites: - The value of must be greater than or equal to 0, and less than 50 or equal to 50. - This value equals the actual shop rating multiplied by 10. For example, 35 means the actual shop rating is 3.5',
                      },
                      rating_le: {
                        type: 'number',
                        description:
                          'The maximum value of shop rating for the search. Prerequisites: - The value of must be greater than or equal to 0, and less than 50 or equal to 50. - This value equals the actual shop rating multiplied by 10. For example, 35 means the actual shop rating is 3.5',
                      },
                    },
                    required: ['rating_ge', 'rating_le'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  sold_quantity_range: {
                    type: 'object',
                    properties: {
                      quantity_ge: {
                        type: 'number',
                        description:
                          'The minimum value of product sold quantity. Prerequisites: - The value must be greater than or equal to 0 - If no value is given, it means 0',
                      },
                      quantity_le: {
                        type: 'number',
                        description:
                          'The maximum value of product sold quantity. Prerequisites: - The value must be greater than or equal to 0 - If no value or 0 is given, it means infinity',
                      },
                    },
                    required: ['quantity_ge', 'quantity_le'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  title_keyword: {
                    type: 'string',
                    description:
                      'The keyword of product name, which will be used for fuzzy search on products. There is no limit to the language of product name Prerequisites: - A keyword must have at least 1 character and no more than 255 characters.',
                  },
                },
                required: [
                  'category_ids',
                  'commission_rate_range',
                  'pool_ids',
                  'price_range',
                  'product_ids',
                  'shop_rating_range',
                  'sold_quantity_range',
                  'title_keyword',
                ],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              sort_params: {
                type: 'object',
                properties: {
                  sort_type: {
                    type: 'string',
                    description:
                      'The type of sort we applied to the result. Currently, there are 6 types: 1. \\"RECOMMENDED\\" Follow the algorithm recommended order 2. \\"BEST_SELLERS\\" Sort by historical sold numbers from high to low 3. \\"LOW_PRICE\\" Sort by price from low to high 4. \\"HIGH_PRICE\\" Sort by price from high to low 5. \\"NEWLY_RELEASED\\" Sort by the product edition time from late to early 6. \\"HIGH_COMMISSION_RATE\\" Sort by commission rate from high to low If no value is given, we will follow algorithm recommended order, namely the same as \\"RECOMMENDED\\"',
                  },
                },
                required: ['sort_type'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['filter_params', 'sort_params'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_creator/202501/selection/products/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsCampaignIdGet',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsCampaignIdGet',
      description: `This API offers the ability to get affiliate campaign details.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'campaign_id',
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_partner/202405/campaigns/{campaign_id}',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsCampaignIdPartialEditPost',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsCampaignIdPartialEditPost',
      description: `This API offers the ability to edit an Affiliate Partner campaign. No editing after the campaign is closed.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              campaign_end_time: {
                type: 'number',
                description:
                  'The scheduled end time in Unix epoch time format for the campaign. Note that the end time must be less than 360 days from the start date. This field is no longer editable when the campaign status is set to `CLOSED`.',
              },
              campaign_start_time: {
                type: 'number',
                description:
                  'The scheduled start time in Unix epoch time format for the campaign. Note that this field can be updated when the campaign status is set to `READY` or `UPCOMING` only.',
              },
              commission_rate: {
                type: 'number',
                description:
                  'The total commission rate in hundreds of a percent (0.01%) units proposed by the affiliate partner for display to sellers. Commission rate must be greater than 100 and less than 8000.',
              },
              contact_info: {
                type: 'object',
                properties: {
                  email: { type: 'string', description: "The partner\\'s email address." },
                  line: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in LINE. Applicable if the target market is TH.",
                  },
                  phone: { type: 'string', description: "The partner\\'s phone number." },
                  viber: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in Viber. Applicable if the target market is PH.",
                  },
                  whatsapp: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in WhatsApp. Applicable if the target market is MY, SG, GB, ID, or US.",
                  },
                  zalo: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in Zalo. Applicable if the target market is VN.",
                  },
                },
                required: ['email', 'line', 'phone', 'viber', 'whatsapp', 'zalo'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              description: {
                type: 'string',
                description:
                  'The campaign description. The campaign description must be less than 1000 characters.',
              },
              name: {
                type: 'string',
                description:
                  'The campaign name. The campaign name must be less than 50 characters.',
              },
              registration_end_time: {
                type: 'number',
                description:
                  'The scheduled end time in Unix epoch time format for seller product registration. This field is no longer editable when the campaign status is set to `CLOSED`.',
              },
              registration_start_time: {
                type: 'number',
                description:
                  'The scheduled start time in Unix epoch format for seller product registration. Note that this field can be updated when the campaign status is set to `READY` or `UPCOMING` only.',
              },
              target_seller_types: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of eligible seller types to allow to register for the campaign. Use this field to broadly target types of sellers instead of specific sellers in the `target_shop_codes` field. This is an enumerated type with possible values: - LOCAL - CROSS_BORDER',
              },
              target_shop_codes: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of TikTok Shop seller shop codes to allow to register for the campaign. The seller shop code in available in TikTok Shop Seller Central by clicking on the Seller Profile icon in the top right of the user interface. The list must be less than 100 items in length.',
              },
            },
            required: [
              'campaign_end_time',
              'campaign_start_time',
              'commission_rate',
              'contact_info',
              'description',
              'name',
              'registration_end_time',
              'registration_start_time',
              'target_seller_types',
              'target_shop_codes',
            ],
            description: 'Request body',
          },
        },
        required: [
          'campaign_id',
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_partner/202405/campaigns/{campaign_id}/partial_edit',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsCampaignIdProductsGet',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsCampaignIdProductsGet',
      description: `This API offers the ability to list products submitted by sellers in an Affiliate Partner campaign.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          category_asset_cipher: { type: 'string' },
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          review_status: { type: 'string' },
          product_name: { type: 'string' },
          product_id: { type: 'string', description: 'productId? identifier' },
          shop_name: { type: 'string' },
          category_id: { type: 'string', description: 'categoryId? identifier' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'campaign_id',
          'category_asset_cipher',
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_partner/202405/campaigns/{campaign_id}/products',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'review_status', in: 'query' },
        { name: 'product_name', in: 'query' },
        { name: 'product_id', in: 'query' },
        { name: 'shop_name', in: 'query' },
        { name: 'category_id', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsCampaignIdProductsProductIdPromotionLinkGeneratePost',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsCampaignIdProductsProductIdPromotionLinkGeneratePost',
      description: `This API offers the ability to generate campaign product promotion links.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          product_id: { type: 'string', description: 'productId identifier' },
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_commission_rate: {
                type: 'number',
                description:
                  'The commission rate paid to a creator in hundredths of a percent (0.01%). The commission rate must be lower than or equal to the total commission rate set by the seller.',
              },
            },
            required: ['creator_commission_rate'],
            description: 'Request body',
          },
        },
        required: [
          'campaign_id',
          'product_id',
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate:
        '/affiliate_partner/202405/campaigns/{campaign_id}/products/{product_id}/promotion_link/generate',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'product_id', in: 'path' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsCampaignIdProductsProductIdReviewPost',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsCampaignIdProductsProductIdReviewPost',
      description: `This API offers the ability for the TikTok Affiliate Partner to review the products submitted by the sellers. This API offers the ability for the TikTok Affiliate Partner to review the products submitted by the sellers.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          product_id: { type: 'string', description: 'productId identifier' },
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              reject_reasons: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'If the `review_result` property is set to `REJECT` or `REJECT_FOREVER`, this property is set to the enumerated reason that the TikTok Affiliate Partner rejected the product. This is an enumerated type with values: - COMMISSION_TOO_LOW - PRODUCT_HARD_TO_PROMOTE - PRODUCT_TOO_EXPENSIVE - NO_SUITABLE_CREATOR',
              },
              review_result: {
                type: 'string',
                description:
                  'The product review decision by the TikTok Affiliate Partner. This is an enumerated type with values: - APPROVE - REJECT - REJECT_FOREVER',
              },
            },
            required: ['reject_reasons', 'review_result'],
            description: 'Request body',
          },
        },
        required: [
          'campaign_id',
          'product_id',
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate:
        '/affiliate_partner/202405/campaigns/{campaign_id}/products/{product_id}/review',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'product_id', in: 'path' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsCampaignIdPublishPost',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsCampaignIdPublishPost',
      description: `This API offers the ability to publish an Affiliate Partner campaign. The campaign will be displayed to sellers after publishing.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'campaign_id',
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_partner/202405/campaigns/{campaign_id}/publish',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsGet',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsGet',
      description: `This API offers the ability to list campaigns created by the Affiliate Partner.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_asset_cipher: { type: 'string' },
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          status: { type: 'string' },
          type: { type: 'string' },
          query_type_filter: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'category_asset_cipher',
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_partner/202405/campaigns',
      executionParameters: [
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'status', in: 'query' },
        { name: 'type', in: 'query' },
        { name: 'query_type_filter', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202405Api_CampaignsPost',
    {
      name: 'AffiliatePartnerV202405Api_CampaignsPost',
      description: `This API offers the ability to create a campaign for targeted sellers/public sellers, including campaign period, campaign registration period and commission requirements. Note: The campaign will not be displayed to sellers after creation`,
      inputSchema: {
        type: 'object',
        properties: {
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              campaign_end_time: {
                type: 'number',
                description:
                  'The scheduled end time in Unix epoch time format for the campaign. Note that the end time must be less than 360 days from the start date. This field is no longer editable when the campaign status is set to `CLOSED`.',
              },
              campaign_start_time: {
                type: 'number',
                description:
                  'The scheduled start time in Unix epoch time format for the campaign. Note that this field can be updated when the campaign status is set to `READY` or `UPCOMING` only.',
              },
              commission_rate: {
                type: 'number',
                description:
                  'The total commission rate in hundredths of a percent (0.01%) units proposed by the affiliate partner for display to sellers. Commission rate must be greater than 100 and less than 8000.',
              },
              contact_info: {
                type: 'object',
                properties: {
                  email: { type: 'string', description: "The partner\\'s email address." },
                  line: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in LINE. Required if the target market is TH; otherwise, not applicable.",
                  },
                  phone: { type: 'string', description: "The partner\\'s phone number." },
                  viber: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in Viber. Required if the target market is PH; otherwise, not applicable.",
                  },
                  whatsapp: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in WhatsApp. Required if the target market is MY, SG, GB, or ID, optional if the target market is US; otherwise, not applicable.",
                  },
                  zalo: {
                    type: 'string',
                    description:
                      "The partner\\'s phone number registered in Zalo. Required if the target market is VN; otherwise, not applicable.",
                  },
                },
                required: ['email', 'line', 'phone', 'viber', 'whatsapp', 'zalo'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              description: {
                type: 'string',
                description:
                  'The campaign description. The campaign description must be less than 1000 characters.',
              },
              name: {
                type: 'string',
                description:
                  'The campaign name. The campaign name must be less than 50 characters.',
              },
              registration_end_time: {
                type: 'number',
                description:
                  'The scheduled end time in Unix epoch time format for seller product registration. This field is no longer editable when the campaign status is set to `CLOSED`.',
              },
              registration_start_time: {
                type: 'number',
                description:
                  'The scheduled start time in Unix epoch format for seller product registration. Note that this field can be updated when the campaign status is set to `READY` or `UPCOMING` only.',
              },
              target_seller_types: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of eligible seller types to allow to register for the campaign. Use this field to broadly target types of sellers instead of specific sellers in the `target_shop_codes` field. This is an enumerated type with possible values: - LOCAL - CROSS_BORDER',
              },
              target_shop_codes: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of TikTok Shop seller shop codes to allow to register for the campaign. The seller shop code in available in TikTok Shop Seller Central by clicking on the Seller Profile icon in the top right of the user interface. The list must be less than 100 items in length.',
              },
            },
            required: [
              'campaign_end_time',
              'campaign_start_time',
              'commission_rate',
              'contact_info',
              'description',
              'name',
              'registration_end_time',
              'registration_start_time',
              'target_seller_types',
              'target_shop_codes',
            ],
            description: 'Request body',
          },
        },
        required: [
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_partner/202405/campaigns',
      executionParameters: [
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202411Api_OrdersSearchPost',
    {
      name: 'AffiliatePartnerV202411Api_OrdersSearchPost',
      description: `TAP can use this API to retrieve a list of affiliate orders and track the affiliate conversions.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          category_asset_cipher: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              campaign_id: {
                type: 'string',
                description: 'Filter orders by a TAP campaign using its identifier.',
              },
              create_time_ge: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created on or after the specified date and time. Unix timestamp.  Note: `create_time_ge` and `create_time_lt` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_lt` is empty, `create_time_lt` will default to the current time. - If `create_time_lt` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
            },
            required: ['campaign_id', 'create_time_ge', 'create_time_lt'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'category_asset_cipher',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_partner/202411/orders/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsPerformanceGet',
    {
      name: 'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsPerformanceGet',
      description: `This API offers the ability to get the product of the campaign fulfillment status for creators who added partner campaign products to their showcase. For details of a specified product involved in an affiliated campaign, use Get Affiliate Campaign Creator Fulfillment Status Info gateway.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'campaign_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_partner/202501/campaigns/{campaign_id}/products/performance',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsProductIdCreatorCreatorTempIdContentStatisticsGet',
    {
      name: 'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsProductIdCreatorCreatorTempIdContentStatisticsGet',
      description: `Get statistics on creator\\'s marketing video content`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          product_id: { type: 'string', description: 'productId identifier' },
          creator_temp_id: { type: 'string', description: 'creatorTempId identifier' },
          affiliate_product_id: { type: 'string', description: 'affiliateProductId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          content_type2: { type: 'string' },
          content_type: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'campaign_id',
          'product_id',
          'creator_temp_id',
          'affiliate_product_id',
          'x-tts-access-token',
          'content_type2',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate:
        '/affiliate_partner/202501/campaigns/{campaign_id}/products/{product_id}/creator/{creator_temp_id}/content/statistics',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'product_id', in: 'path' },
        { name: 'creator_temp_id', in: 'path' },
        { name: 'affiliate_product_id', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'content_type2', in: 'query' },
        { name: 'content_type', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsProductIdCreatorCreatorTempIdContentStatisticsSampleStatusGet',
    {
      name: 'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsProductIdCreatorCreatorTempIdContentStatisticsSampleStatusGet',
      description: `Get progress on creator\\'s sample status`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          product_id: { type: 'string', description: 'productId identifier' },
          creator_temp_id: { type: 'string', description: 'creatorTempId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'campaign_id',
          'product_id',
          'creator_temp_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate:
        '/affiliate_partner/202501/campaigns/{campaign_id}/products/{product_id}/creator/{creator_temp_id}/content/statistics/sample/status',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'product_id', in: 'path' },
        { name: 'creator_temp_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsProductIdPerformanceGet',
    {
      name: 'AffiliatePartnerV202501Api_CampaignsCampaignIdProductsProductIdPerformanceGet',
      description: `This API offers the ability to get the product fulfillment status for creators who added partner campaign products to their showcase`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'campaign_id',
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate:
        '/affiliate_partner/202501/campaigns/{campaign_id}/products/{product_id}/performance',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliatePartnerV202505Api_CampaignsCampaignIdProductsPromotionLinksGenerateBatchPost',
    {
      name: 'AffiliatePartnerV202505Api_CampaignsCampaignIdProductsPromotionLinksGenerateBatchPost',
      description: `This API offers the ability to generate promotion links for multiple products in a campaign.`,
      inputSchema: {
        type: 'object',
        properties: {
          campaign_id: { type: 'string', description: 'campaignId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          category_asset_cipher: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'The list of product IDs. The max length is 50.',
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'campaign_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate:
        '/affiliate_partner/202505/campaigns/{campaign_id}/products/promotion_links/generate_batch',
      executionParameters: [
        { name: 'campaign_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'category_asset_cipher', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_OpenCollaborationSettingsPost',
    {
      name: 'AffiliateSellerV202405Api_OpenCollaborationSettingsPost',
      description: `This API is used to edit a Seller\\'s open collaboration settings. It allows you to enroll your existing product catalog and all future products into an open collaboration plan. It also allows you to turn this setting off at any point. By default, this option is turned off for all Sellers.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              auto_add_product: {
                type: 'object',
                properties: {
                  commission_rate: {
                    type: 'number',
                    description:
                      'The commission rate in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `100` and a maximum of `8000`. Not that setting the `enable` property to `false` overrides this property.',
                  },
                  enable: {
                    type: 'boolean',
                    description:
                      'Set to `true` if products are automatically added to affiliate open collaboration plans. The seller can add existing non-affiliate products to open collaboration at one time, and future products are added automatically. Set to `false` if otherwise.',
                  },
                },
                required: ['commission_rate', 'enable'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['auto_add_product'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202405/open_collaboration_settings',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_OpenCollaborationsOpenCollaborationIdRemoveCreatorPost',
    {
      name: 'AffiliateSellerV202405Api_OpenCollaborationsOpenCollaborationIdRemoveCreatorPost',
      description: `This API is used to remove creators from open collaboration. Please note, due to current platform design, creators can still rejoin an open collaboration after removal. Partners/Sellers can call this API again to remove the creator again.`,
      inputSchema: {
        type: 'object',
        properties: {
          open_collaboration_id: { type: 'string', description: 'openCollaborationId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_user_id: {
                type: 'string',
                description: 'The creator TikTok user identifier.',
              },
              product_id: { type: 'string', description: 'The product identifier.' },
            },
            required: ['creator_user_id', 'product_id'],
            description: 'Request body',
          },
        },
        required: [
          'open_collaboration_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate:
        '/affiliate_seller/202405/open_collaborations/{open_collaboration_id}/remove_creator',
      executionParameters: [
        { name: 'open_collaboration_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_OpenCollaborationsPost',
    {
      name: 'AffiliateSellerV202405Api_OpenCollaborationsPost',
      description: `This API allows the seller to create an open collaboration. You create an open collaboration by selecting products and setting a commission rate.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              commission_rate: {
                type: 'number',
                description:
                  'The desired commission rate for the open collaboration. The desired commission rate is expressed in hundredths of a pecent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `100`.',
              },
              product_id: {
                type: 'string',
                description: 'The product ID for adding to the affiliate open collaboration.',
              },
              require_seller_approve_creator: {
                type: 'boolean',
                description:
                  'Set to `true` if the open collaboration plan requires approval for additional creator product applications. Set to `false` if the open collaboration plan does not require additional creator product applications. Default: `false`.',
              },
            },
            required: ['commission_rate', 'product_id', 'require_seller_approve_creator'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202405/open_collaborations',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_OpenCollaborationsProductsSearchPost',
    {
      name: 'AffiliateSellerV202405Api_OpenCollaborationsProductsSearchPost',
      description: `This API is used to search the information of products with open collaboration by category, commission rate, and keywords. It will return all products on the TikTok Shop Affiliate Product Marketplace that are in an open collaboration. Sellers can only search for open collaboration within the regions they are registered to sell in.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          sort_field: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              category: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The category identifier. Note that only first-level categories are supported.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              commission_rate_range: {
                type: 'object',
                properties: {
                  rate_ge: {
                    type: 'number',
                    description:
                      'The commission rate must be greater than this value in order to be included in the search results. The commission rate is expressed in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `1000`.',
                  },
                  rate_lt: {
                    type: 'number',
                    description:
                      'The commission rate must be less than this value in order to be included in the search results. The commission rate is expressed in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `1000`.',
                  },
                },
                required: ['rate_ge', 'rate_lt'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              sales_price_range: {
                type: 'object',
                properties: {
                  amount_ge: {
                    type: 'string',
                    description:
                      'The product price must be greater than this value in order to be included in the search results. The value must be greater than `0`.',
                  },
                  amount_lt: {
                    type: 'string',
                    description:
                      'The product price must be greater than this value in order to be included in the search results. The value must be greater than `0`. No upper bound is set if this property is not included.',
                  },
                },
                required: ['amount_ge', 'amount_lt'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              title_keywords: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of product keywords. Product titles, or names, are loosely matched. Keywords in the list form a query and the resulting set of matching product names is based on the conjunctive operator `AND` between each keyword. For example, the keyword list `[\\"Men\\", \\"Fashion\\"]` creates a query `\\"Men\\" AND \\"Fashion\\"` and the resulting set of matching product names contains the loosely matched conjuction of \\"Men\\" and \\"Fashion\\" such as \\"Male Fashionable\\". Maximum length of the list is 20 keywords. Maximum keyword string length is 255 characters.',
              },
            },
            required: ['category', 'commission_rate_range', 'sales_price_range', 'title_keywords'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202405/open_collaborations/products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'sort_field', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_OrdersSearchPost',
    {
      name: 'AffiliateSellerV202405Api_OrdersSearchPost',
      description: `This API allows the partner to retrieve a list of affiliate orders (orders which are affiliate-commission eligible) generated by a seller, returning the order ID and the product ID. Using this, the partner can track their affiliate-conversions on behalf of a seller, using the order ID. For now, this API returns all historical Affiliate Orders. We do not provide any filtering mechanisms (based on timestamp) at this time. We will provide this functionality in a future iteration. Thus this API is technically a \\"Get Affiliate Orders List\\" at this stage, but it will be improved in the future to be a search based API (with robust filtering).`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          version: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202405/orders/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_ProductsProductIdPromotionLinkGeneratePost',
    {
      name: 'AffiliateSellerV202405Api_ProductsProductIdPromotionLinkGeneratePost',
      description: `The user of this API is a partner developer, on behalf of Sellers. This API is used to generate affiliate exclusive product link based on all open collaboration products available within the TikTok Shop Affiliate Product Marketplace. This API generates a link, at the product ID level (which belongs to a Seller). This link, can be distributed to creators, by the partner developer(the user of this API). The creator adds this product to the creators\\' showcase through this url. This link, represents an affiliate partner\\'s ability to bring higher matchmaking effectiveness on behalf of a seller. If a creator does indeed add the product to showcase through this link, then the downstream consumer purchases will be able to be attributed to this partner due to the link generation capabilities.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202405/products/{product_id}/promotion_link/generate',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202405Api_TargetCollaborationsPost',
    {
      name: 'AffiliateSellerV202405Api_TargetCollaborationsPost',
      description: `This API is used to create a target collaboration. A target collaboration is a collaboration between a seller selected set of products (including a commission payout) and a set of creators the seller has added (invited) to the collaboration. Target collaborations are private and not visible in the Creator Marketplace to all creators; they are only visible to those that have been added to the collaboration.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_user_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of TikTok user identifiers to invite to the target collaboration. Maximum length of the list is `50` user identifiers.',
              },
              end_time: {
                type: 'string',
                description: 'The date at which the target collaboration ends, in Unix epoch time.',
              },
              free_sample_rule: {
                type: 'object',
                properties: {
                  has_free_sample: {
                    type: 'boolean',
                    description:
                      'If set to `true`, free samples are provided to creators invited to the target collaboration group. If set to `false`, free samples are not provided.',
                  },
                  is_sample_approval_exempt: {
                    type: 'boolean',
                    description:
                      'If set to `true`, creators invited to the target collaboration are exempt from seller review and are automatically approved for a free  product sample. Note that the `has_free_sample` property overrides the free sample behavior.',
                  },
                },
                required: ['has_free_sample', 'is_sample_approval_exempt'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              message: {
                type: 'string',
                description:
                  'The message sent to creators associated with the target collaboration.',
              },
              name: { type: 'string', description: 'The name of the target collaboration.' },
              products: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: { type: 'string', description: 'The product identifier.' },
                    target_commission_rate: {
                      type: 'number',
                      description:
                        'The desired commission rate for the target collaboration. The desired commission rate is expressed in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `1000`.',
                    },
                  },
                  required: ['id', 'target_commission_rate'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of metadata and data for the products provided by the seller for target collaboration. Maximum length of the list is `100` products.',
              },
              seller_contact_info: {
                type: 'object',
                properties: {
                  email: { type: 'string', description: "The seller\\'s email address." },
                },
                required: ['email'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'creator_user_ids',
              'end_time',
              'free_sample_rule',
              'message',
              'name',
              'products',
              'seller_contact_info',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202405/target_collaborations',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202406Api_MarketplaceCreatorsCreatorUserIdGet',
    {
      name: 'AffiliateSellerV202406Api_MarketplaceCreatorsCreatorUserIdGet',
      description: `Get the Creator Affiliate\\'s Marketplace information and performance metrics in the last 30 days.`,
      inputSchema: {
        type: 'object',
        properties: {
          creator_user_id: { type: 'string', description: 'creatorUserId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'creator_user_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202406/marketplace_creators/{creator_user_id}',
      executionParameters: [
        { name: 'creator_user_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202406Api_MarketplaceCreatorsSearchPost',
    {
      name: 'AffiliateSellerV202406Api_MarketplaceCreatorsSearchPost',
      description: `This API is used by Sellers to search for Creators in the Creator Marketplace. Sellers can search based on filters such as GMV, keywords, and Creator follower demographics. All the data returned is for the last 30 days.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              follower_demographics: {
                type: 'object',
                properties: {
                  age_ranges: {
                    type: 'array',
                    items: { type: 'string' },
                    description:
                      'Follower age filtering options, which are range intervals, include:  AGE_RANGE_18_24: \\"18-24\\",  AGE_RANGE_25_34: \\"25-34\\",  AGE_RANGE_35_44: \\"35-44\\",  AGE_RANGE_45_54: \\"45-54\\",  AGE_RANGE_55_AND_ABOVE: \\"55+\\"',
                  },
                  count_range: {
                    type: 'object',
                    properties: {
                      count_ge: {
                        type: 'number',
                        description:
                          'The minimum value of follower count.  The value passed in must be greater than or equal to 0',
                      },
                      count_le: {
                        type: 'number',
                        description:
                          'The maximum value of follower count.  - Generally, a value greater than or equal to 0 needs to be passed. If a value less than 0 is passed, it means that the field will not be filtered.',
                      },
                    },
                    required: ['count_ge', 'count_le'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  gender_distribution: {
                    type: 'object',
                    properties: {
                      gender: {
                        type: 'string',
                        description: 'A particular gender, \\"MALE\\" or \\"FEMALE\\"',
                      },
                      percentage_ge: {
                        type: 'number',
                        description:
                          'Greater than or equal to a certain percentage, scaled up by 10,000 times.  For example, 6000 stands for 0.6 or 60%',
                      },
                    },
                    required: ['gender', 'percentage_ge'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['age_ranges', 'count_range', 'gender_distribution'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              gmv_ranges: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filtering by GMV range intervals which include:  GMV_RANGE_0_100: \\"0-100\\",  GMV_RANGE_100_1000: \\"100-1000\\",  GMV_RANGE_1000_10000: \\"1000-10000\\",  GMV_RANGE_10000_AND_ABOVE: \\"10000+\\" For example:  - If GMV_RANGE_0_100 is passed, it means filtering the creator data that is greater than or equal to 0 and less than or equal to 100. - If GMV_RANGE_0_100 and GMV_RANGE_100_1000 are passed, it means to filter the creator data that is greater than or equal to 0 and less than or equal to 1000.',
              },
              keyword: {
                type: 'string',
                description:
                  'Searching creators by keyword, matching based on TikTok Username and Nickname.',
              },
              search_key: {
                type: 'string',
                description:
                  "Caching search results improves api performance and ensures stable request results. You don\\'t need to pass a value on the first call.  For the second call, please pass the value returned in the response of the first call.",
              },
              units_sold_ranges: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filtering by sales volume range intervals which include:  UNITS_SOLD_RANGE_0_10: \\"0-10\\",  UNITS_SOLD_RANGE_10_100: \\"10-100\\",  UNITS_SOLD_RANGE_100_1000: \\"100-1000\\",  UNITS_SOLD_RANGE_1000_AND_ABOVE: \\"1000+\\" For example:  - If UNITS_SOLD_RANGE_0_10 is passed, it means filtering the creator data that is greater than or equal to 0 and less than or equal to 10. - If UNITS_SOLD_RANGE_0_10 and UNITS_SOLD_RANGE_10_100 are passed, it means to filter the creator data that is greater than or equal to 0 and less than or equal to 100.',
              },
            },
            required: [
              'follower_demographics',
              'gmv_ranges',
              'keyword',
              'search_key',
              'units_sold_ranges',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202406/marketplace_creators/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_OpenCollaborationSettingsGet',
    {
      name: 'AffiliateSellerV202409Api_OpenCollaborationSettingsGet',
      description: `Get the open collaboration settings, including auto add settings.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202409/open_collaboration_settings',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_OpenCollaborationsProductsProductIdDelete',
    {
      name: 'AffiliateSellerV202409Api_OpenCollaborationsProductsProductIdDelete',
      description: `Remove open collaboration for product.  You can only remove open collaboration when \`status==NORMAL\`. When you call this API, the open collaborations will be terminated at \`terminated_effective_time\`, not immediately, to protect the interests of the creators. After \`terminated_effective_time\`, the open collaboration is officially terminated and can not be found in the response in [Search Open Collaboration].`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/affiliate_seller/202409/open_collaborations/products/{product_id}',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_OpenCollaborationsSearchPost',
    {
      name: 'AffiliateSellerV202409Api_OpenCollaborationsSearchPost',
      description: `Retrieve all open collaboration information from merchants, including commission rate, add to showcase and post content creator count.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          sort_field: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Search based on the product name or product ID. Pass in the appropriate value based on the keyword_type above.',
              },
              keyword_type: {
                type: 'string',
                description:
                  'Pass in the parameter type which you use to query open collaborations.  You can query based on: - PRODUCT_ID：If you use PRODUCT_ID  to search, you can search for open collaboration information for a specified product ID. - PRODUCT_NAME: If you use PRODUCT_NAME to search, you can fuzzy search for open collaboration information involving related product names.',
              },
              top_level_category_id: {
                type: 'string',
                description:
                  'The category of the searched product needs to be limited in this param. Prerequisites: - The value of field category_id must be greater than 0. - Currently, it only supports first-level categories',
              },
            },
            required: ['keyword', 'keyword_type', 'top_level_category_id'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202409/open_collaborations/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'sort_field', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_SampleApplicationsApplicationIdFulfillmentsSearchPost',
    {
      name: 'AffiliateSellerV202409Api_SampleApplicationsApplicationIdFulfillmentsSearchPost',
      description: `You, the seller, can use this API to get the fulfillment status of the specific sample application and whether the fulfillment resulted in orders. This allows Sellers to track the current progress or analyze the results of their sample distribution program.`,
      inputSchema: {
        type: 'object',
        properties: {
          application_id: { type: 'string', description: 'applicationId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              content_format: {
                type: 'string',
                description:
                  'The content type generated by the creator after receiving the samples. Possible enumerations:  - LIVE - VIDEO',
              },
            },
            required: ['content_format'],
            description: 'Request body',
          },
        },
        required: [
          'application_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate:
        '/affiliate_seller/202409/sample_applications/{application_id}/fulfillments/search',
      executionParameters: [
        { name: 'application_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_SampleApplicationsApplicationIdReviewPost',
    {
      name: 'AffiliateSellerV202409Api_SampleApplicationsApplicationIdReviewPost',
      description: `This API allows the seller to approve or reject the creator\\'s sample application in an open collaboration. When rejecting an application, the seller must provide a specific reason. This API facilitates the management of sample applications by giving sellers the ability to review and update applications according to their criteria and requirements.`,
      inputSchema: {
        type: 'object',
        properties: {
          application_id: { type: 'string', description: 'applicationId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              reject_reason: {
                type: 'string',
                description:
                  "The reason why a seller rejected a creator\\'s sample application. The possible enumerated values are: - NOT_MATCH: The creator does not meet the seller\\'s collaboration requirements. - OFFLINE: The product has been taken offline. - OUT_OF_STOCK: The product is temporarily out of stock. - OTHER: Any other reason not covered by the above categories. Required if the review_result is set to REJECT This field allows the seller to specify the reason for rejecting a sample application, providing clarity to the creator regarding the rejection.",
              },
              review_result: {
                type: 'string',
                description:
                  'The audit action to be taken on a sample application record by the seller. The field accepts one of four enumerated values: - APPROVE: Approves the sample application. - REJECT: Rejects the sample application. This field allows the seller to specify the desired operation to manage the sample application record effectively.',
              },
            },
            required: ['reject_reason', 'review_result'],
            description: 'Request body',
          },
        },
        required: [
          'application_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202409/sample_applications/{application_id}/review',
      executionParameters: [
        { name: 'application_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_SampleApplicationsSearchPost',
    {
      name: 'AffiliateSellerV202409Api_SampleApplicationsSearchPost',
      description: `This API is provided for sellers to query sample applications based on various criteria such as products, creators, or application statuses. By using this API, sellers can retrieve detailed information about sample application records, including the creator\\'s information and the specifics of each application.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_user_id: { type: 'string', description: 'TikTok User ID of a creator' },
              order_id: {
                type: 'string',
                description:
                  'Main order ID associated with a sample order when the sample application is approved by seller.',
              },
              product_id: {
                type: 'string',
                description:
                  "The unique identifier of a product. It is used to specify which product\\'s sample application details are being queried.",
              },
              status: {
                type: 'string',
                description:
                  "The status of sample applications. The possible enumerated values are: - PENDING: The sample application is waiting for the seller\\'s review. - AWAITING_SHIPMENT: The application is approved, and the seller needs to ship the sample. - SHIPPED: The sample has been shipped by the seller and is waiting for the creator to receive the package. - CONTENT_PENDING: The creator has received the sample package and is expected to create content. - REJECT_CANCELLED: The sample application has been rejected by the seller. - OVERDUE_CANCELLED: The sample application has expired due to being overdue. - UNFULFILL_CANCELLED: The creator did not fulfill the commitment to create content within the agreed timeframe. - DEL_OPEN_COLLAB: Open collaboration has been deleted. - SELLER_NOT_SHIP_CANCELLED: The seller did not ship the sample within the required timeframe. - WITHDRAW_CANCELLED: The creator withdrew the sample application before the seller approved it. - UNFULFILLABLE_CANCELLED: The application was cancelled due to reasons beyond the creator\\'s control, making it impossible to create content. - OPS_CANCELLED: The application was manually cancelled by operations staff. - OPS_FAILED: The application was marked as failed by operations staff. - OPS_COMPLETED: The application was manually marked as completed by operations staff. - COMPLETED: The application is complete, and the creator has posted the content. This field allows for tracking the status of a sample application throughout its lifecycle, providing visibility into each stage of the process for sellers and creators.",
              },
              target_collabration_id: {
                type: 'string',
                description: 'The unique ID generated after creating a target collaboration.',
              },
              title: {
                type: 'string',
                description:
                  'Product name, supports fuzzy search queries. It allows sellers to search for products by name when managing sample applications.',
              },
              username: {
                type: 'string',
                description: 'TikTok User Name of a creator, supports fuzzy search',
              },
            },
            required: [
              'creator_user_id',
              'order_id',
              'product_id',
              'status',
              'target_collabration_id',
              'title',
              'username',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202409/sample_applications/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_TargetCollaborationsSearchPost',
    {
      name: 'AffiliateSellerV202409Api_TargetCollaborationsSearchPost',
      description: `This API is used by Seller to search for all existing target collaborations. Sellers can search based on filters such as Invitation name, Invitation ID, Product name, Product ID and Creator name.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              collaboration_status: {
                type: 'string',
                description:
                  "Filtering by target collaborations\\' status. You can query based on: - ONGOING: If you use ONGOING to search, the remaining validity period of the returned target collaborations will be greater than 7 days. - EXPIRING: If you use EXPIRING to search, the remaining validity period of the returned target collaborations will be less than 7 days. - VALID: If you use VALID to search, all returned target collaborations will be valid. - CANCELING: If you use CANCELING to search, all returned target collaborations will be in the process of canceling. - COMPLETED: If you use COMPLETED to search, all returned target collaborations will be in the state of completed, including expired and canceled.",
              },
              creator_accept_status: {
                type: 'string',
                description:
                  'Filtering by acceptance status of creators who are invited to target collaborations. You can query based on: - \\"ACCEPT\\", it means creators have already added the products to the showcase - \\"ALL\\"\\"\\", it means regardless of whether the creator adds the product to the Showcase. By default, the target collaborations will be searched by \\"ALL\\" status.',
              },
              creator_user_id: {
                type: 'string',
                description:
                  "Creators\\' TikTok User ID.  - CREATOR_ID: If you use CREATOR_ID  to search, you can search for target collaboration information for a specified creator ID.",
              },
              free_sample_setting: {
                type: 'string',
                description:
                  'Filtering by target collaborations\\\' free sample setting. You can query based on: - \\"WITH_FREE_SAMPLE\\" - \\"ALL\\" By default, the target collaborations will be searched by \\"ALL\\" setting.',
              },
              search_param: {
                type: 'object',
                properties: {
                  keyword: { type: 'string', description: 'Search Keyword.' },
                  keyword_type: {
                    type: 'string',
                    description:
                      'Pass in the parameter type which you use to search for target collaborations.  You can query based on: - PRODUCT_ID：If you use PRODUCT_ID  to search, you can search for target collaboration information for a specified product ID. - PRODUCT_NAME: If you use PRODUCT_NAME to search, you can fuzzy search for target collaboration information involving related product names. - TARGET_COLLABORATION_ID: if you use Target_Collaboration_ID to search, you can search for target collaboration information for a specified target collaboration ID. - TARGET_COLLABORATION_NAME: If you use Target_Collaboration_NAME to search, you can fuzzy search for target collaboration information involving related target collaboration names.',
                  },
                },
                required: ['keyword', 'keyword_type'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'collaboration_status',
              'creator_accept_status',
              'creator_user_id',
              'free_sample_setting',
              'search_param',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202409/target_collaborations/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_TargetCollaborationsTargetCollaborationIdGet',
    {
      name: 'AffiliateSellerV202409Api_TargetCollaborationsTargetCollaborationIdGet',
      description: `This API is used by Sellers to get target collaboration information.`,
      inputSchema: {
        type: 'object',
        properties: {
          target_collaboration_id: {
            type: 'string',
            description: 'targetCollaborationId identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'target_collaboration_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202409/target_collaborations/{target_collaboration_id}',
      executionParameters: [
        { name: 'target_collaboration_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_TargetCollaborationsTargetCollaborationIdPut',
    {
      name: 'AffiliateSellerV202409Api_TargetCollaborationsTargetCollaborationIdPut',
      description: `This API is used by Seller to update STANDARD target collaboration.`,
      inputSchema: {
        type: 'object',
        properties: {
          target_collaboration_id: {
            type: 'string',
            description: 'targetCollaborationId identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_user_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The list of Creators\\' TikTok User IDs invited in the target collaboration. The maximum number of creators is 50.",
              },
              end_time: {
                type: 'string',
                description: 'The end time of the target collaboration.',
              },
              free_sample_rule: {
                type: 'object',
                properties: {
                  has_free_sample: {
                    type: 'boolean',
                    description:
                      'If true, free samples are provided to creators invited to the target collaboration.',
                  },
                  is_sample_approval_exempt: {
                    type: 'boolean',
                    description:
                      'If true, creators invited to the target collaboration are exempt from seller review and will automatically be approved for a free sample. Note that if has_free_sample=false, this field will not take effect.',
                  },
                },
                required: ['has_free_sample', 'is_sample_approval_exempt'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              name: { type: 'string', description: 'The name of the target collaboration.' },
              products: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    commission_rate: {
                      type: 'number',
                      description:
                        'The desired commission rate for the target collaboration. The value is measured in ten thousandths. For example, 3587 means the commission fee equals 35.87% of the original price. The range is [100, 8000]. Increasing product commissions will take effect immediately, while reducing product commissions will take effect at 00:00 the next day if the current product has been added to the showcase by a creator, otherwise it will take effect immediately.',
                    },
                    id: { type: 'string', description: 'The product identifier.' },
                  },
                  required: ['commission_rate', 'id'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The information about the products provided by the seller for target collaboration with creators in the target collaboration. The maximum number of products is 100. When a product is deleted from the product list, if the deleted product has been added to the showcase by the creator, it will take effect at 0:00 the next day, otherwise it will take effect immediately.',
              },
              seller_contact_info: {
                type: 'object',
                properties: {
                  email: { type: 'string', description: "Seller\\'s email contact information" },
                },
                required: ['email'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'creator_user_ids',
              'end_time',
              'free_sample_rule',
              'name',
              'products',
              'seller_contact_info',
            ],
            description: 'Request body',
          },
        },
        required: [
          'target_collaboration_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'put',
      pathTemplate: '/affiliate_seller/202409/target_collaborations/{target_collaboration_id}',
      executionParameters: [
        { name: 'target_collaboration_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202409Api_TargetCollaborationsTargetCollaborationIdDelete',
    {
      name: 'AffiliateSellerV202409Api_TargetCollaborationsTargetCollaborationIdDelete',
      description: `This API is used by Seller to remove affiliate target collaboration.`,
      inputSchema: {
        type: 'object',
        properties: {
          target_collaboration_id: {
            type: 'string',
            description: 'targetCollaborationId identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'target_collaboration_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/affiliate_seller/202409/target_collaborations/{target_collaboration_id}',
      executionParameters: [
        { name: 'target_collaboration_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202410Api_OpenCollaborationsSampleRulesGet',
    {
      name: 'AffiliateSellerV202410Api_OpenCollaborationsSampleRulesGet',
      description: `Use this API to get the status and the details of the sample rules for products under an open collaboration. With this API, you can efficiently review the sample distribution criteria for products within the open collaboration context.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'productIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'product_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202410/open_collaborations/sample_rules',
      executionParameters: [
        { name: 'product_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202410Api_OpenCollaborationsSampleRulesPost',
    {
      name: 'AffiliateSellerV202410Api_OpenCollaborationsSampleRulesPost',
      description: `Use this API to manage sample rules in open collaborations, like valid time periods, or thresholds for creators to request samples. You can create, update, or deactivate rules.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_id: {
                type: 'string',
                description:
                  'The product ID to which the sample rule applies. You can only assign one sample rule for one `product_id`. Only the most recent API call will take effect.',
              },
              sample_rule: {
                type: 'object',
                properties: {
                  activate_status: {
                    type: 'string',
                    description:
                      'To activate the sample rule, use `ACTIVATE`; to deactivate the sample rule, use `DEACTIVATE`. When using `ACTIVATE`, you must specify the details of the rule; when using `DEACTIVATE`, you just need to specify `product_id`.',
                  },
                  end_time: {
                    type: 'number',
                    description:
                      'The end time of the period during which a creator can apply for samples. You must specify `start_time` and `end_time` together.',
                  },
                  is_sample_time_unlimited: {
                    type: 'boolean',
                    description:
                      'Whether the sample is always available for application: - If true, the sample can be requested at any time. - If false, the sample can only be requested during specified time periods. You must set start_time and end_time.',
                  },
                  sample_quota: {
                    type: 'number',
                    description:
                      'The total quantity of the samples provided by the seller that the creators can apply for.',
                  },
                  start_time: {
                    type: 'number',
                    description:
                      'The start time of the period during which a creator can apply for samples. You must specify `start_time` and `end_time` together.',
                  },
                  thresholds: {
                    type: 'object',
                    properties: {
                      avg_ec_video_views: {
                        type: 'number',
                        description:
                          'The creator must have the average views of e-commerce videos in the past 30 days greater than this value to be eligible to request the sample.',
                      },
                      category_ids: {
                        type: 'array',
                        items: { type: 'string' },
                        description:
                          "A list of product first-level category IDs. Use this to limit participating creators: for each creator, sort their GMV over the past 30 days by first-level product category. If the GMV of one of the categories is among the top three, the creator is eligible to participate in the event. No restriction by default. For example, if a creator\\'s top three categories are [{Cellphone_ID}, {Furniture_ID}, {Food_ID}], and the value of tehis parameter is `[{Food_ID}]`, the creator is qualified for open collaboration.",
                      },
                      minimum_follower_count: {
                        type: 'number',
                        description:
                          'The creator must have a follower count greater than this value to be eligible to request the sample.',
                      },
                      minimum_gmv: {
                        type: 'number',
                        description:
                          'The creator must have the GMV in the past 30 days greater than this value to be eligible to request the sample.',
                      },
                      predicted_fulfillment_rank: {
                        type: 'string',
                        description:
                          'The creators whose predicted rate of posting a shoppable video or LIVE after receiving a sample. - ALL. All creators regardless of the rate. - LOW. The creators whose rate is above or equal to low. - MEDIUM. The creators whose rate is above or equal to medium. - HIGH. The creators whose rate is high.',
                      },
                    },
                    required: [
                      'avg_ec_video_views',
                      'category_ids',
                      'minimum_follower_count',
                      'minimum_gmv',
                      'predicted_fulfillment_rank',
                    ],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: [
                  'activate_status',
                  'end_time',
                  'is_sample_time_unlimited',
                  'sample_quota',
                  'start_time',
                  'thresholds',
                ],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['product_id', 'sample_rule'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202410/open_collaborations/sample_rules',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202410Api_OrdersSearchPost',
    {
      name: 'AffiliateSellerV202410Api_OrdersSearchPost',
      description: `This API allows the partner to retrieve a list of affiliate orders (orders which are affiliate-commission eligible) generated by a seller, returning the order ID and the product ID. Using this, the partner can track their affiliate-conversions on behalf of a seller, using the order ID.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              create_time_ge: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created on or after the specified date and time. Unix timestamp.  Note: `create_time_ge` and `create_time_lt` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_lt` is empty, `create_time_lt` will default to the current time. - If `create_time_lt` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
              program_id: {
                type: 'string',
                description:
                  'Filter orders by the associated affiliate program. This can be a campaign ID, target collaboration ID, or open collaboration ID.',
              },
            },
            required: ['create_time_ge', 'create_time_lt', 'program_id'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202410/orders/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_ConversationConversationIdMessagesGet',
    {
      name: 'AffiliateSellerV202412Api_ConversationConversationIdMessagesGet',
      description: `Get chat history in one conversation.`,
      inputSchema: {
        type: 'object',
        properties: {
          conversation_id: { type: 'string', description: 'conversationId identifier' },
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'conversation_id',
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202412/conversation/{conversation_id}/messages',
      executionParameters: [
        { name: 'conversation_id', in: 'path' },
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_ConversationsConversationIdMessagesPost',
    {
      name: 'AffiliateSellerV202412Api_ConversationsConversationIdMessagesPost',
      description: `The API for sending IM messages.`,
      inputSchema: {
        type: 'object',
        properties: {
          conversation_id: { type: 'string', description: 'conversationId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              content: {
                type: 'string',
                description:
                  'Message content, in JSON serialized string. Examples: - TEXT: {\\"content\\": \\"simple text\\"} - PRODUCT_CARD: {\\"product_id\\": \\"12345\\"} - TARGET_ COLLABORATION_CARD {\\"target_collaboration_id\\": \\"1234\\"} - FREE_SAMPLE_CARD {\\"apply_id\\": \\"1234\\"}  target_collaboration_id is Invitation group id.',
              },
              msg_type: {
                type: 'string',
                description:
                  'Message type, with possible values: - TEXT - PRODUCT_CARD - TARGET_ COLLABORATION_CARD - FREE_SAMPLE_CARD Sending pictures is not currently supported.',
              },
            },
            required: ['content', 'msg_type'],
            description: 'Request body',
          },
        },
        required: [
          'conversation_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202412/conversations/{conversation_id}/messages',
      executionParameters: [
        { name: 'conversation_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_ConversationsGet',
    {
      name: 'AffiliateSellerV202412Api_ConversationsGet',
      description: `Get User\\'s Conversation list.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          only_need_conversation_id: {
            type: 'boolean',
            description: 'onlyNeedConversationId? identifier',
          },
          conversation_status: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              only_need_conversation_id: {
                type: 'boolean',
                description:
                  '- If `true`, only `conversation_id` in `data.conversation` is returned.  - If `false`, all fields in `data.conversation` are returned. `true` by default.',
              },
            },
            required: ['only_need_conversation_id'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202412/conversations',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'only_need_conversation_id', in: 'query' },
        { name: 'conversation_status', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_ConversationsPost',
    {
      name: 'AffiliateSellerV202412Api_ConversationsPost',
      description: `Get the existing conversation or create a new conversation with the specified TikTok creator for later communication.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_id: { type: 'string', description: "Creators\\' TikTok User ID." },
              only_need_conversation_id: {
                type: 'boolean',
                description:
                  '- If `true`, only `conversation_id` in `data.conversation` is returned.  - If `false`, all fields in `data.conversation` are returned. `true` by default.',
              },
            },
            required: ['creator_id', 'only_need_conversation_id'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202412/conversations',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_ConversationsMessagesListNewestGet',
    {
      name: 'AffiliateSellerV202412Api_ConversationsMessagesListNewestGet',
      description: `Get the unread messages from the last minute. You are recommended to use the Webhook, New Message Listener, for the message notification.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202412/conversations/messages/list/newest',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_ConversatonsReadPost',
    {
      name: 'AffiliateSellerV202412Api_ConversatonsReadPost',
      description: `Mark the messages in the specified conversations to be read.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              conversation_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The array of conversations to read. After the API is called, all the messages in the specified conversations will be read, and the read timestamp is set to the time when the API is called. The length of the array must not exceed `20`.',
              },
            },
            required: ['conversation_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202412/conversatons/read',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_OpenCollaborationsCreatorContentDetailsGet',
    {
      name: 'AffiliateSellerV202412Api_OpenCollaborationsCreatorContentDetailsGet',
      description: `This API allows the seller to get the creator content details of specified open collaboration.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202412/open_collaborations/creator_content_details',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'product_id', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_OpenCollaborationsPost',
    {
      name: 'AffiliateSellerV202412Api_OpenCollaborationsPost',
      description: `This API allows the seller to create an open collaboration. You create an open collaboration by selecting products and setting a commission rate.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              commission_rate: {
                type: 'number',
                description:
                  'The desired commission rate for the open collaboration. The desired commission rate is expressed in hundredths of a percent. For example, `3587` is a commission rate of `35.87%`. This value must a minimum of `100`.',
              },
              product_id: {
                type: 'string',
                description: 'The product ID for adding to the affiliate open collaboration.',
              },
            },
            required: ['commission_rate', 'product_id'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202412/open_collaborations',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_OpenCollaborationsSearchPost',
    {
      name: 'AffiliateSellerV202412Api_OpenCollaborationsSearchPost',
      description: `Retrieve all open collaboration information from merchants, including commission rate, add to showcase and post content creator count.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          sort_field: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Search based on the product name or product ID. Pass in the appropriate value based on the keyword_type above.',
              },
              keyword_type: {
                type: 'string',
                description:
                  'Pass in the parameter type which you use to query open collaborations.  You can query based on: - PRODUCT_ID：If you use PRODUCT_ID  to search, you can search for open collaboration information for a specified product ID. - PRODUCT_NAME: If you use PRODUCT_NAME to search, you can fuzzy search for open collaboration information involving related product names.',
              },
              top_level_category_id: {
                type: 'string',
                description:
                  'The category of the searched product needs to be limited in this param. Prerequisites: - The value of field category_id must be greater than 0. - Currently, it only supports first-level categories',
              },
            },
            required: ['keyword', 'keyword_type', 'top_level_category_id'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202412/open_collaborations/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'sort_field', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202412Api_TargetCollaborationsTargetCollaborationIdGet',
    {
      name: 'AffiliateSellerV202412Api_TargetCollaborationsTargetCollaborationIdGet',
      description: `This API is used by Sellers to get target collaboration information.`,
      inputSchema: {
        type: 'object',
        properties: {
          target_collaboration_id: {
            type: 'string',
            description: 'targetCollaborationId identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'target_collaboration_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202412/target_collaborations/{target_collaboration_id}',
      executionParameters: [
        { name: 'target_collaboration_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202505Api_ConversationsGet',
    {
      name: 'AffiliateSellerV202505Api_ConversationsGet',
      description: `Get User\\'s Conversation list.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          only_need_conversation_id: {
            type: 'boolean',
            description: 'onlyNeedConversationId? identifier',
          },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              only_need_conversation_id: {
                type: 'boolean',
                description:
                  '- If `true`, only `conversation_id` in `data.conversation` is returned.  - If `false`, all fields in `data.conversation` are returned. `true` by default.',
              },
            },
            required: ['only_need_conversation_id'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202505/conversations',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'only_need_conversation_id', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202505Api_MarketplaceCreatorsCreatorUserIdGet',
    {
      name: 'AffiliateSellerV202505Api_MarketplaceCreatorsCreatorUserIdGet',
      description: `Get the Creator Affiliate\\'s Marketplace information and performance metrics in the last 30 days.`,
      inputSchema: {
        type: 'object',
        properties: {
          creator_user_id: { type: 'string', description: 'creatorUserId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'creator_user_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate_seller/202505/marketplace_creators/{creator_user_id}',
      executionParameters: [
        { name: 'creator_user_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202505Api_MarketplaceCreatorsSearchPost',
    {
      name: 'AffiliateSellerV202505Api_MarketplaceCreatorsSearchPost',
      description: `This API is used by Sellers to search for Creators in the Creator Marketplace. Sellers can search based on filters such as GMV, keywords, and Creator follower demographics. All the data returned is for the last 30 days.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              follower_demographics: {
                type: 'object',
                properties: {
                  age_ranges: {
                    type: 'array',
                    items: { type: 'string' },
                    description:
                      'Follower age filtering options, which are range intervals, include:  AGE_RANGE_18_24: \\"18-24\\",  AGE_RANGE_25_34: \\"25-34\\",  AGE_RANGE_35_44: \\"35-44\\",  AGE_RANGE_45_54: \\"45-54\\",  AGE_RANGE_55_AND_ABOVE: \\"55+\\"',
                  },
                  count_range: {
                    type: 'object',
                    properties: {
                      count_ge: {
                        type: 'number',
                        description:
                          'The minimum value of follower count.  The value passed in must be greater than or equal to 0',
                      },
                      count_le: {
                        type: 'number',
                        description:
                          'The maximum value of follower count.  - Generally, a value greater than or equal to 0 needs to be passed. If a value less than 0 is passed, it means that the field will not be filtered.',
                      },
                    },
                    required: ['count_ge', 'count_le'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  gender_distribution: {
                    type: 'object',
                    properties: {
                      gender: {
                        type: 'string',
                        description: 'A particular gender, \\"MALE\\" or \\"FEMALE\\"',
                      },
                      percentage_ge: {
                        type: 'number',
                        description:
                          'Greater than or equal to a certain percentage, scaled up by 10,000 times.  For example, 6000 stands for 0.6 or 60%',
                      },
                    },
                    required: ['gender', 'percentage_ge'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['age_ranges', 'count_range', 'gender_distribution'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              gmv_ranges: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filtering by GMV range intervals which include:  GMV_RANGE_0_100: \\"0-100\\",  GMV_RANGE_100_1000: \\"100-1000\\",  GMV_RANGE_1000_10000: \\"1000-10000\\",  GMV_RANGE_10000_AND_ABOVE: \\"10000+\\" For example:  - If GMV_RANGE_0_100 is passed, it means filtering the creator data that is greater than or equal to 0 and less than or equal to 100. - If GMV_RANGE_0_100 and GMV_RANGE_100_1000 are passed, it means to filter the creator data that is greater than or equal to 0 and less than or equal to 1000.',
              },
              keyword: {
                type: 'string',
                description:
                  'Searching creators by keyword, matching based on TikTok Username and Nickname.',
              },
              search_key: {
                type: 'string',
                description:
                  "Caching search results improves api performance and ensures stable request results. You don\\'t need to pass a value on the first call.  For the second call, please pass the value returned in the response of the first call.",
              },
              units_sold_ranges: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filtering by sales volume range intervals which include:  UNITS_SOLD_RANGE_0_10: \\"0-10\\",  UNITS_SOLD_RANGE_10_100: \\"10-100\\",  UNITS_SOLD_RANGE_100_1000: \\"100-1000\\",  UNITS_SOLD_RANGE_1000_AND_ABOVE: \\"1000+\\" For example:  - If UNITS_SOLD_RANGE_0_10 is passed, it means filtering the creator data that is greater than or equal to 0 and less than or equal to 10. - If UNITS_SOLD_RANGE_0_10 and UNITS_SOLD_RANGE_10_100 are passed, it means to filter the creator data that is greater than or equal to 0 and less than or equal to 100.',
              },
            },
            required: [
              'follower_demographics',
              'gmv_ranges',
              'keyword',
              'search_key',
              'units_sold_ranges',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202505/marketplace_creators/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202507Api_SampleApplicationsApplicationIdReviewPost',
    {
      name: 'AffiliateSellerV202507Api_SampleApplicationsApplicationIdReviewPost',
      description: `This API allows the seller to approve or reject the creator\\'s sample application in an open collaboration. When rejecting an application, the seller must provide a specific reason. This API facilitates the management of sample applications by giving sellers the ability to review and update applications according to their criteria and requirements.`,
      inputSchema: {
        type: 'object',
        properties: {
          application_id: { type: 'string', description: 'applicationId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              reject_reason: {
                type: 'string',
                description:
                  "The reason why a seller rejected a creator\\'s sample application. The possible enumerated values are: - NOT_MATCH: The creator does not meet the seller\\'s collaboration requirements. - OFFLINE: The product has been taken offline. - OUT_OF_STOCK: The product is temporarily out of stock. - OTHER: Any other reason not covered by the above categories. Required if the review_result is set to REJECT This field allows the seller to specify the reason for rejecting a sample application, providing clarity to the creator regarding the rejection.",
              },
              review_result: {
                type: 'string',
                description:
                  'The audit action to be taken on a sample application record by the seller. The field accepts one of four enumerated values: - APPROVE: Approves the sample application. - REJECT: Rejects the sample application. This field allows the seller to specify the desired operation to manage the sample application record effectively.',
              },
            },
            required: ['reject_reason', 'review_result'],
            description: 'Request body',
          },
        },
        required: [
          'application_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202507/sample_applications/{application_id}/review',
      executionParameters: [
        { name: 'application_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateSellerV202507Api_SampleApplicationsSearchPost',
    {
      name: 'AffiliateSellerV202507Api_SampleApplicationsSearchPost',
      description: `This API is provided for sellers to query sample applications based on various criteria such as products, creators, or application statuses. By using this API, sellers can retrieve detailed information about sample application records, including the creator\\'s information and the specifics of each application.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              creator_user_id: { type: 'string', description: 'TikTok User ID of a creator' },
              order_id: {
                type: 'string',
                description:
                  'Main order ID associated with a sample order when the sample application is approved by seller.',
              },
              product_id: {
                type: 'string',
                description:
                  "The unique identifier of a product. It is used to specify which product\\'s sample application details are being queried.",
              },
              status: {
                type: 'string',
                description:
                  "The status of sample applications. The possible enumerated values are: - PENDING: The sample application is waiting for the seller\\'s review. - AWAITING_SHIPMENT: The application is approved, and the seller needs to ship the sample. - SHIPPED: The sample has been shipped by the seller and is waiting for the creator to receive the package. - CONTENT_PENDING: The creator has received the sample package and is expected to create content. - REJECT_CANCELLED: The sample application has been rejected by the seller. - OVERDUE_CANCELLED: The sample application has expired due to being overdue. - UNFULFILL_CANCELLED: The creator did not fulfill the commitment to create content within the agreed timeframe. - DEL_OPEN_COLLAB: Open collaboration has been deleted. - SELLER_NOT_SHIP_CANCELLED: The seller did not ship the sample within the required timeframe. - WITHDRAW_CANCELLED: The creator withdrew the sample application before the seller approved it. - UNFULFILLABLE_CANCELLED: The application was cancelled due to reasons beyond the creator\\'s control, making it impossible to create content. - OPS_CANCELLED: The application was manually cancelled by operations staff. - OPS_FAILED: The application was marked as failed by operations staff. - OPS_COMPLETED: The application was manually marked as completed by operations staff. - COMPLETED: The application is complete, and the creator has posted the content. This field allows for tracking the status of a sample application throughout its lifecycle, providing visibility into each stage of the process for sellers and creators.",
              },
              target_collabration_id: {
                type: 'string',
                description: 'The unique ID generated after creating a target collaboration.',
              },
              title: {
                type: 'string',
                description:
                  'Product name, supports fuzzy search queries. It allows sellers to search for products by name when managing sample applications.',
              },
              username: {
                type: 'string',
                description: 'TikTok User Name of a creator, supports fuzzy search',
              },
            },
            required: [
              'creator_user_id',
              'order_id',
              'product_id',
              'status',
              'target_collabration_id',
              'title',
              'username',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate_seller/202507/sample_applications/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_LiveRoomsGet',
    {
      name: 'AffiliateV202309Api_LiveRoomsGet',
      description: `Developer can utilize this API to get the creator\`s last live room information`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate/202309/live_rooms',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_ProfilesGet',
    {
      name: 'AffiliateV202309Api_ProfilesGet',
      description: `This API gets the creator profile information.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate/202309/profiles',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_ShopProductsGet',
    {
      name: 'AffiliateV202309Api_ShopProductsGet',
      description: `Developer can utilize this API to search and retrieve products information of shop which is bound by a specific creator with specific keywords.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          title_keyword: { type: 'string' },
          sort_field: { type: 'string' },
          sort_order: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate/202309/shop_products',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'title_keyword', in: 'query' },
        { name: 'sort_field', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_ShowcasesProductsGet',
    {
      name: 'AffiliateV202309Api_ShowcasesProductsGet',
      description: `This API lists the products in the creator\\'s showcase, paginated by specified page size and iterated through pages by page token for up to 2000 products in the showcase. This API is generally used when a creator would like to view the products in the showcase.  The platform will return the product details in the showcase, as well as the products in the livebag if the creator is live streaming.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          origin: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/affiliate/202309/showcases/products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'origin', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_ShowcasesProductsPost',
    {
      name: 'AffiliateV202309Api_ShowcasesProductsPost',
      description: `This API adds the products to the creator\\'s showcase. The platform will return the add status of the products, and error code and error message if the deletion fails.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The product IDs to add to the creator\\'s showcase. The products can be added from my bound shop.",
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate/202309/showcases/products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_ShowcasesProductsDelete',
    {
      name: 'AffiliateV202309Api_ShowcasesProductsDelete',
      description: `This API removes the products in the creator\\'s showcase. The platform will return error code and error message if the deletion fails.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The product IDs to delete from the creator\\'s showcase. The maximum number of products to delete at once is 200.",
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/affiliate/202309/showcases/products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202309Api_ShowcasesProductsTopPost',
    {
      name: 'AffiliateV202309Api_ShowcasesProductsTopPost',
      description: `Use this API to move products to the top in a creator\\'s showcase.  The platform will return the error code and error message if the pinning operation fails.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The product IDs to move to the top in a creator\\'s showcase. If multiple products are provided, they will display according to the order passed in this parameter.",
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate/202309/showcases/products/top',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202402Api_AnchorsPrerequisiteCheckPost',
    {
      name: 'AffiliateV202402Api_AnchorsPrerequisiteCheckPost',
      description: `The is  a pre-verification interface for creator adding products to video. This interface will verify the creator\\'s permissions and product status, etc.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_id: {
                type: 'string',
                description: 'Product id that wanted to been checked.',
              },
            },
            required: ['product_id'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate/202402/anchors/prerequisite_check',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AffiliateV202403Api_AnchorsContentCheckPost',
    {
      name: 'AffiliateV202403Api_AnchorsContentCheckPost',
      description: `This interface is used for checking anchor contents. The interface currently supports verification of anchor title. It will return error if the title has dirty words, punctuation, emoji or less than 30 characters long.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              title: { type: 'string', description: 'Anchor title that you want show in anchor.' },
            },
            required: ['title'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/affiliate/202403/anchors/content_check',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AuthorizationV202309Api_ShopsGet',
    {
      name: 'AuthorizationV202309Api_ShopsGet',
      description: `Retrieves the list of shops that a seller has authorized for an app. Seller authorization is required before an app can access the data of a shop. Use this API to check which shops are currently authorized for an app and obtain the corresponding shop cipher for use as an input parameter in shop related APIs.  For more information about seller authorization, refer to [Seller authorization guide](https://partner.tiktokshop.com/docv2/page/678e3a344ddec3030b238fa0). Target seller: All`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: ['x-tts-access-token', 'Content-Type', 'app_key', 'sign', 'timestamp'],
      },
      method: 'get',
      pathTemplate: '/authorization/202309/shops',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AuthorizationV202312Api_WidgetTokenGet',
    {
      name: 'AuthorizationV202312Api_WidgetTokenGet',
      description: `this open api is used to generate a widget token`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_id: { type: 'number', description: 'shopId? identifier' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: ['x-tts-access-token', 'Content-Type', 'app_key', 'sign', 'timestamp'],
      },
      method: 'get',
      pathTemplate: '/authorization/202312/widget_token',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_id', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AuthorizationV202401Api_WidgetTokenGet',
    {
      name: 'AuthorizationV202401Api_WidgetTokenGet',
      description: `this open api is used to generate a widget token`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_id: { type: 'number', description: 'shopId? identifier' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: ['x-tts-access-token', 'Content-Type', 'app_key', 'sign', 'timestamp'],
      },
      method: 'get',
      pathTemplate: '/authorization/202401/widget_token',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_id', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AuthorizationV202403Api_ShopsDelete',
    {
      name: 'AuthorizationV202403Api_ShopsDelete',
      description: `This API is used  for developers to deauthorize a shop and notify the seller about this action by email`,
      inputSchema: {
        type: 'object',
        properties: {
          shop_cipher: { type: 'string', description: 'Shop cipher for API authentication' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'shop_cipher',
          'x-tts-access-token',
          'Content-Type',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/authorization/202403/shops',
      executionParameters: [
        { name: 'shop_cipher', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'AuthorizationV202405Api_CategoryAssetsGet',
    {
      name: 'AuthorizationV202405Api_CategoryAssetsGet',
      description: `Retrieves the list of business category assets authorized by a partner for an app. Partner authorization is required before an app can access the data of a partner, and this access is granted based on business categories. Use this API to check which business category assets are currently authorized for an app and obtain the corresponding category asset cipher for use as an input parameter in affiliate partner related APIs.  For more information about partner authorization, refer to [Partner authorization guide](678e3a3978f4c20311b8b555). Target partner: All`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: ['x-tts-access-token', 'Content-Type', 'app_key', 'sign', 'timestamp'],
      },
      method: 'get',
      pathTemplate: '/authorization/202405/category_assets',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'DataReconciliationV202309Api_OrdersSyncPost',
    {
      name: 'DataReconciliationV202309Api_OrdersSyncPost',
      description: `TikTok Shop-Connector exchange order data from DTC(Direct To Consumer) platform to Tiktok Shop-QE system to compare the order data of DTC platform and Tiktok Shop. Which systems of users are involved with the API? For example, DTC platform Connector App, Shipping App, WMS, PIM, Multi Channel App, etc.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_id: { type: 'number', description: 'shopId? identifier' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              orders: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    channel_financial_status: {
                      type: 'string',
                      description:
                        "If \\'channel_type\\' is SHOPIFY,the financial status enumeration, data not in the following enumeration will return an error. shopify financial status: PENDING AUTHORIZED OVERDUE EXPIRING EXPIRED PAID REFUNDED PARTIALLY_REFUNDED PARTIALLY_PAID VOIDED UNPAID",
                    },
                    channel_fulfillment_status: {
                      type: 'string',
                      description:
                        "If \\'channel_type\\' is SHOPIFY,the fulfillment status enumeration, data not in the following enumeration will return an error.  Shopify fulfillment status: FULFILLED ON_HOLD PARTIALLY_FULFILLED UNFULFILLED SCHEDULED",
                    },
                    channel_order_id: {
                      type: 'string',
                      description: 'Direct To Consumer System order id',
                    },
                    channel_order_status: {
                      type: 'string',
                      description:
                        "The order status enumeration under the corresponding \\'channel_type\\', and an error will be returned for data outside the enumeration under the \\'channel_type\\'. The correspondence between \\'channel_type\\' and order status is as follows.  1. channel_type is \\'SHOPIFY\\' correspondence order status: OPEN ARCHIVED CANCELED  2. channel_type is \\'WOOCOMMERCE\\' correspondence order status: PENDING ON_HOLD PROCESSING COMPLETED REFUNDED  3. channel_type is \\'BIGCOMMERCE\\' correspondence order status: AWAITING_PAYMENT AWAITING_FULFILLMENT AWATING_SHIPMENT PARTIALLY_SHIPPED INCOMPLETE MANUAL_VERIFICATION_REQUIRED SHIPPED CANCELLED REFUND PENDING  4. channel_type is \\'MAGENTO\\' correspondence order status: NEW PROCESSING PENDING COMPLETE CLOSED PENDING_PAYMENT ON_HOLD",
                    },
                    channel_order_update_time: {
                      type: 'string',
                      description:
                        'The update timestamp of the order on the DTC, not the current api call time. Unit: second, the length must be 10. The value must less than current timestamp.',
                    },
                    channel_type: {
                      type: 'string',
                      description:
                        'DTC channel type enumeration, data not in the following enumeration will return an error: SHOPIFY WOOCOMMERCE BIGCOMMERCE MAGENTO',
                    },
                    not_exist_reason: {
                      type: 'string',
                      description:
                        'The reason of that there is no matched order in channel platform',
                    },
                    order_id: {
                      type: 'string',
                      description: "Tiktok shop\\'s order id, must be a pure numeric string.",
                    },
                    packages: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          logistics_provider_name: {
                            type: 'string',
                            description: 'The provider name of tracking info',
                          },
                          package_id: {
                            type: 'string',
                            description: 'The tracking corresponding Tiktok shop package id',
                          },
                          tracking_number: {
                            type: 'string',
                            description: 'Tracking number of tracking info',
                          },
                        },
                        required: ['logistics_provider_name', 'package_id', 'tracking_number'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'the package information list of order',
                    },
                  },
                  required: [
                    'channel_financial_status',
                    'channel_fulfillment_status',
                    'channel_order_id',
                    'channel_order_status',
                    'channel_order_update_time',
                    'channel_type',
                    'not_exist_reason',
                    'order_id',
                    'packages',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The exchange order list',
              },
            },
            required: ['orders'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/data_reconciliation/202309/orders/sync',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_id', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'DataReconciliationV202310Api_OrdersImportPost',
    {
      name: 'DataReconciliationV202310Api_OrdersImportPost',
      description: `TikTok Shop-Connector exchange order data from DTC(Direct To Consumer) platform to Tiktok Shop-QE system to compare the order data of DTC platform and Tiktok Shop. Which systems of users are involved with the API? For example, DTC platform Connector App, Shipping App, WMS, PIM, Multi Channel App, etc.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              orders: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    channel_financial_status: {
                      type: 'string',
                      description:
                        "If \\'channel_type\\' is SHOPIFY,the financial status enumeration, data not in the following enumeration will return an error. shopify financial status: PENDING AUTHORIZED OVERDUE EXPIRING EXPIRED PAID REFUNDED PARTIALLY_REFUNDED PARTIALLY_PAID VOIDED UNPAID",
                    },
                    channel_fulfillment_status: {
                      type: 'string',
                      description:
                        "If \\'channel_type\\' is SHOPIFY,the fulfillment status enumeration, data not in the following enumeration will return an error.  Shopify fulfillment status: FULFILLED ON_HOLD PARTIALLY_FULFILLED UNFULFILLED SCHEDULED",
                    },
                    channel_order_id: {
                      type: 'string',
                      description: 'Direct To Consumer System order id',
                    },
                    channel_order_status: {
                      type: 'string',
                      description:
                        "The order status enumeration under the corresponding \\'channel_type\\', and an error will be returned for data outside the enumeration under the \\'channel_type\\'. The correspondence between \\'channel_type\\' and order status is as follows.  1. channel_type is \\'SHOPIFY\\' correspondence order status: OPEN ARCHIVED CANCELED  2. channel_type is \\'WOOCOMMERCE\\' correspondence order status: PENDING ON_HOLD PROCESSING COMPLETED REFUNDED  3. channel_type is \\'BIGCOMMERCE\\' correspondence order status: AWAITING_PAYMENT AWAITING_FULFILLMENT AWATING_SHIPMENT PARTIALLY_SHIPPED INCOMPLETE MANUAL_VERIFICATION_REQUIRED SHIPPED CANCELLED REFUND PENDING  4. channel_type is \\'MAGENTO\\' correspondence order status: NEW PROCESSING PENDING COMPLETE CLOSED PENDING_PAYMENT ON_HOLD",
                    },
                    channel_order_update_time: {
                      type: 'string',
                      description:
                        'The update timestamp of the order on the DTC, not the current api call time. Unit: second, the length must be 10. The value must less than current timestamp.',
                    },
                    channel_type: {
                      type: 'string',
                      description:
                        'DTC channel type enumeration, data not in the following enumeration will return an error: SHOPIFY WOOCOMMERCE BIGCOMMERCE MAGENTO',
                    },
                    not_exist_reason: {
                      type: 'string',
                      description:
                        'The reason of that there is no matched order in channel platform',
                    },
                    order_id: {
                      type: 'string',
                      description: "Tiktok shop\\'s order id, must be a pure numeric string.",
                    },
                    packages: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          package_id: {
                            type: 'string',
                            description: 'The tracking corresponding Tiktok shop package id',
                          },
                          shipping_provider_name: {
                            type: 'string',
                            description: 'The provider name of tracking info',
                          },
                          tracking_number: {
                            type: 'string',
                            description: 'Tracking number of tracking info',
                          },
                        },
                        required: ['package_id', 'shipping_provider_name', 'tracking_number'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'the package information list of order',
                    },
                  },
                  required: [
                    'channel_financial_status',
                    'channel_fulfillment_status',
                    'channel_order_id',
                    'channel_order_status',
                    'channel_order_update_time',
                    'channel_type',
                    'not_exist_reason',
                    'order_id',
                    'packages',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The exchange order list',
              },
            },
            required: ['orders'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/data_reconciliation/202310/orders/import',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'DataReconciliationV202401Api_OrdersImportPost',
    {
      name: 'DataReconciliationV202401Api_OrdersImportPost',
      description: `TikTok Shop-Connector exchange order data from DTC(Direct To Consumer) platform to Tiktok Shop-QE system to compare the order data of DTC platform and Tiktok Shop. Which systems of users are involved with the API? For example, DTC platform Connector App, Shipping App, WMS, PIM, Multi Channel App, etc.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              orders: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    channel_financial_status: {
                      type: 'string',
                      description:
                        "If \\'channel_type\\' is SHOPIFY,the financial status enumeration, data not in the following enumeration will return an error. shopify financial status: PENDING AUTHORIZED OVERDUE EXPIRING EXPIRED PAID REFUNDED PARTIALLY_REFUNDED PARTIALLY_PAID VOIDED UNPAID",
                    },
                    channel_fulfillment_status: {
                      type: 'string',
                      description:
                        "If \\'channel_type\\' is SHOPIFY,the fulfillment status enumeration, data not in the following enumeration will return an error.  Shopify fulfillment status: FULFILLED ON_HOLD PARTIALLY_FULFILLED UNFULFILLED SCHEDULED",
                    },
                    channel_order_id: {
                      type: 'string',
                      description: 'Direct To Consumer System order id',
                    },
                    channel_order_status: {
                      type: 'string',
                      description:
                        "The order status enumeration under the corresponding \\'channel_type\\', and an error will be returned for data outside the enumeration under the \\'channel_type\\'. The correspondence between \\'channel_type\\' and order status is as follows.  1. channel_type is \\'SHOPIFY\\' correspondence order status: OPEN ARCHIVED CANCELED  2. channel_type is \\'WOOCOMMERCE\\' correspondence order status: PENDING ON_HOLD PROCESSING COMPLETED REFUNDED  3. channel_type is \\'BIGCOMMERCE\\' correspondence order status: AWAITING_PAYMENT AWAITING_FULFILLMENT AWATING_SHIPMENT PARTIALLY_SHIPPED INCOMPLETE MANUAL_VERIFICATION_REQUIRED SHIPPED CANCELLED REFUND PENDING  4. channel_type is \\'MAGENTO\\' correspondence order status: NEW PROCESSING PENDING COMPLETE CLOSED PENDING_PAYMENT ON_HOLD",
                    },
                    channel_order_update_time: {
                      type: 'string',
                      description:
                        'The update timestamp of the order on the DTC, not the current api call time. Unit: second, the length must be 10. The value must less than current timestamp.',
                    },
                    channel_type: {
                      type: 'string',
                      description:
                        'DTC channel type enumeration, data not in the following enumeration will return an error: SHOPIFY WOOCOMMERCE BIGCOMMERCE MAGENTO',
                    },
                    issue_reason: {
                      type: 'string',
                      description:
                        "Developers must use one of the Reason Codes listed within your API request parameters. If you don\\'t use one of the ENUMs, the API will return an error. Refer to this doc for a list of possible reason codes:  https://partner.tiktokshop.com/docv2/page/660bf931cf5cc502e03007ca#Back%20To%20Top",
                    },
                    order_id: {
                      type: 'string',
                      description: "Tiktok shop\\'s order id, must be a pure numeric string.",
                    },
                    packages: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          package_id: {
                            type: 'string',
                            description: 'The tracking corresponding Tiktok shop package id',
                          },
                          shipping_provider_name: {
                            type: 'string',
                            description: 'The provider name of tracking info',
                          },
                          tracking_number: {
                            type: 'string',
                            description: 'Tracking number of tracking info',
                          },
                        },
                        required: ['package_id', 'shipping_provider_name', 'tracking_number'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'the package information list of order',
                    },
                  },
                  required: [
                    'channel_financial_status',
                    'channel_fulfillment_status',
                    'channel_order_id',
                    'channel_order_status',
                    'channel_order_update_time',
                    'channel_type',
                    'issue_reason',
                    'order_id',
                    'packages',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The exchange order list',
              },
            },
            required: ['orders'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/data_reconciliation/202401/orders/import',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'EventV202309Api_WebhooksGet',
    {
      name: 'EventV202309Api_WebhooksGet',
      description: `Retrieves a shop\\'s webhooks and the corresponding webhook URLs.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/event/202309/webhooks',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'EventV202309Api_WebhooksPut',
    {
      name: 'EventV202309Api_WebhooksPut',
      description: `Updates the shop\\'s webhook URL for a specific event topic.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              address: {
                type: 'string',
                description:
                  'The webhook URL used to receive the event data.  Max length: 255 characters',
              },
              event_type: {
                type: 'string',
                description:
                  "The topic of the webhook event. Possible values: - `ORDER_STATUS_CHANGE`: Triggers on each order status update, from new order placement through all subsequent status changes. See [Order Status change](650300b8a57708028b430b4a). - `RECIPIENT_ADDRESS_UPDATE`: Triggers when the recipient\\'s address is updated. See [Receipient address update](650301af5a12ff0294ea3bf9). - `PACKAGE_UPDATE`: Triggers when a package is updated (e.g., combined, split, or address changed). See [Package update](650955cabace3e02b73cc886). - `PRODUCT_STATUS_CHANGE`: Triggers when product audit results are updated. See [Product status change](650956aff1fd3102b90b6261). - `SELLER_DEAUTHORIZATION`: Triggers when a seller is deauthorized to inform developers and avoid misunderstandings about platform authorization issues. See [Seller deauthorization](65095746defece02be4d749d). - `UPCOMING_AUTHORIZATION_EXPIRATION`: Triggers 30 days before authorization expiration, with daily notifications at 0:00 until re-authorization is completed. See [Upcoming authorization expiration](6509579c0fcef602bf11312c). - `CANCELLATION_STATUS_CHANGE`: Triggers when an order\\'s cancellation status changes. See [Cancellation status change](65030150746462028285f657). - `RETURN_STATUS_CHANGE`: Triggers when an order\\'s return status changes. See [Return status change](65030162bb2a4d028d50cc51). - `NEW_CONVERSATION`: Triggers when a customer service agent joins or leaves a conversation. See [New conversation](6614330bfe9fdc02e002abfd). - `NEW_MESSAGE`: Triggers when a new message is sent in a customer service conversation. See [New Message](66143486ef8a1202dc323258). - `PRODUCT_INFORMATION_CHANGE`: Triggers when changes to a product\\'s title, description, main images, or attributes go live. See [Product information change](65d6f41411a60f02dc1cf8bf). - `PRODUCT_CREATION`: Triggers when a new product is created. See [Product creation](663c98b566828e02e4515580). - `PRODUCT_CATEGORY_CHANGE`: Triggers when the category of a product is changed. See [Product category change](668764a371f16d02eef1f393). - `NEW_MESSAGE_LISTENER`: Triggers when a creator sends a message to the seller. See [New message listener](6790b76eb59cf9030997b783). - `INVOICE_STATUS_CHANGE`: Triggers when the status of an invoice upload changes after using the [POST Upload Invoice](67b542559a140004b343984f) endpoint. See [Invoice Status Change](67b68ca185619104a6772e5d). - `PRODUCT_AUDIT_STATUS_CHANGE`: Triggers when the product audit status changes. See [Product audit status change](67b5c6cba42623049abe5062). - `REVERSE_STATUS_UPDATE`: Triggers when buyer raises cancellation, refund only, or return & refund requests that need the seller to accept or reject. See [Reverse Status Update](https://partner.tiktokshop.com/doc/page/63fd7459715d622a338c5437).",
              },
            },
            required: ['address', 'event_type'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'put',
      pathTemplate: '/event/202309/webhooks',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'EventV202309Api_WebhooksDelete',
    {
      name: 'EventV202309Api_WebhooksDelete',
      description: `Deletes the shop\\'s webhook URL for a specific event topic.  Regardless of whether webhook is configured or not, the result will return success.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              event_type: {
                type: 'string',
                description:
                  "The topic of the webhook event. Possible values: - `ORDER_STATUS_CHANGE`: Triggers on each order status update, from new order placement through all subsequent status changes. See [Order Status change](650300b8a57708028b430b4a). - `RECIPIENT_ADDRESS_UPDATE`: Triggers when the recipient\\'s address is updated. See [Receipient address update](650301af5a12ff0294ea3bf9). - `PACKAGE_UPDATE`: Triggers when a package is updated (e.g., combined, split, or address changed). See [Package update](650955cabace3e02b73cc886). - `PRODUCT_STATUS_CHANGE`: Triggers when product audit results are updated. See [Product status change](650956aff1fd3102b90b6261). - `SELLER_DEAUTHORIZATION`: Triggers when a seller is deauthorized to inform developers and avoid misunderstandings about platform authorization issues. See [Seller deauthorization](65095746defece02be4d749d). - `UPCOMING_AUTHORIZATION_EXPIRATION`: Triggers 30 days before authorization expiration, with daily notifications at 0:00 until re-authorization is completed. See [Upcoming authorization expiration](6509579c0fcef602bf11312c). - `CANCELLATION_STATUS_CHANGE`: Triggers when an order\\'s cancellation status changes. See [Cancellation status change](65030150746462028285f657). - `RETURN_STATUS_CHANGE`: Triggers when an order\\'s return status changes. See [Return status change](65030162bb2a4d028d50cc51). - `NEW_CONVERSATION`: Triggers when a customer service agent joins or leaves a conversation. See [New conversation](6614330bfe9fdc02e002abfd). - `NEW_MESSAGE`: Triggers when a new message is sent in a customer service conversation. See [New Message](66143486ef8a1202dc323258). - `PRODUCT_INFORMATION_CHANGE`: Triggers when changes to a product\\'s title, description, main images, or attributes go live. See [Product information change](65d6f41411a60f02dc1cf8bf). - `PRODUCT_CREATION`: Triggers when a new product is created. See [Product creation](663c98b566828e02e4515580). - `PRODUCT_CATEGORY_CHANGE`: Triggers when the category of a product is changed. See [Product category change](668764a371f16d02eef1f393). - `NEW_MESSAGE_LISTENER`: Triggers when a creator sends a message to the seller. See [New message listener](6790b76eb59cf9030997b783). - `INVOICE_STATUS_CHANGE`: Triggers when the status of an invoice upload changes after using the [POST Upload Invoice](67b542559a140004b343984f) endpoint. See [Invoice Status Change](67b68ca185619104a6772e5d). - `PRODUCT_AUDIT_STATUS_CHANGE`: Triggers when the product audit status changes. See [Product audit status change](67b5c6cba42623049abe5062). - `REVERSE_STATUS_UPDATE`: Triggers when buyer raises cancellation, refund only, or return & refund requests that need the seller to accept or reject. See [Reverse Status Update](https://partner.tiktokshop.com/doc/page/63fd7459715d622a338c5437).",
              },
            },
            required: ['event_type'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/event/202309/webhooks',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202309Api_OrdersOrderIdStatementTransactionsGet',
    {
      name: 'FinanceV202309Api_OrdersOrderIdStatementTransactionsGet',
      description: `**This API is currently exclusive to the following markets: US, UK.** Retrieves the transactions associated with an order, including both order-level transactions and SKU-level detailed transactions. This covers all transactions related to sales, fees, commissions, shipping, taxes, adjustments, and refunds.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202309/orders/{order_id}/statement_transactions',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202309Api_PaymentsGet',
    {
      name: 'FinanceV202309Api_PaymentsGet',
      description: `**This API is currently unavailable to SEA markets.** Retrieves records of automated payments for a shop based on a specified date range. Use the returned list to verify and reconcile payments with the transactions in the seller\\'s bank account.`,
      inputSchema: {
        type: 'object',
        properties: {
          sort_field: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          create_time_lt: { type: 'number' },
          page_size: { type: 'object' },
          sort_order: { type: 'string' },
          create_time_ge: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'sort_field',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202309/payments',
      executionParameters: [
        { name: 'sort_field', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'create_time_lt', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'create_time_ge', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202309Api_StatementsGet',
    {
      name: 'FinanceV202309Api_StatementsGet',
      description: `Retrieves the statements generated for a shop and the key statement information based on a specified date range or their payment status. Use this API to get an overview of your daily statements over a range of time, or to find out which statements have been paid or not. For the detailed transactions, refer to [Get Statement Transactions](650a6749defece02be67da87) or [Get Order Statement Transactions](650a6734defece02be67d724). Applicable for all regions\\' sellers. Only data after 2023-07-01 is available.`,
      inputSchema: {
        type: 'object',
        properties: {
          sort_field: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          statement_time_lt: { type: 'number' },
          payment_status: { type: 'string' },
          page_size: { type: 'object' },
          sort_order: { type: 'string' },
          statement_time_ge: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'sort_field',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202309/statements',
      executionParameters: [
        { name: 'sort_field', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'statement_time_lt', in: 'query' },
        { name: 'payment_status', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'statement_time_ge', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202309Api_StatementsStatementIdStatementTransactionsGet',
    {
      name: 'FinanceV202309Api_StatementsStatementIdStatementTransactionsGet',
      description: `Only for UK and US local sellers. Get a list of transactions based on statement_id. We will return a list of orders. If you require the SKU level transaction details, pass in the order_id to Get Order Statement Transactions.`,
      inputSchema: {
        type: 'object',
        properties: {
          statement_id: { type: 'string', description: 'statementId identifier' },
          sort_field: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          page_size: { type: 'object' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'statement_id',
          'sort_field',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202309/statements/{statement_id}/statement_transactions',
      executionParameters: [
        { name: 'statement_id', in: 'path' },
        { name: 'sort_field', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202309Api_WithdrawalsGet',
    {
      name: 'FinanceV202309Api_WithdrawalsGet',
      description: `Get the list of the withdrawal records (when Seller\\'s withdraw money from TikTokShop) based on the specified date range.`,
      inputSchema: {
        type: 'object',
        properties: {
          types: { type: 'array', items: { type: 'string' } },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          create_time_lt: { type: 'number' },
          page_size: { type: 'number' },
          create_time_ge: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'types',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202309/withdrawals',
      executionParameters: [
        { name: 'types', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'create_time_lt', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'create_time_ge', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202501Api_OrdersOrderIdStatementTransactionsGet',
    {
      name: 'FinanceV202501Api_OrdersOrderIdStatementTransactionsGet',
      description: `Retrieves the SKU-level details of an order transaction. This covers transactions related to sales, fees, commissions, shipping, taxes, and refunds. Applicable for all regions\\' sellers. Only data after 2023-07-01 is available (Please note that for US cross-border sellers, data before 2025-04-30 is unavailable).`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202501/orders/{order_id}/statement_transactions',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202501Api_StatementsStatementIdStatementTransactionsGet',
    {
      name: 'FinanceV202501Api_StatementsStatementIdStatementTransactionsGet',
      description: `Retrieves the details of a statement, including the transactions, which can be a standard order transaction, an adjustment transaction, or a reserve-related transaction. For the SKU-level details of an order transaction, refer to [Get Transactions by Order](650a6734defece02be67d724). Applicable for all regions\\' sellers. Only data after 2023-07-01 is available (Please note that for US cross-border sellers, data before 2025-04-30 is unavailable).`,
      inputSchema: {
        type: 'object',
        properties: {
          statement_id: { type: 'string', description: 'statementId identifier' },
          sort_field: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          page_size: { type: 'object' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'statement_id',
          'sort_field',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202501/statements/{statement_id}/statement_transactions',
      executionParameters: [
        { name: 'statement_id', in: 'path' },
        { name: 'sort_field', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FinanceV202507Api_OrdersUnsettledGet',
    {
      name: 'FinanceV202507Api_OrdersUnsettledGet',
      description: `This API allows the partner to retrieve a list of unsettled transactions (incl. Orders & Adjustments) generated by a seller, returning the detailed fee breakdown for a list of order ID and adjustment ID.  For now, this API only returns transactions which were created after 2025.01.01. Once one transaction is settled, which won\\'t be returned by this API anymore, please get from Get Statement Transaction API.  **Pay attention to that all data returned through this API is an estimated amount which subject to change before settlement and can only used for seller\\'s reference, final settlement amount per each transaction can only provided through statement related API.`,
      inputSchema: {
        type: 'object',
        properties: {
          sort_field: { type: 'string' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          sort_order: { type: 'string' },
          search_time_ge: { type: 'number' },
          search_time_lt: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'sort_field',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/finance/202507/orders/unsettled',
      executionParameters: [
        { name: 'sort_field', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'search_time_ge', in: 'query' },
        { name: 'search_time_lt', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_CombinablePackagesSearchGet',
    {
      name: 'FulfillmentV202309Api_CombinablePackagesSearchGet',
      description: `Use this API to query orders eligible for combined shipping.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/combinable_packages/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_FilesUploadPost',
    {
      name: 'FulfillmentV202309Api_FilesUploadPost',
      description: `This API is used for the seller to upload the proof of delivery file for a package, and to generate the URL of the corresponding file. The generated URL is used for the [Update Package Delivery Status API](https://partner.tiktokshop.com/docv2/page/650aa332c16ffe02b8f0ba82?external_id=650aa332c16ffe02b8f0ba82).   This API only supports uploading qualification files in \`PDF\` format. The file size can not exceed 10MB.  Note: Only sellers utilizing the SOF (Seller Own Fleet) capability can use this API.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          data: { type: 'object' },
          name: { type: 'string' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/files/upload',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'data', in: 'query' },
        { name: 'name', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_ImagesUploadPost',
    {
      name: 'FulfillmentV202309Api_ImagesUploadPost',
      description: `This API is used for the seller to upload the proof of delivery image for a package, and to generate the URL of the corresponding file. The generated URL is used in the [Update Package Delivery Status API](https://partner.tiktokshop.com/docv2/page/650aa332c16ffe02b8f0ba82?external_id=650aa332c16ffe02b8f0ba82) to indicate that the parcel has been delivered.   Usage requirements: - The image format must be \`JPEG\`, \`PNG\`, or \`JPG\`.  - The image size can not exceed 5MB.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          data: { type: 'object' },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/images/upload',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'data', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersOrderIdHandoverTimeSlotsGet',
    {
      name: 'FulfillmentV202309Api_OrdersOrderIdHandoverTimeSlotsGet',
      description: `Use this API to retrieve the time slots available for pickup, drop off or van collection for the seller\\'s specified package by using order ID and order line item ID.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          order_line_item_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'orderLineItemIds? identifier',
          },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/orders/{order_id}/handover_time_slots',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'order_line_item_ids', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersOrderIdPackagesPost',
    {
      name: 'FulfillmentV202309Api_OrdersOrderIdPackagesPost',
      description: `**This API is currently exclusive to the following markets: US, UK, ES, IE, IT, DE, FR, JP.** This API is for sellers who fulfill orders through their own selected/preferred logistics carrier, and allows sellers to upload valid package information (items in packages, shipping provider information, and tracking number) orders/order line items to TikTok Shop. Use [Get Shipping Providers API](https://partner.tiktokshop.com/docv2/page/650aa48d4a0bb702c06d85cd?external_id=650aa48d4a0bb702c06d85cd) to retrieve the \`shipping_provider_id\` for shipping providers.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of order line item IDs.',
              },
              shipping_provider_id: {
                type: 'string',
                description:
                  'Use [Get Shipping Provider API](https://partner.tiktokshop.com/docv2/page/650aa48d4a0bb702c06d85cd?external_id=650aa48d4a0bb702c06d85cd) to retrieve the `shipping_provider_id` for shipping providers.',
              },
              tracking_number: { type: 'string', description: 'Tracking number.' },
            },
            required: ['order_line_item_ids', 'shipping_provider_id', 'tracking_number'],
            description: 'Request body',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/orders/{order_id}/packages',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersOrderIdShippingInfoUpdatePost',
    {
      name: 'FulfillmentV202309Api_OrdersOrderIdShippingInfoUpdatePost',
      description: `If the seller entered an incorrect tracking number, this API allows the seller to update the tracking number and shipping provider for an order that has already been shipped.  - This API is only applicable to orders (or packages) shipped by the seller.    - It is only used to update the tracking number and shipping provider for packages that have already been shipped.  - For orders that have been split for shipping, please use the [Update Package Shipping Info API](https://partner.tiktokshop.com/docv2/page/650aa666c16ffe02b8f1203c?external_id=650aa666c16ffe02b8f1203c).   Please note that TikTok Shop only allows merchants to update shipping information within 72 hours after shipping.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              shipping_provider_id: {
                type: 'string',
                description:
                  'Identifies the carrier that will deliver the package. Please call [Get Shipping Providers API](https://partner.tiktokshop.com/docv2/page/650aa48d4a0bb702c06d85cd?external_id=650aa48d4a0bb702c06d85cd#Back%20To%20Top) to retrieve the available shipping provider(s).',
              },
              tracking_number: {
                type: 'string',
                description: 'The shipment tracking number provided by the carrier.',
              },
            },
            required: ['shipping_provider_id', 'tracking_number'],
            description: 'Request body',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/orders/{order_id}/shipping_info/update',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersOrderIdShippingServicesQueryPost',
    {
      name: 'FulfillmentV202309Api_OrdersOrderIdShippingServicesQueryPost',
      description: `Use this API ( for US ) to query the list of available shipping services when specifying packages\\' size or weight. The shipping fee and delivery time is an estimate only and is based on the package dimensions and weight you provided. Options listed may differ if you change the package attributes at the time of shipping.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              dimension: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description:
                      'The height of the package. The length, width, height must be passed together.',
                  },
                  length: {
                    type: 'string',
                    description:
                      'The length of the package. The length, width, height must be passed together.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit of measurement is used to measure the length. - CM - INCH',
                  },
                  width: {
                    type: 'string',
                    description:
                      'The width of the package. The length, width, height must be passed together.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'Order line item ID list',
              },
              weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description:
                      'The unit of measurement is used to measure the weight. - GRAM - POUND',
                  },
                  value: { type: 'string', description: 'The weight of the scheduled package.' },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['dimension', 'order_line_item_ids', 'weight'],
            description: 'Request body',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/orders/{order_id}/shipping_services/query',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersOrderIdSplitPost',
    {
      name: 'FulfillmentV202309Api_OrdersOrderIdSplitPost',
      description: `Use this API to confirm an order split. Note that ​​supported split levels vary by region​​: - Some regions support ​​item-level splits​​ (splitting individual units of the same SKU). - Others only support ​​all-units splits​​ (splitting different SKUs into separate packages).  Here are two examples of supported splits: - ​​**Case 1**: all-units split​​, applicable for orders in BR, SEA, MX (local sellers) Split a buyer order of SKU A of quantity 2 and SKU B of quantity 1 into two separate packages:   - ​​Package 1​​: all units of SKU A ​​  - Package 2​​: all units of SKU B  - **​​Case 2**: item-level split​​, applicable for orders in EU, JP, MX (global sellers), UK, US Split the same order contents into three individual packages:   - ​​Package 1​​: 1 unit of SKU A ​  - ​Package 2​​: 1 unit of SKU A ​​  - Package 3​​: 1 unit of SKU B`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              splittable_groups: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'A unique identifier designated by the developer. This identifier will represent a group of items that will be split into a new package. Once split is confirmed, the platform will be assigned a new package ID for this group of items.  For example, if you input `123` as request, the response will return `123` as your unique identification. The seller uses this field to label each group of items that have been split, and the platform will assign new package IDs to them.',
                    },
                    order_line_item_ids: {
                      type: 'array',
                      items: { type: 'string' },
                      description: 'The order line item IDs that need to be split into this group.',
                    },
                  },
                  required: ['id', 'order_line_item_ids'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Input list of splittable groups.',
              },
            },
            required: ['splittable_groups'],
            description: 'Request body',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/orders/{order_id}/split',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersOrderIdTrackingGet',
    {
      name: 'FulfillmentV202309Api_OrdersOrderIdTrackingGet',
      description: `This API can use the order number to obtain the corresponding logistics tracking information.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/orders/{order_id}/tracking',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_OrdersSplitAttributesGet',
    {
      name: 'FulfillmentV202309Api_OrdersSplitAttributesGet',
      description: `Use this API to check whether an order(s) can be split into multiple packages or not.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'orderIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/orders/split_attributes',
      executionParameters: [
        { name: 'order_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesCombinePost',
    {
      name: 'FulfillmentV202309Api_PackagesCombinePost',
      description: `Use this API to combine packages into one fulfillment package.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              combinable_packages: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: { type: 'string', description: 'The package ID.' },
                    order_ids: {
                      type: 'array',
                      items: { type: 'string' },
                      description: 'The list of order IDs corresponding to a package ID.',
                    },
                  },
                  required: ['id', 'order_ids'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Input list of combinable packages.',
              },
            },
            required: ['combinable_packages'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/combine',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesDeliverPost',
    {
      name: 'FulfillmentV202309Api_PackagesDeliverPost',
      description: `Use this API to update the delivery status of the package from in transit status. Please note that only sellers utilizing the SOF( Seller Own Fleet) capability can use this API to update the package status to \\'DELIVERED\\'. This API is only available for the SEA region.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              packages: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    delivery_type: {
                      type: 'string',
                      description:
                        'Delivery status of the package. Possible values: - `DELIVERY_SUCCESS`: Package has been successfully delivered. - `DELIVERY_FAILED`: Package delivery has been unsuccessful. - `UPDATE_POD`: For packages that have been delivered, but you would like to update an attachment.',
                    },
                    fail_delivery_reason: {
                      type: 'string',
                      description:
                        'Delivery failure reasons.  When `delivery_type = DELIVERY_FAILED`, this field is required. For other delivery types, this field is not required.  Possible values: - `INVALID_ADDRESS`: The buyer shipping address is invalid. - `UNABLE_RECEIVE`: The buyer is currently unable to receive the delivery. - `UNABLE_CONTACT_BUYER`: Unable to contact the buyer. - `BUYER_REFUSED`: The buyer has refused to receive the product. - `DELAY_DELIVERY`: Delay in delivery. - `PACKAGE_LOST`: The package is lost. - `PACKAGE_DAMAGE`: The package is damaged. - `FORCE_MAJEURE`: An unforeseeable event of force majeure has occurred. - `OTHER`: Other reason.',
                    },
                    file_type: { type: 'string', description: 'Attachment type: - `IMG` - `PDF`' },
                    file_url: {
                      type: 'string',
                      description:
                        'Attachment URL. The seller can use the [Upload Delivery File](https://partner.tiktokshop.com/docv2/page/650aa6e04a0bb702c06dcd34?external_id=650aa6e04a0bb702c06dcd34#Back%20To%20Top) and [Upload Delivery Image](https://partner.tiktokshop.com/docv2/page/650aa70d0fcef602bf32772f?external_id=650aa70d0fcef602bf32772f) APIs to generate the URL. The attachment will be used by TikTok Shop to verify the package delivery.',
                    },
                    id: { type: 'string', description: 'The package ID.' },
                  },
                  required: [
                    'delivery_type',
                    'fail_delivery_reason',
                    'file_type',
                    'file_url',
                    'id',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The return list of packages.',
              },
            },
            required: ['packages'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/deliver',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPackageIdGet',
    {
      name: 'FulfillmentV202309Api_PackagesPackageIdGet',
      description: `Returns information about a package, including handover time slot, tracking number, and shipping provider information.`,
      inputSchema: {
        type: 'object',
        properties: {
          package_id: { type: 'string', description: 'packageId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'package_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/packages/{package_id}',
      executionParameters: [
        { name: 'package_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPackageIdHandoverTimeSlotsGet',
    {
      name: 'FulfillmentV202309Api_PackagesPackageIdHandoverTimeSlotsGet',
      description: `Use this API to retrieve the time slots available for pickup, drop-off, or van collection for the seller\\'s specified package by using package ID.`,
      inputSchema: {
        type: 'object',
        properties: {
          package_id: { type: 'string', description: 'packageId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'package_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/packages/{package_id}/handover_time_slots',
      executionParameters: [
        { name: 'package_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPackageIdShipPost',
    {
      name: 'FulfillmentV202309Api_PackagesPackageIdShipPost',
      description: `Use this API to ship a package. There are two kinds of shipping options available: \`TikTok Shipping\` or \`Seller Shipping\`.  - \`TikTok Shipping\`: Schedule a package handover time for TikTok Shipping carriers to pickup a package from seller. - \`Seller Shipping\`: Seller arranges their own shipping, and uploads a tracking number and \`shipping_provider_id\`. Package ID can be obtained from [Get Order Detail](https://partner.tiktokshop.com/docv2/page/650aa8ccc16ffe02b8f167a0?external_id=650aa8ccc16ffe02b8f167a0#Back%20To%20Top).`,
      inputSchema: {
        type: 'object',
        properties: {
          package_id: { type: 'string', description: 'packageId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              handover_method: {
                type: 'string',
                description:
                  "Possible values: - `PICKUP`: A logistics carrier will pick up the package(s) from the seller\\'s pickup address. - `DROP_OFF`: The seller will need to drop off the package(s) to a designated location.",
              },
              pickup_slot: {
                type: 'object',
                properties: {
                  end_time: {
                    type: 'number',
                    description:
                      'The end date and time of the package pickup time slot. Unix timestamp.',
                  },
                  start_time: {
                    type: 'number',
                    description:
                      'The start date and time of the package pickup time slot. Unix timestamp.',
                  },
                },
                required: ['end_time', 'start_time'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              self_shipment: {
                type: 'object',
                properties: {
                  shipping_provider_id: {
                    type: 'string',
                    description:
                      'For package with `SEND_BY_SELLER` as `delivery_option` (merchant self-shipping mode), you must input a `shipping_provider_id` to call this API. Please use [Get Shipping Providers](https://partner.tiktokshop.com/docv2/page/650aa48d4a0bb702c06d85cd?external_id=650aa48d4a0bb702c06d85cd) to obtain the `shipping_provider_id`.',
                  },
                  tracking_number: {
                    type: 'string',
                    description:
                      'For package with `SEND_BY_SELLER` as `delivery_option` (merchant self-shipping mode), you must input a `tracking_number` to call this API.',
                  },
                },
                required: ['shipping_provider_id', 'tracking_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['handover_method', 'pickup_slot', 'self_shipment'],
            description: 'Request body',
          },
        },
        required: [
          'package_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/{package_id}/ship',
      executionParameters: [
        { name: 'package_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPackageIdShippingDocumentsGet',
    {
      name: 'FulfillmentV202309Api_PackagesPackageIdShippingDocumentsGet',
      description: `For orders shipped by TikTok Shop, this API retrieves the URL of shipping documents (shipping label and packing slip) for a package specified by the package ID. This API is only applicable to \\"TikTok Shipping\\" orders. To obtain the shipping documents URL via this API, first call \\"Ship Package\\" to ship the corresponding package.`,
      inputSchema: {
        type: 'object',
        properties: {
          package_id: { type: 'string', description: 'packageId identifier' },
          document_type: { type: 'string' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          document_size: { type: 'string' },
          document_format: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'package_id',
          'document_type',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/fulfillment/202309/packages/{package_id}/shipping_documents',
      executionParameters: [
        { name: 'package_id', in: 'path' },
        { name: 'document_type', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'document_size', in: 'query' },
        { name: 'document_format', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPackageIdShippingInfoUpdatePost',
    {
      name: 'FulfillmentV202309Api_PackagesPackageIdShippingInfoUpdatePost',
      description: `If the seller entered an incorrect tracking number, this API allows the seller to update the tracking number and shipping provider for a package that has already been shipped. Attention: This API is only applicable to orders (or packages) shipped by the seller.  It is only used to update the tracking number and shipping provider for packages that have already been shipped.`,
      inputSchema: {
        type: 'object',
        properties: {
          package_id: { type: 'string', description: 'packageId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              shipping_provider_id: {
                type: 'string',
                description:
                  'Identifies the carrier that will deliver the package. Please call the [Get Shipping Providers API](https://partner.tiktokshop.com/docv2/page/650aa48d4a0bb702c06d85cd?external_id=650aa48d4a0bb702c06d85cd#Back%20To%20Top) to retrieve the available shipping provider(s).',
              },
              tracking_number: {
                type: 'string',
                description: 'The shipment tracking number provided by the carrier.',
              },
            },
            required: ['shipping_provider_id', 'tracking_number'],
            description: 'Request body',
          },
        },
        required: [
          'package_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/{package_id}/shipping_info/update',
      executionParameters: [
        { name: 'package_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPackageIdUncombinePost',
    {
      name: 'FulfillmentV202309Api_PackagesPackageIdUncombinePost',
      description: `Use this API to uncombine one or more orders from an already combined package.`,
      inputSchema: {
        type: 'object',
        properties: {
          package_id: { type: 'string', description: 'packageId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              order_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'TikTok Shop order ID. Indicate the orders that need to be removed from the package. Please make sure the orders belong to the package.',
              },
            },
            required: ['order_ids'],
            description: 'Request body',
          },
        },
        required: [
          'package_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/{package_id}/uncombine',
      executionParameters: [
        { name: 'package_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesPost',
    {
      name: 'FulfillmentV202309Api_PackagesPost',
      description: `Use this API to ship orders (purchase labels). This API is region specific to the US. The shipping fee and delivery time is an estimate only and is based on the package dimensions and weight you provided. Based on the package attributes, options listed below may differ from your shipping subscriptions.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              dimension: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description:
                      'Package height.  The length, width, and height must be passed together.',
                  },
                  length: {
                    type: 'string',
                    description:
                      'Package length.  The length, width, and height must be passed together.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit of measurement for the package dimensions.  Available values: - `CM` - `INCH`',
                  },
                  width: {
                    type: 'string',
                    description:
                      'Package width.  The length, width, and height must be passed together.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              order_id: { type: 'string', description: 'TikTok Shop order ID.' },
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of order line item IDs.',
              },
              shipping_service_id: {
                type: 'string',
                description:
                  'Specify the shipping service used.  If not specified, use the default service obtained from [Get Eligible Shipping Service](https://partner.tiktokshop.com/docv2/page/650aa6b2bace3e02b75dda4e).',
              },
              weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description:
                      'The unit of measurement for the package weight.  Available values: - `GRAM` - `POUND`',
                  },
                  value: {
                    type: 'string',
                    description: 'The numerical value of the package weight.',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'dimension',
              'order_id',
              'order_line_item_ids',
              'shipping_service_id',
              'weight',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesSchedulePost',
    {
      name: 'FulfillmentV202309Api_PackagesSchedulePost',
      description: `Use this API to schedule a platform shipping package pickup or drop off. After scheduling the package pickup or drop off, the API will return relevant package pickup/ drop off info.  Note: Please use order id to schedule a package pickup or drop off.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              handover_method: {
                type: 'string',
                description:
                  "Schedule the package as a pickup or drop off. - PICKUP (A shipping provider will pickup the package(s) from the seller\\'s pickup address)   - DROP_OFF (Seller will need to drop off the package(s) to a designated location)",
              },
              order_id: { type: 'string', description: 'TikTok Shop order ID' },
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'Line item ID list',
              },
              pickup_slot: {
                type: 'object',
                properties: {
                  end_time: {
                    type: 'number',
                    description: 'The end date and time of the package pickup time slot.',
                  },
                  start_time: {
                    type: 'number',
                    description: 'The start date and time of the package pickup time slot.',
                  },
                },
                required: ['end_time', 'start_time'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['handover_method', 'order_id', 'order_line_item_ids', 'pickup_slot'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/schedule',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesSearchPost',
    {
      name: 'FulfillmentV202309Api_PackagesSearchPost',
      description: `Retrieve package IDs based on specified conditions. Package creation time and information update time are the common querying conditions.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_field: { type: 'string' },
          sort_order: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              create_time_ge: {
                type: 'number',
                description:
                  'Filter the packages to show only those that are created after (or at) the specified date and time. Unix timestamp.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter the packages to show only those that are created before the specified date and time. Unix timestamp.',
              },
              package_status: {
                type: 'string',
                description:
                  'Possible values: - `PROCESSING`: Package has been arranged by seller. Waiting for carrier to collect the parcel. - `FULFILLING`: Package has been collected by carrier and in transit. - `COMPLETED`: Package has been delivered. - `CANCELLED`: Package has been canceled. Normally, the package is canceled due to the package being lost or damaged.',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter the packages to show only those that are updated after (or at) the specified date and time. Unix timestamp.',
              },
              update_time_lt: {
                type: 'number',
                description:
                  'Filter the packages to show only those that are updated before the specified date and time. Unix timestamp.',
              },
            },
            required: [
              'create_time_ge',
              'create_time_lt',
              'package_status',
              'update_time_ge',
              'update_time_lt',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_field', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202309Api_PackagesShipPost',
    {
      name: 'FulfillmentV202309Api_PackagesShipPost',
      description: `Use this API to batch ship packages by providing multiple package IDs. This API is available for TikTok shipping orders as well as seller shipping orders.   - \`TikTok Shipping\`: Schedule a package handover time for TikTok Shipping carriers to pickup a package from the Seller.  - \`Seller Shipping\`: Seller arranges their own shipping, and upload a \`tracking_number\` and \`shipping_provider_id\`. Package ID can be obtained from [Get Order Detail](https://partner.tiktokshop.com/docv2/page/650aa8ccc16ffe02b8f167a0?external_id=650aa8ccc16ffe02b8f167a0).`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              packages: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    handover_method: {
                      type: 'string',
                      description:
                        "Possible values: - `PICKUP`: A shipping provider will pickup the package(s) from the seller\\'s pickup address. - `DROP_OFF`: The seller will need to drop off the package(s) at a designated location.",
                    },
                    id: { type: 'string', description: 'Package ID.' },
                    pickup_slot: {
                      type: 'object',
                      properties: {
                        end_time: {
                          type: 'number',
                          description:
                            'The end date and time of the package pickup time slot. Unix timestamp.',
                        },
                        start_time: {
                          type: 'number',
                          description:
                            'The start date and time of the package pickup time slot. Unix timestamp.',
                        },
                      },
                      required: ['end_time', 'start_time'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    self_shipment: {
                      type: 'object',
                      properties: {
                        shipping_provider_id: {
                          type: 'string',
                          description:
                            'For packages with the `SEND_BY_SELLER` delivery option type (seller shipping), you must provide the shipping provider information. Please use the [Get Shipping Providers](https://partner.tiktokshop.com/docv2/page/650aa48d4a0bb702c06d85cd?external_id=650aa48d4a0bb702c06d85cd#Back%20To%20Top) API to obtain the `shipping_provider_id`.',
                        },
                        tracking_number: {
                          type: 'string',
                          description:
                            "For packages with the `SEND_BY_SELLER` delivery option type (seller shipping), you must provide the package\\'s tracking number.",
                        },
                      },
                      required: ['shipping_provider_id', 'tracking_number'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                  },
                  required: ['handover_method', 'id', 'pickup_slot', 'self_shipment'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Input list of packages you would like to batch ship.',
              },
            },
            required: ['packages'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202309/packages/ship',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202407Api_BundlesPost',
    {
      name: 'FulfillmentV202407Api_BundlesPost',
      description: `If you send multiple packages to TikTok Shop warehouse in a single first-mile bundle, you can use the API to create a first-mile bundle on TikTok Shop and get the bundle ID.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              handover_method: {
                type: 'string',
                description:
                  'The way you send the first-mile bundle. Possible enumerations are: - `PICKUP`: You use the logistic service provided by TikTok Shop to send the bundle. - `DROP_OFF`: You contact the logistic provider and send the bundle. The logistic provider must be registered at TikTok Shop.',
              },
              order_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The IDs of all the orders sent in a single first-mile bundle. The orders must follow the restrictions: - Each of the orders must exist and be RTS and shipping label printed. - The orders are sent by the same seller. - The orders belong to a single group of TikTok Shop service districts. The groups are:   - Group 1: PH, SG, MY, VN, TH, and JP.   - Group 2: DE, FR, IT, ES.  You can not create first mile bundles for US/UK orders using this API.',
              },
              phone_tail_number: {
                type: 'string',
                description:
                  "Last 4 digits of the sender\\'s phone number. Required when `handover_method == DROP_OFF`.",
              },
              shipping_provider_id: {
                type: 'string',
                description:
                  'The logistic provider ID in TikTok Shop. Required when `handover_method == DROP_OFF`.',
              },
              tracking_number: {
                type: 'string',
                description:
                  'The logistic tracking number of the bundle. Required when `handover_method == DROP_OFF`.',
              },
            },
            required: [
              'handover_method',
              'order_ids',
              'phone_tail_number',
              'shipping_provider_id',
              'tracking_number',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202407/bundles',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'FulfillmentV202502Api_InvoiceUploadPost',
    {
      name: 'FulfillmentV202502Api_InvoiceUploadPost',
      description: `Upload the invoice document. **Note**: Applicable only for local sellers in the Brazil market.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              invoices: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    file: {
                      type: 'string',
                      description:
                        'Base64 encoding of the invoice file to upload. Max file size: 1MB',
                    },
                    file_type: {
                      type: 'string',
                      description: 'The invoice file format. Possible values:  - `XML`',
                    },
                    order_ids: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'The list of TikTok Shop order IDs, retrieved from [Get Order List](650aa8094a0bb702c06df242).',
                    },
                    package_id: {
                      type: 'string',
                      description:
                        'The TikTok Shop package ID, retrieved from [Search Package](650aa592bace3e02b75db748).',
                    },
                  },
                  required: ['file', 'file_type', 'order_ids', 'package_id'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The list of invoices to upload.',
              },
            },
            required: ['invoices'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/fulfillment/202502/invoice/upload',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'LogisticsV202309Api_DeliveryOptionsDeliveryOptionIdShippingProvidersGet',
    {
      name: 'LogisticsV202309Api_DeliveryOptionsDeliveryOptionIdShippingProvidersGet',
      description: `This API is used to obtain the shipping provider corresponding to the specified delivery option`,
      inputSchema: {
        type: 'object',
        properties: {
          delivery_option_id: { type: 'string', description: 'deliveryOptionId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'delivery_option_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/logistics/202309/delivery_options/{delivery_option_id}/shipping_providers',
      executionParameters: [
        { name: 'delivery_option_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'LogisticsV202309Api_GlobalWarehousesGet',
    {
      name: 'LogisticsV202309Api_GlobalWarehousesGet',
      description: `This API retrieves all global warehouse information associated with the seller. Warehouse information includes global warehouse ID, warehouse name, and warehouse ownership.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/logistics/202309/global_warehouses',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'LogisticsV202309Api_WarehousesGet',
    {
      name: 'LogisticsV202309Api_WarehousesGet',
      description: `This API retrieves all warehouse information associated with the seller. Warehouse information includes name, status, address, and other details.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/logistics/202309/warehouses',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'LogisticsV202309Api_WarehousesWarehouseIdDeliveryOptionsGet',
    {
      name: 'LogisticsV202309Api_WarehousesWarehouseIdDeliveryOptionsGet',
      description: `This API is used to obtain a list of delivery options available through the seller\\'s designated warehouse.`,
      inputSchema: {
        type: 'object',
        properties: {
          warehouse_id: { type: 'string', description: 'warehouseId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          scope: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'warehouse_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/logistics/202309/warehouses/{warehouse_id}/delivery_options',
      executionParameters: [
        { name: 'warehouse_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'scope', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'OrderV202309Api_OrdersGet',
    {
      name: 'OrderV202309Api_OrdersGet',
      description: `Get the detailed order information of an order, including important attributes such as order status, shipping addresses, payment details, price and tax info, and package information.`,
      inputSchema: {
        type: 'object',
        properties: {
          ids: { type: 'array', items: { type: 'string' } },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/order/202309/orders',
      executionParameters: [
        { name: 'ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'OrderV202309Api_OrdersSearchPost',
    {
      name: 'OrderV202309Api_OrdersSearchPost',
      description: `Returns a list of orders created or updated during the timeframe indicated by the specified parameters. You can also apply a range of filtering criteria to narrow the list of orders returned, such as order status, delivery option type, and buyer user ID.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_order: { type: 'string' },
          sort_field: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              buyer_user_id: { type: 'string', description: 'Buyer user ID.' },
              create_time_ge: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created on or after the specified date and time. Unix timestamp.  Note: `create_time_ge` and `create_time_lt` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_lt` is empty, `create_time_lt` will default to the current time. - If `create_time_lt` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter orders to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
              is_buyer_request_cancel: {
                type: 'boolean',
                description: 'Whether the buyer has initiated an order cancellation request.',
              },
              order_status: {
                type: 'string',
                description:
                  'Specific order status. Available values: - `UNPAID`: The order has been placed, but payment has not been completed. - `ON_HOLD`: The order has been accepted and is awaiting fulfillment. The buyer may still cancel without the seller’s approval. If `order_type=PRE_ORDER`, the product is still awaiting release so payment will only be authorized 1 day before the release, but the seller should start preparing for the release. - `AWAITING_SHIPMENT`: The order is ready to be shipped, but no items have been shipped yet. - `PARTIALLY_SHIPPING`: Some items in the order have been shipped, but not all. - `AWAITING_COLLECTION`: Shipping has been arranged, but the package is waiting to be collected by the carrier. - `IN_TRANSIT`: The package has been collected by the carrier and delivery is in progress. - `DELIVERED`: The package has been delivered to the buyer. - `COMPLETED`: The order has been completed, and no further returns or refunds are allowed. - `CANCELLED`: The order has been cancelled.',
              },
              shipping_type: {
                type: 'string',
                description:
                  'The delivery method. - `TIKTOK`: Shipping service provided by TikTok. The seller should obtain a shipping label from TikTok. - `SELLER`: Seller provides shipping, including through 3rd party fulfillment providers on behalf of the seller.',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter orders to show only those that are updated on or after the specified date and time. Unix timestamp.  Note: `update_time_ge` and `update_time_lt` together define the update time filter condition. - If `update_time_ge` is filled but `update_time_lt` is empty, `update_time_lt` will default to the current time. - If `update_time_lt` is filled but `update_time_ge` is empty, `update_time_ge` will default to the earliest shop time.',
              },
              update_time_lt: {
                type: 'number',
                description:
                  'Filter orders to show only those that are updated before the specified date and time. Unix timestamp. Refer to notes in `update_time_ge` for more usage information.',
              },
              warehouse_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter orders by pickup/sales warehouse IDs. Applicable only if the multi-warehouse feature is enabled. Max count: 100',
              },
            },
            required: [
              'buyer_user_id',
              'create_time_ge',
              'create_time_lt',
              'is_buyer_request_cancel',
              'order_status',
              'shipping_type',
              'update_time_ge',
              'update_time_lt',
              'warehouse_ids',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/order/202309/orders/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_order', in: 'query' },
        { name: 'sort_field', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'OrderV202407Api_OrdersOrderIdPriceDetailGet',
    {
      name: 'OrderV202407Api_OrdersOrderIdPriceDetailGet',
      description: `Get the detailed pricing calculation information of an order or a line item, including vouchers, tax, etc.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/order/202407/orders/{order_id}/price_detail',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'OrderV202507Api_OrdersGet',
    {
      name: 'OrderV202507Api_OrdersGet',
      description: `Get the detailed order information of an order, including important attributes such as order status, shipping addresses, payment details, price and tax info, and package information.`,
      inputSchema: {
        type: 'object',
        properties: {
          ids: { type: 'array', items: { type: 'string' } },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/order/202507/orders',
      executionParameters: [
        { name: 'ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_BrandsGet',
    {
      name: 'ProductV202309Api_BrandsGet',
      description: `Retrieve all available brands for your shop, including the built-in brands and any custom brands created using the [Create Custom Brands API](650a0926f1fd3102b91bbfb0). Pass the returned brand ID when creating or editing a product to associate the brand with the product. - To check if a brand is fully authorized for use in a specific product category, specify the **category ID**. - To obtain the full list of brands that your shop can potentially use and their authorization status, omit the category ID. We recommend that you specify the **brand name** to narrow down the list of brands returned. **Key concept** Whether you can select and display a brand depends on the brand\\'s authorization status, the categories authorized for the brand, and whether the brand is classified as T1 (internationally renowned brands that require prior brand authorization). **- Brand selection rules**: You can only select the following types of brands during product creation/editing.    - Authorized brands which contain the desired category (\`authorized_status=AUTHORIZED\` and \`brand_status=AVAILABLE\`)    - Unauthorized non-T1 brands (\`authorized_status=UNAUTHORIZED\` and \`is_t1_brand=false\`)  **- Brand display rules**: Note however that brands will only appear on the product display page if the brand is authorized (\`authorized_status=AUTHORIZED\`) and available in the desired category (\`brand_status=AVAILABLE\`). This means that you need to obtain brand authorization for unauthorized non-T1 brands before they can be displayed. Obtain brand authorization or add categories to an authorized brand through TikTok Shop Seller Center > Qualification Center > Brand qualification. **For Tokopedia sellers**: You can select and display any returned brand on Tokopedia regardless of these rules.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          category_id: { type: 'string', description: 'categoryId? identifier' },
          is_authorized: { type: 'boolean' },
          brand_name: { type: 'string' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/brands',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'category_id', in: 'query' },
        { name: 'is_authorized', in: 'query' },
        { name: 'brand_name', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_BrandsPost',
    {
      name: 'ProductV202309Api_BrandsPost',
      description: `Create custom brands for your own use across all markets. Authorization is not required when creating a brand. You can create the brand first and obtain brand authorization later through the Qualification Center in TikTok Shop Seller Center. **Note**: You can create up to 50 brands per day, with a total limit of 1,000 brands.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              name: {
                type: 'string',
                description:
                  'The brand name.  **Note**: - Length: [2, 30] - No language restrictions, but do not use Chinese. - The name will not be translated into multiple languages.',
              },
            },
            required: ['name'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/brands',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_CategoriesCategoryIdAttributesGet',
    {
      name: 'ProductV202309Api_CategoriesCategoryIdAttributesGet',
      description: `Retrieve the standard built-in product and sales attributes for listing a product in a particular category based on your shop\\'s location. Products on TikTok Shop are grouped into categories predefined by TikTok Shop, and each category is associated with a standard set of product attributes and sales attributes. - **Sales attributes** (e.g. size, color, length) define product variants and are optional if your product is straightforward and has no variants. - **Product attributes** (e.g. manufacturer, country of origin, materials used) describe the product as a whole, regardless of variant. Some product attributes are mandatory based on listing policies. Use this API to determine the mandatory and optional attributes before listing a product. **Note**: It must be a [leaf category](6509c89d0fcef602bf1acd9b) that corresponds to the category tree type specified in the \`category_version\` property.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_id: { type: 'string', description: 'categoryId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'category_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/categories/{category_id}/attributes',
      executionParameters: [
        { name: 'category_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_CategoriesCategoryIdGlobalAttributesGet',
    {
      name: 'ProductV202309Api_CategoriesCategoryIdGlobalAttributesGet',
      description: `Retrieve the standard built-in product and sales attributes for listing a global product in a particular category, regardless of market variations. Products on TikTok Shop are grouped into categories predefined by TikTok Shop, and each category is associated with a standard set of product attributes and sales attributes. - **Sales attributes** (e.g. size, color, length) define product variants and are optional if your product is straightforward and has no variants. - **Product attributes** (e.g. manufacturer, country of origin, materials used) describe the product as a whole, regardless of variant. Some product attributes are mandatory based on listing policies. Use this API to determine the mandatory and optional attributes before listing a global product. **Note**: It must be a [leaf category](650a03f8f1fd3102b91b338a) that corresponds to the category tree type specified in the \`category_version\` property.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_id: { type: 'string', description: 'categoryId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'category_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/categories/{category_id}/global_attributes',
      executionParameters: [
        { name: 'category_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_CategoriesCategoryIdGlobalRulesGet',
    {
      name: 'ProductV202309Api_CategoriesCategoryIdGlobalRulesGet',
      description: `Retrieve the additional requirements (beyond mandatory product attributes) for listing a global product in a particular category, regardless of market variations. Requirements may include product certifications, size charts, dimensions and more. Use this API to determine the supporting information that you must prepare before listing a global product. **Note**: It must be a [leaf category](650a03f8f1fd3102b91b338a) that corresponds to the category tree type specified in the \`category_version\` property.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_id: { type: 'string', description: 'categoryId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          category_version: { type: 'string' },
          locale: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'category_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/categories/{category_id}/global_rules',
      executionParameters: [
        { name: 'category_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'category_version', in: 'query' },
        { name: 'locale', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_CategoriesCategoryIdRulesGet',
    {
      name: 'ProductV202309Api_CategoriesCategoryIdRulesGet',
      description: `Retrieve the additional requirements (beyond mandatory product attributes) for listing a product in a particular category based on your shop\\'s location. Requirements may include product certifications, size charts, dimensions and more. Use this API to determine the supporting information that you must prepare before listing a product. **Note**: It must be a [leaf category](6509c89d0fcef602bf1acd9b) that corresponds to the category tree type specified in the \`category_version\` property.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_id: { type: 'string', description: 'categoryId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          category_version: { type: 'string' },
          locale: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'category_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/categories/{category_id}/rules',
      executionParameters: [
        { name: 'category_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'category_version', in: 'query' },
        { name: 'locale', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_CategoriesGet',
    {
      name: 'ProductV202309Api_CategoriesGet',
      description: `Retrieve the list of product categories available for your shop. Product categories are updated frequently, so it\\'s recommended to call the API in real time to ensure you are using the latest category data. Caching category data locally may result in using outdated information, leading to errors when creating products. **For the Indonesia market**: To list a product on both TikTok Shop and Tokopedia, you must use only categories that are available on both platforms. Please call this API twice to identify the overlapping categories.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          keyword: { type: 'string' },
          category_version: { type: 'string' },
          listing_platform: { type: 'string' },
          include_prohibited_categories: { type: 'boolean' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/categories',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'keyword', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'listing_platform', in: 'query' },
        { name: 'include_prohibited_categories', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_CategoriesRecommendPost',
    {
      name: 'ProductV202309Api_CategoriesRecommendPost',
      description: `Retrieve the recommended category for a candidate product based on its title, description, and images. If you are syncing product catalogs from an external system to TikTok Shop, use this API to facilitate product categorization. **Note**: The language used in text fields such as descriptions and titles must align with the target market\\'s language (e.g. don\\'t use Chinese).`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              category_version: {
                type: 'string',
                description:
                  'The category tree version to use for this product. Possible values based on region: - US: `v2`, represents the 7-level category tree.   **Important**: For US shops, you must pass `v2` when using this API. - Other regions: `v1`, represents the 3-level category tree. Default: `v1`',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image. Retrieve the URI from the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22).',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'Product images, including gallery images, images that appear in the description, product variant images.',
              },
              include_prohibited_categories: {
                type: 'boolean',
                description:
                  "A flag to indicate whether to include matching categories that are prohibited on TikTok Shop. Set this to `true` to identify if the product falls under a category that you can\\'t list on TikTok Shop in any circumstances. **Note**: - Applicable only for BR and MX markets. - Default: `false`",
              },
              listing_platform: {
                type: 'string',
                description:
                  'Recommend categories that belong to the specified platform. Possible values: - TIKTOK_SHOP - TOKOPEDIA Default: TIKTOK_SHOP  Applicable only for sellers that migrated from Tokopedia.',
              },
              product_title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - BR, MX: [1, 300] - Other regions: [25, 255]',
              },
            },
            required: [
              'category_version',
              'description',
              'images',
              'include_prohibited_categories',
              'listing_platform',
              'product_title',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/categories/recommend',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_FilesUploadPost',
    {
      name: 'ProductV202309Api_FilesUploadPost',
      description: `Upload non-image files, such as PDF or video to TikTok Shop.  Use this API when you need to add videos to your product to improve the shopping experience, or submit certifications or reports to meet TikTok Shop requirements for listing restricted products.  **Note**: You must store the response body to retrieve the ID or URL required to associate the file with a product during product creation or editing.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          data: { type: 'object' },
          name: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/files/upload',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'data', in: 'query' },
        { name: 'name', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalCategoriesGet',
    {
      name: 'ProductV202309Api_GlobalCategoriesGet',
      description: `Retrieve all available product categories, regardless of market variations. Product categories are updated frequently, so it\\'s recommended to call the API in real time to ensure you are using the latest category data. Caching category data locally may result in using outdated information, leading to errors when creating global products.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          keyword: { type: 'string' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/global_categories',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'keyword', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalCategoriesRecommendPost',
    {
      name: 'ProductV202309Api_GlobalCategoriesRecommendPost',
      description: `Retrieve the recommended categories for a candidate global product based on its title, description, and images. If you are syncing product catalogs from an external system to TikTok Shop, use this API to facilitate product classification. **Note**: Double-byte characters (e.g. Chinese characters) are not supported in text fields such as descriptions and titles. If you include them, the API request will fail.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              category_version: {
                type: 'string',
                description:
                  'The category tree version to use for this product. Possible values based on region: - US: `v2`, represents the 7-level category tree.   **Important**: If the seller account contains an active US shop, you must pass `v2` when using this API. - Other regions: `v1`, represents the 3-level category tree. Default: `v1`',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image. Retrieve the URI from the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22).',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'Product images, including gallery images, images that appear in the description, product variant images.',
              },
              product_title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - MX:[1,300]  - Other regions: [25, 255]',
              },
            },
            required: ['category_version', 'description', 'images', 'product_title'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/global_categories/recommend',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsPost',
    {
      name: 'ProductV202309Api_GlobalProductsPost',
      description: `Create global products to be sold in one or multiple shops outside of the seller\\'s base country. You can only create global products in \`AVAILABLE\` product categories. For other categories, contact your account manager for assistance. After product creation, use the [Publish Global Product API](https://partner.tiktokshop.com/docv2/page/650a64d6defece02be678fd6) to publish and translate the product in the desired markets. **Key concept**: Global products are products created by cross-border sellers to be sold in shops outside of their base country. With global products, cross-border sellers operating across multiple markets can avoid creating the same product for each shop individually. Instead, they just need to create a single global product, which can be published and synced to all their shops, simplifying product management across markets. **Note**: - This API is applicable only for intra-EU sellers and global sellers. To create and list local products intended for sale exclusively in local shops, use the [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a) instead. - There may be a limit to the number of products you can list per day. We recommend prioritizing the creation of key products first to ensure they get published. You can find your listing limit on the Seller Center homepage. - The language used in the product content must align with the target market\\'s language (e.g. don\\'t use Chinese), otherwise the listing will fail or be rejected.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product.   **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              category_id: {
                type: 'string',
                description:
                  'The ID of the category of this product.  - It must be a leaf category that corresponds to the category tree type specified in the `category_version` property.  - It must be a main category (`categories.permission_statuses=AVAILABLE` in [Get Global Categories API](650a03f8f1fd3102b91b338a)). **Note**: Refer to TikTok Shop Academy for information on product category restrictions.',
              },
              category_version: {
                type: 'string',
                description:
                  'The category tree version to assign this product to. Possible values based on region: - US: `v2`, represents the 7-level category tree.   **Important**: If the seller account contains an active US shop, you must pass `v2` when using this API. - Other regions: `v1`, represents the 3-level category tree. Default: `v1`',
              },
              certifications: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    files: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          format: {
                            type: 'string',
                            description:
                              'The format of the certification file. Only PDF is supported.',
                          },
                          id: {
                            type: 'string',
                            description:
                              'The ID of the certification file. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the files first and obtain the corresponding file ID.',
                          },
                          name: {
                            type: 'string',
                            description:
                              'The name of the certification file, including the file extension.',
                          },
                        },
                        required: ['format', 'id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related files.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The ID to identify the type of certification required for the product category. Retrieve this value from the [Get Global Category Rules API](https://partner.tiktokshop.com/docv2/page/650a056df1fd3102b91b5b8e).',
                    },
                    images: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          uri: {
                            type: 'string',
                            description:
                              'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=CERTIFICATION_IMAGE`.',
                          },
                        },
                        required: ['uri'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related images.',
                    },
                  },
                  required: ['files', 'id', 'images'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of certifications for your product. Max count: 10  As per TikTok Shop guidelines, certifications are required for certain restricted product categories. Retrieve the certification requirements for your product from the  [Get Global Category Rules API](https://partner.tiktokshop.com/docv2/page/650a056df1fd3102b91b5b8e). Refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              external_global_product_id: {
                type: 'string',
                description:
                  'An external identifier used in an external ecommerce platform. This is used to associate the global product between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=MAIN_IMAGE`. You can use the returned URI directly, or process it through the [Optimize Images API](665692b35d39dc02deb49a97) first and use the resulting URI.',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. - Max count: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px]    **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white.',
              },
              manufacturer: {
                type: 'object',
                properties: {
                  address: { type: 'string', description: 'The address of the manufacturer.' },
                  email: { type: 'string', description: 'The email address of the manufacturer.' },
                  name: { type: 'string', description: 'The name of the manufacturer.' },
                  phone_number: {
                    type: 'string',
                    description:
                      'The phone number of the manufacturer, prefixed by a plus `+` symbol.  There must be a space or hyphen between the country code and the local phone number.',
                  },
                },
                required: ['address', 'email', 'name', 'phone_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9). **Note**: Applicable only for the EU market in certain categories. Use the [Get Global Category Rules API](650a056df1fd3102b91b5b8e) to check the requirements.',
              },
              package_dimensions: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description: 'The package height. A positive whole number.',
                  },
                  length: {
                    type: 'string',
                    description: 'The package length. A positive whole number.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package dimensions. Only `CENTIMETER` is supported.',
                  },
                  width: {
                    type: 'string',
                    description: 'The package width. A positive whole number.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              package_weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description: 'The unit for the package weight. Only `KILOGRAM` is supported.',
                  },
                  value: {
                    type: 'string',
                    description:
                      'The package weight, which must be a positive number with up to 3 decimal places.',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in product attribute value, retrieved from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - No duplicates allowed under the same attribute. - Max length: 2000 characters - Supports only alphabets and numbers.',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute. Max count: 300 for US; 100 for other regions.  **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant.  **Important**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. You must provide the product attributes marked as `is_required` in the response of the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a).",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1). **Note**: Applicable only for the EU market in certain categories. Use the [Get Global Category Rules API](650a056df1fd3102b91b5b8e) to check the requirements.',
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=SIZE_CHART_IMAGE`.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    external_global_sku_id: {
                      type: 'string',
                      description:
                        'An external identifier used in an external ecommerce platform. This is used to associate the global SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
                    },
                    extra_identifier_codes: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'If the SKU belongs to a virtual bundle (containing multiple individual SKUs), you can add up to 10 additional identifier codes here for the SKUs included in the bundle.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits, or 9 digits ending in capital `X`  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.',
                    },
                    global_quantity: {
                      type: 'number',
                      description:
                        'The total SKU inventory quantity across all shops globally.   The inventory for each local shop is automatically calculated when a product is first published. After publishing, this global quantity cannot be manually changed. You can only modify the inventory quantity in each local shop.',
                    },
                    identifier_code: {
                      type: 'object',
                      properties: {
                        code: {
                          type: 'string',
                          description:
                            'The identifier code.  **Format**: - GTIN: 14 digits  - EAN: 8, 13, or 14 digits  - UPC: 12 digits  - ISBN: 13 digits, or 9 digits ending in capital `X` - JAN: 8 or 13 digits  **Note**: The identifier code must be unique for each SKU, with no repetition allowed.',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of identifier code. Possible values: - GTIN - EAN - UPC - ISBN - JAN',
                        },
                      },
                      required: ['code', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          global_warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the global warehouse where the SKU is stored.  Retrieve the list of global warehouses available for the seller from the [Get Global Seller Warehouse API](https://partner.tiktokshop.com/docv2/page/650aa3f0defece02be6e5ffb).',
                          },
                          quantity: {
                            type: 'number',
                            description:
                              'The SKU quantity available in the warehouse. Valid range: [1, 99,999]',
                          },
                        },
                        required: ['global_warehouse_id', 'quantity'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'SKU inventory information per warehouse. If multi-warehouse is enabled in Seller Center, you must provide the inventory details for each warehouse.  Max count: 50  **Note**: `global_quantity` will not take effect if inventory details are provided for each warehouse.',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description: 'The price amount. Max: 99,999,999.99',
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values: - `USD`: Applicable for global sellers - `EUR`: Applicable for intra-EU sellers',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    sales_attributes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in sales attribute, retrieved from [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute name if the built-in attributes do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - Do not include sensitive characters. - Max length: 20 characters',
                          },
                          sku_img: {
                            type: 'object',
                            properties: {
                              uri: {
                                type: 'string',
                                description:
                                  'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                              },
                            },
                            required: ['uri'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          value_id: {
                            type: 'string',
                            description:
                              'The ID of a built-in sales attribute value, retrieved from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a).',
                          },
                          value_name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 50 characters. - Supports only alphabets and numbers.',
                          },
                        },
                        required: ['id', 'name', 'sku_img', 'value_id', 'value_name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - You can omit this object if there is only 1 SKU. Otherwise, this is **required**. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\\"name\\": \\"Color\\"`, `\\"value_name\\": \\"Red\\"` in different SKUs.',
                    },
                    seller_sku: {
                      type: 'string',
                      description:
                        'An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces',
                    },
                    sku_unit_count: {
                      type: 'string',
                      description:
                        'The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \\"base unit count\\" and the \\"unit type\\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Global Attributes API](650a0483c16ffe02b8dfc80a). The unit price would then be returned in the [Get Global Product API](6509e2b0bace3e02b7490c96).',
                    },
                  },
                  required: [
                    'external_global_sku_id',
                    'extra_identifier_codes',
                    'global_quantity',
                    'identifier_code',
                    'inventory',
                    'price',
                    'sales_attributes',
                    'seller_sku',
                    'sku_unit_count',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of global Stock Keeping Units (SKUs) used to identify distinct variants of the product.  **Note**: - Max SKUs for EU, JP, UK, US: 300 - Max SKUs for other regions: 100  **Recommendations**: Place the most important variant at the beginning of the array.',
              },
              source_locale: {
                type: 'string',
                description:
                  'The BCP-47 locale code representing the source language used for specifying the product information. Default: en-US Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT  **Note**:  - Applicable only for intra-EU sellers. Other sellers can ignore this field and provide the product information in English. - The information provided will be automatically translated into all EU languages supported by TikTok Shop. Ensure the locale matches the language used in field values to avoid inaccurate translations.',
              },
              title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - MX:[1,300]  - Other regions: [25, 255]',
              },
              video: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of the product video. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the video first and obtain the corresponding file ID.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'brand_id',
              'category_id',
              'category_version',
              'certifications',
              'description',
              'external_global_product_id',
              'main_images',
              'manufacturer',
              'manufacturer_ids',
              'package_dimensions',
              'package_weight',
              'product_attributes',
              'responsible_person_ids',
              'size_chart',
              'skus',
              'source_locale',
              'title',
              'video',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/global_products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsDelete',
    {
      name: 'ProductV202309Api_GlobalProductsDelete',
      description: `Delete global products that you no longer need.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              global_product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'The global product IDs to delete. Max number of IDs: 20',
              },
            },
            required: ['global_product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/product/202309/global_products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsGlobalProductIdGet',
    {
      name: 'ProductV202309Api_GlobalProductsGlobalProductIdGet',
      description: `Retrieve all properties of a global product that is in the \\"DRAFT\\", \\"UNPUBLISHED\\", or \\"PUBLISHED\\" status, and the corresponding local product IDs in the published markets.`,
      inputSchema: {
        type: 'object',
        properties: {
          global_product_id: { type: 'string', description: 'globalProductId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'global_product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/global_products/{global_product_id}',
      executionParameters: [
        { name: 'global_product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsGlobalProductIdPut',
    {
      name: 'ProductV202309Api_GlobalProductsGlobalProductIdPut',
      description: `Edit all properties (e.g. description, brand, images, attributes) of a global product. **IMPORTANT**: For published products, the changes will be automatically retranslated and synced to all markets where the product is published. If you have already edited the product information or translations of the associated local products, they will be overwritten by the information in this API. For example, if you have customized the local prices such as the local pre-tax price or the local display price, they will be overwritten each time this API is called. **Note**: - There may be a limit to the number of products you can relist per day. We recommend prioritizing key products first to ensure they get published. You can find your listing limit on the Seller Center homepage. - All inputs, including blanks, in the request payload will overwrite existing values. To retain an existing value, make sure to include it in your request. Therefore, **it is strongly recommended to retrieve the latest product data using [Get Global Product](6509e2b0bace3e02b7490c96) and submit the complete data when editing**. This ensures accuracy and helps avoid errors or unintentional data loss due to missing fields. - The language used in the product content must align with the target market\\'s language (e.g. don\\'t use Chinese), otherwise the listing will fail or be rejected.`,
      inputSchema: {
        type: 'object',
        properties: {
          global_product_id: { type: 'string', description: 'globalProductId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product.  **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              category_id: {
                type: 'string',
                description:
                  'The ID of the category of this product.  - It must be a leaf category that corresponds to the category tree type specified in the `category_version` property.  - It must be a main category (`categories.permission_statuses=AVAILABLE` in [Get Global Categories API](650a03f8f1fd3102b91b338a)). **Note**: Refer to TikTok Shop Academy for information on product category restrictions.',
              },
              category_version: {
                type: 'string',
                description:
                  'The category tree version to assign this product to. Possible values based on region: - US: `v2`, represents the 7-level category tree.   **Important**: If the seller account contains an active US shop, you must pass `v2` when using this API. - Other regions: `v1`, represents the 3-level category tree. Default: `v1`',
              },
              certifications: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    files: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          format: {
                            type: 'string',
                            description:
                              'The format of the certification file. Only PDF is supported.',
                          },
                          id: {
                            type: 'string',
                            description:
                              'The ID of the certification file. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the files first and obtain the corresponding file ID.',
                          },
                          name: {
                            type: 'string',
                            description:
                              'The name of the certification file, including the file extension.',
                          },
                        },
                        required: ['format', 'id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related files.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The ID to identify the type of certification required for the product category. Retrieve this value from the [Get Global Category Rules API](https://partner.tiktokshop.com/docv2/page/650a056df1fd3102b91b5b8e).',
                    },
                    images: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          uri: {
                            type: 'string',
                            description:
                              'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=CERTIFICATION_IMAGE`.',
                          },
                        },
                        required: ['uri'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related images.',
                    },
                  },
                  required: ['files', 'id', 'images'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of certifications for your product. Max count: 10  As per TikTok Shop guidelines, certifications are required for certain restricted product categories. Retrieve the certification requirements for your product from the  [Get Global Category Rules API](https://partner.tiktokshop.com/docv2/page/650a056df1fd3102b91b5b8e). Refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              external_global_product_id: {
                type: 'string',
                description:
                  'An external identifier used in an external ecommerce platform. This is used to associate the global product between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=MAIN_IMAGE`. You can use the returned URI directly, or process it through the [Optimize Images API](665692b35d39dc02deb49a97) first and use the resulting URI.',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. - Max count: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px]    **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white.',
              },
              manufacturer: {
                type: 'object',
                properties: {
                  address: { type: 'string', description: 'The address of the manufacturer.' },
                  email: { type: 'string', description: 'The email address of the manufacturer.' },
                  name: { type: 'string', description: 'The name of the manufacturer.' },
                  phone_number: {
                    type: 'string',
                    description:
                      'The phone number of the manufacturer, prefixed by a plus `+` symbol.  There must be a space or hyphen between the country code and the local phone number.',
                  },
                },
                required: ['address', 'email', 'name', 'phone_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9). Default: The IDs provided when the global product was created.  **Note**: Applicable only for the EU market in certain categories. Use the [Get Global Category Rules API](650a056df1fd3102b91b5b8e) to check the requirements.',
              },
              package_dimensions: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description: 'The package height. A positive whole number.',
                  },
                  length: {
                    type: 'string',
                    description: 'The package length. A positive whole number.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package dimensions. Only `CENTIMETER` is supported.',
                  },
                  width: {
                    type: 'string',
                    description: 'The package width. A positive whole number.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              package_weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description: 'The unit for the package weight. Only `KILOGRAM` is supported.',
                  },
                  value: {
                    type: 'string',
                    description:
                      'The package weight, which must be a positive number with up to 3 decimal places.',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of the product attribute value. This is either a built-in product attribute value ID from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a) or a custom product attribute value ID returned after calling [Create Global Product API(https://partner.tiktokshop.com/docv2/page/6509de61bace3e02b7489cba).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - No duplicates allowed under the same attribute. - Max length: 2000 characters - Supports only alphabets and numbers.',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute. Max count: 300 for US; 100 for other regions.  **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant.  **Important**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. You must provide the product attributes marked as `is_required` in the response of the [Get Global Attributes API](650a0483c16ffe02b8dfc80a).",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1). Default: The IDs provided when the global product was created.  **Note**: Applicable only for the EU market in certain categories. Use the [Get Global Category Rules API](650a056df1fd3102b91b5b8e) to check the requirements.',
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=SIZE_CHART_IMAGE`.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    external_global_sku_id: {
                      type: 'string',
                      description:
                        'An external identifier used in an external ecommerce platform. This is used to associate the global SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
                    },
                    extra_identifier_codes: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'If the SKU belongs to a virtual bundle (containing multiple individual SKUs), you can add up to 10 additional identifier codes here for the SKUs included in the bundle.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits, or 9 digits ending in capital `X`  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.',
                    },
                    global_quantity: {
                      type: 'number',
                      description:
                        'The total SKU inventory quantity across all shops globally.   The inventory for each local shop is automatically calculated when a product is first published. After publishing, this global quantity cannot be manually changed. You can only modify the inventory quantity in each local shop.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The global SKU ID in TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - To edit an existing SKU, include its SKU ID. - Any existing SKU IDs not listed here will result in the deletion of those SKUs. For example, if this product contains 5 SKUs and you only provide 2 SKU IDs, the remaining 3 will be deleted. - To create new SKUs, leave the SKU ID blank and complete the other fields.',
                    },
                    identifier_code: {
                      type: 'object',
                      properties: {
                        code: {
                          type: 'string',
                          description:
                            'The identifier code.  **Format**: - GTIN: 14 digits  - EAN: 8, 13, or 14 digits  - UPC: 12 digits  - ISBN: 13 digits, or 9 digits ending in capital `X` - JAN: 8 or 13 digits  **Note**: The identifier code must be unique for each SKU, with no repetition allowed.',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of identifier code. Possible values: - GTIN - EAN - UPC - ISBN - JAN',
                        },
                      },
                      required: ['code', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          global_warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the global warehouse where the SKU is stored.  Retrieve the list of global warehouses available for the seller from the [Get Global Seller Warehouse API](https://partner.tiktokshop.com/docv2/page/650aa3f0defece02be6e5ffb).',
                          },
                          quantity: {
                            type: 'number',
                            description:
                              'The SKU quantity available in the warehouse. Valid range: [1, 99,999]',
                          },
                        },
                        required: ['global_warehouse_id', 'quantity'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'SKU inventory information per warehouse. If multi-warehouse is enabled in Seller Center, you must provide the inventory details for each warehouse.  Max count: 50  **Note**: `global_quantity` will not take effect if inventory details are provided for each warehouse.',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description: 'The price amount. Max: 99,999,999.99',
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values: - `USD`: Applicable for global sellers - `EUR`: Applicable for intra-EU sellers',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    sale_prices: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          amount: {
                            type: 'string',
                            description:
                              'The price amount. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.',
                          },
                          region: {
                            type: 'string',
                            description:
                              'The market where you want to sync the sale price. Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IE: Ireland - IT: Italy - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam',
                          },
                        },
                        required: ['amount', 'region'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        "The SKU\\'s **local display price** shown on the product page before any discounts.   **Note**:  -  Required for JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                    },
                    sales_attributes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of the sales attribute. This is either a built-in sales attribute ID from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a) or a custom attribute ID returned after calling [Create Global Product API(https://partner.tiktokshop.com/docv2/page/6509de61bace3e02b7489cba).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute name if the built-in attributes do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - Do not include sensitive characters. - Max length: 20 characters',
                          },
                          sku_img: {
                            type: 'object',
                            properties: {
                              uri: {
                                type: 'string',
                                description:
                                  'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                              },
                            },
                            required: ['uri'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          value_id: {
                            type: 'string',
                            description:
                              'The ID of the sales attribute value. This is either a built-in sales attribute value ID from the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a) or a custom sales attribute value ID returned after calling [Create Global Product API(https://partner.tiktokshop.com/docv2/page/6509de61bace3e02b7489cba).',
                          },
                          value_name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 50 characters. - Supports only alphabets and numbers.',
                          },
                        },
                        required: ['id', 'name', 'sku_img', 'value_id', 'value_name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - You must retain at least 1 sales attribute, deleting all existing sales attributes is not allowed. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\\"name\\": \\"Color\\"`, `\\"value_name\\": \\"Red\\"` in different SKUs.',
                    },
                    seller_sku: {
                      type: 'string',
                      description:
                        'An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces',
                    },
                    sku_unit_count: {
                      type: 'string',
                      description:
                        'The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \\"base unit count\\" and the \\"unit type\\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a). The unit price would then be returned in the [Get Global Product API](https://partner.tiktokshop.com/docv2/page/6509e2b0bace3e02b7490c96).',
                    },
                  },
                  required: [
                    'external_global_sku_id',
                    'extra_identifier_codes',
                    'global_quantity',
                    'id',
                    'identifier_code',
                    'inventory',
                    'price',
                    'sale_prices',
                    'sales_attributes',
                    'seller_sku',
                    'sku_unit_count',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of global Stock Keeping Units (SKUs) used to identify distinct variants of the product.  **Note**: - Max SKUs for EU, JP, UK, US: 300 - Max SKUs for other regions: 100  **Recommendations**: Place the most important variant at the beginning of the array.',
              },
              title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - MX:[1,300]  - Other regions: [25, 255]',
              },
              video: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of the product video. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the video first and obtain the corresponding file ID.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'brand_id',
              'category_id',
              'category_version',
              'certifications',
              'description',
              'external_global_product_id',
              'main_images',
              'manufacturer',
              'manufacturer_ids',
              'package_dimensions',
              'package_weight',
              'product_attributes',
              'responsible_person_ids',
              'size_chart',
              'skus',
              'title',
              'video',
            ],
            description: 'Request body',
          },
        },
        required: [
          'global_product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'put',
      pathTemplate: '/product/202309/global_products/{global_product_id}',
      executionParameters: [
        { name: 'global_product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsGlobalProductIdInventoryUpdatePost',
    {
      name: 'ProductV202309Api_GlobalProductsGlobalProductIdInventoryUpdatePost',
      description: `Update the inventory of unpublished global products if you have access to the Multi-Warehouse feature. The inventory of published global products will not be affected by this update operation.`,
      inputSchema: {
        type: 'object',
        properties: {
          global_product_id: { type: 'string', description: 'globalProductId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              global_skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: { type: 'string', description: 'The global SKU ID in TikTok Shop.' },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          global_warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the global warehouse where the SKU is stored. Retrieve this value from [Get Global Product](6509e2b0bace3e02b7490c96) or [Get Global Seller Warehouse](650aa3f0defece02be6e5ffb).',
                          },
                          quantity: { type: 'number', description: 'The updated SKU quantity.' },
                        },
                        required: ['global_warehouse_id', 'quantity'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'Global SKU inventory information.',
                    },
                  },
                  required: ['id', 'inventory'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The list of global SKUs that need to be updated.',
              },
            },
            required: ['global_skus'],
            description: 'Request body',
          },
        },
        required: [
          'global_product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/global_products/{global_product_id}/inventory/update',
      executionParameters: [
        { name: 'global_product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsGlobalProductIdPublishPost',
    {
      name: 'ProductV202309Api_GlobalProductsGlobalProductIdPublishPost',
      description: `Publish and convert a global product to local products in one or multiple shops in supported markets. After publishing, the product is sent for review by TikTok Shop in the respective markets. For sellers in the EU market, the provided information will also be automatically translated into all EU languages supported by TikTok Shop. **Note**:  - You can only publish in each market once. To change product information, edit the global product by using the [Edit Global Product API](6509e1bcc16ffe02b8dc3cd7). The changes will be automatically synchronized to all markets where the product is published - Use the [Get Product API](6509d85b4a0bb702c057fdda) to obtain the converted local product information in the target market\\'s language.  - Use the [Edit Product API](6509da7d0fcef602bf1caddf) or [Partial Edit Product API](650a98d74a0bb702c06c3289) to edit the local product information, if necessary.`,
      inputSchema: {
        type: 'object',
        properties: {
          global_product_id: { type: 'string', description: 'globalProductId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              publish_target: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    manufacturer_ids: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9). Default: The IDs provided when the global product was created. **Note**: Applicable only for the EU market in certain categories. Use the [Get Global Category Rules API](650a056df1fd3102b91b5b8e) to check the requirements.',
                    },
                    region: {
                      type: 'string',
                      description:
                        'The new market where you want to publish the global product. Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IE: Ireland - IT: Italy - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam - MX: Mexico  **Note**: You can only publish in each market once.',
                    },
                    responsible_person_ids: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1). Default: The IDs provided when the global product was created. **Note**: Applicable only for the EU market in certain categories. Use the [Get Global Category Rules API](650a056df1fd3102b91b5b8e) to check the requirements.',
                    },
                    skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          inventory: {
                            type: 'object',
                            properties: {
                              quantity: {
                                type: 'number',
                                description:
                                  'The SKU quantity available in the warehouse. Valid range: [1, 99,999]  **Note**: If the local SKU inventory quantity exceeds the global SKU quantity, the global SKU quantity will be updated to be the sum of all local inventories.',
                              },
                              warehouse_id: {
                                type: 'string',
                                description:
                                  "The warehouse ID. Retrieve this value from the [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).  Default: - Sellers without multiple warehouses: The available warehouses will be used, prioritizing local warehouses in the specified market over warehouses in the seller\\'s base country. - Sellers with multiple warehouses: The global warehouse ID",
                              },
                            },
                            required: ['quantity', 'warehouse_id'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          price: {
                            type: 'object',
                            properties: {
                              amount: {
                                type: 'string',
                                description:
                                  "The SKU\\'s **local pre-tax price**. This excludes any applicable charges such as cross-border shipping costs, taxes, and other fees, and therefore does not appear on the product page. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  Not applicable for JP and US shops using China warehouses, please use `price.sale_price` instead.",
                              },
                              currency: {
                                type: 'string',
                                description:
                                  'The currency. You can use the local currency or USD. Possible values: - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japanese - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam - MXN: Mexico',
                              },
                              sale_price: {
                                type: 'string',
                                description:
                                  "The SKU\\'s **local display price** shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  -  Required for JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                              },
                            },
                            required: ['amount', 'currency', 'sale_price'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          related_global_sku_id: {
                            type: 'string',
                            description:
                              'The global SKU ID to be published. After publishing, a corresponding local product SKU will be created and linked to the global SKU.',
                          },
                        },
                        required: ['inventory', 'price', 'related_global_sku_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'The SKUs to be published in the specified market. - Max SKUs for EU, JP, UK, US: 300 - Max SKUs for other regions: 100',
                    },
                  },
                  required: ['manufacturer_ids', 'region', 'responsible_person_ids', 'skus'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Target markets for publishing global products.',
              },
            },
            required: ['publish_target'],
            description: 'Request body',
          },
        },
        required: [
          'global_product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/global_products/{global_product_id}/publish',
      executionParameters: [
        { name: 'global_product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_GlobalProductsSearchPost',
    {
      name: 'ProductV202309Api_GlobalProductsSearchPost',
      description: `Search your catalog to retrieve a list of global products based on filter conditions through this API. If you need to get detailed information about a global product, use the global product ID response in the \\"Get Global Product\\" API.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              create_time_ge: {
                type: 'number',
                description:
                  'The fields \\"create_time_ge\\" and \\"create_time_le\\" together constitute the filter condition for the creation time of the global product.  - If you only fill in the \\"create_time_le\\", and the \\"create_time_ge\\" is empty , then we will set the earliest time of the shop to the field \\"create_time_ge\\" by default.  - If you only fill in the \\"create_time_ge\\", and the \\"create_time_le\\" is empty , then we will set the current time to the field \\"create_time_le\\" by default.  The time search condition uses Unix timestamp in GMT (UTC+00:00).',
              },
              create_time_le: {
                type: 'number',
                description: 'Refer to the description of \\"create_time_ge\\".',
              },
              seller_skus: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Seller SKUs, a filtering condition used for global product search. This field allows you to search for all global products that contain these Seller SKUs.',
              },
              status: {
                type: 'string',
                description:
                  'Global Product status, used as a filtering criterion for global product search. including  PUBLISHED,UNPUBLISHED,DRAFT,DELETED',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'The fields \\"update_time_ge\\" and \\"update_time_le\\" together constitute the filter condition for the update time of the global product.  -  If you only fill in the \\"update_time_le\\", and the \\"update_time_ge\\" is empty , then we will set the earliest time of the shop to the field \\"update_time_ge\\" by default.  - If you only fill in the \\"update_time_ge\\", and the \\"update_time_le\\" is empty , then we will set the current time to the field \\"update_time_le\\" by default.',
              },
              update_time_le: {
                type: 'number',
                description: 'Refer to the description of \\"update_time_ge\\".',
              },
            },
            required: [
              'create_time_ge',
              'create_time_le',
              'seller_skus',
              'status',
              'update_time_ge',
              'update_time_le',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/global_products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ImagesUploadPost',
    {
      name: 'ProductV202309Api_ImagesUploadPost',
      description: `Upload local images to TikTok Shop for use as product images, variant images, size charts, certification images and so on.  **Note**:  - All images used in TikTok Shop products must be uploaded through this API. You will not be able to use any image URLs that are not hosted by TikTok Shop. - You must store the response body to retrieve the ID or URL required to associate the image with a product during product creation or editing.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          data: { type: 'object' },
          use_case: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/images/upload',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'data', in: 'query' },
        { name: 'use_case', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_InventorySearchPost',
    {
      name: 'ProductV202309Api_InventorySearchPost',
      description: `Retrieve inventory information for multiple products or SKUs. **Note**:  - Searches can be based on either product IDs or SKU IDs, not both at the same time. - Passing Product IDs returns the inventory information of all SKUs under the specified products. - Passing SKU IDs returns the inventory information for the specified SKUs.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of product IDs used to search for inventory information. Max IDs: 100',
              },
              sku_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A list of SKU IDs used to search for inventory information. Max IDs: 600  **Note**: If both `sku_ids` and `product_ids` are passed, `sku_ids` will take precedence.',
              },
            },
            required: ['product_ids', 'sku_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/inventory/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_PrerequisitesGet',
    {
      name: 'ProductV202309Api_PrerequisitesGet',
      description: `Use this API to get the product rules of the shop and whether the prerequisites for listing product are met.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/prerequisites',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsActivatePost',
    {
      name: 'ProductV202309Api_ProductsActivatePost',
      description: `Activate hidden products that are in the \`Seller_deactivated\` or \`Platform_deactivated\` status and display them in the TikTok Shop catalog.  After submitting the activation request, the products will be sent to TikTok Shop for auditing and their status will change to \`Pending\`. If a product passes the audit, its status will change back to \`Activate\`. You can use the [Product status change webhook](https://partner.tiktokshop.com/docv2/page/650956aff1fd3102b90b6261) to monitor the audit status.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The listing platforms where the product will be activated.  Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: TIKTOK_SHOP  Applicable only for sellers that migrated from Tokopedia.',
              },
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'The product IDs to activate. Max number of IDs: 20',
              },
            },
            required: ['listing_platforms', 'product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/activate',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsDeactivatePost',
    {
      name: 'ProductV202309Api_ProductsDeactivatePost',
      description: `Deactivate products that are in the \`Activate\` status and hide them from buyers. The status changes to \`Seller_deactivated\` after deactivation. In the event there\\'s some issue with a product (e.g. out of stock), you can deactivate the product and hide it temporarily from buyers. When the issues are resolved, you can activate the product again by using the [Activate Product API](https://partner.tiktokshop.com/docv2/page/650306ff5a12ff0294eab4a9).`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The listing platforms where the product will be deactivated.  Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: TIKTOK_SHOP  Applicable only for sellers that migrated from Tokopedia.',
              },
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'The product IDs to deactivate. Max number of IDs: 20.',
              },
            },
            required: ['listing_platforms', 'product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/deactivate',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsPost',
    {
      name: 'ProductV202309Api_ProductsPost',
      description: `Create and list products intended for sale exclusively in local shops. You can create products in \`AVAILABLE\` categories. (US sellers can also create products in INVITE_ONLY categories). After creation, it will be sent for audit review by TikTok Shop. Use the [Product status change](https://partner.tiktokshop.com/docv2/page/650956aff1fd3102b90b6261) webhook to keep track of the review status. **Note**:  - This API is applicable for all sellers. - Global sellers who have migrated to use the local replication listing method can use this API to create products. Otherwise, they can continue to use the [Create Global Product API](6509de61bace3e02b7489cba) to create global products. - Before calling this API, we recommend that you prepare the necessary information by following the [usage flow for your region](650b23eef1fd3102b93d2326). - There may be a limit to the number of products you can list per day. We recommend prioritizing the creation of key products first to ensure they get published. Refer to TikTok Shop Academy for details on the limit. - The language used in the product content must align with the target market\\'s language (e.g. don\\'t use Chinese), otherwise the listing will fail or be rejected.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product.  Use the [Get Brands API](https://partner.tiktokshop.com/docv2/page/6503075656e2bb0289dd5d01) to get the list of available brands for a shop.  **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              category_id: {
                type: 'string',
                description:
                  'The ID of the category of this product. It must be a leaf category that corresponds to the category tree type specified in the `category_version` property. Use the [Get Categories API](https://partner.tiktokshop.com/docv2/page/6509c89d0fcef602bf1acd9b) to obtain the available categories.  **Note**: - Refer to TikTok Shop Academy for information on product category restrictions. - For the US market, if you are creating products in `INVITE_ONLY` categories, you must submit a separate application through the Qualification Center on TikTok Shop Seller Center to gain access. Otherwise, even if the product audit is passed, the product will not be listed and made available to buyers. (The product status will be `PENDING` and the audit status will be `PRE_APPROVED`) - For the Indonesia market, to list a product on both TikTok Shop and Tokopedia, you must use only categories that are available on both platforms.',
              },
              category_version: {
                type: 'string',
                description:
                  'The category tree version to assign this product to. Possible values based on region: - US: `v2`, represents the 7-level category tree.   **Important**: For US shops, you must pass `v2` when using this API. - Other regions: `v1`, represents the 3-level category tree. Default: `v1`',
              },
              certifications: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    expiration_date: {
                      type: 'number',
                      description:
                        'The expiration date of this certification expressed in unix timestamp (seconds) UTC+0. This field may be required for certain certifications. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to find out the requirements.',
                    },
                    files: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          format: {
                            type: 'string',
                            description:
                              'The format of the certification file. Only PDF is supported.',
                          },
                          id: {
                            type: 'string',
                            description:
                              'The ID of the certification file. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the files first and obtain the corresponding file ID.',
                          },
                          name: {
                            type: 'string',
                            description:
                              'The name of the certification file, including the file extension.',
                          },
                        },
                        required: ['format', 'id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related files.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The ID to identify the type of certification required for the product category. Retrieve this value from the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9).',
                    },
                    images: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          uri: {
                            type: 'string',
                            description:
                              'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=CERTIFICATION_IMAGE`.',
                          },
                        },
                        required: ['uri'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related images.',
                    },
                  },
                  required: ['expiration_date', 'files', 'id', 'images'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of certifications for your product. Max count: 10  As per TikTok Shop guidelines, certifications are required for certain restricted product categories. Retrieve the certification requirements for your product from the  [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9). Refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions.',
              },
              delivery_option_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'This field is returned for seller accounts in the following regions only: - ID - MX - MY - PH - SG - TH - VN  For all other regions, this field is NOT used and will NOT be processed if passed for create, edit, or partial edit operations.   The custom delivery option IDs to apply to this product if you want to override the default warehouse delivery options. To retrieve the available option IDs, call [Get Warehouse Delivery Options](650aa46ebace3e02b75d9afa) with `scope=PRODUCT`.  **Note**: Leave this field blank to inherit the default delivery options configured for the warehouse.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              external_product_id: {
                type: 'string',
                description:
                  'An external identifier used in an external ecommerce platform. This is used to associate the product between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
              },
              idempotency_key: {
                type: 'string',
                description:
                  'A unique key to recognize a request and prevent duplicate processing of the same request, especially in cases of connection issues. Ensure this key is unique within the shop for each request to avoid accidental duplicates. It can be used to track requests across the shop. Max length: 128 characters  **Note**: We recommend that you generate v4 UUIDs for use as keys.',
              },
              is_cod_allowed: {
                type: 'boolean',
                description:
                  'A flag indicating whether to show the Cash On Delivery (COD) payment option during checkout. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to check if COD is supported for your product category.  Applicable only for the following markets: - Global sellers: MY, PH, SA, TH, VN - Local sellers: ID, MY, PH, SA, TH, VN  **Note**: If COD is not supported, the listing will fail if you set this to `true`.',
              },
              is_not_for_sale: {
                type: 'boolean',
                description:
                  "A flag indicating whether the product is not for sale and only available through Gift with Purchase (GWP) promotions. Such products won\\'t appear in searches or recommendations True: Not for sale False: For sale",
              },
              is_pre_owned: {
                type: 'boolean',
                description:
                  'A flag to indicate if the product is pre-owned.  Applicable only if TOKOPEDIA is the sole listing platform. **Note**: To list pre-owned products on the TikTok Shop platform, please specify the ID of one of the designated pre-owned product categories (e.g. pre-owned luxury bags, luggage, and accessories) in `category_id`.',
              },
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The platforms for listing the product. Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: TIKTOK_SHOP  Applicable only for sellers that migrated from Tokopedia.',
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image.   Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=MAIN_IMAGE`. You can use the returned URI directly, or process it through the [Optimize Images API](665692b35d39dc02deb49a97) first and use the resulting URI.',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. - Max count: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px]    **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](665692b35d39dc02deb49a97) to change the background to white.',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              minimum_order_quantity: {
                type: 'number',
                description:
                  'The minimum order quantity for the product. Valid range: [1, 20]  Applicable only for the Indonesia market and selected sellers in other SEA markets. Contact your account manager for more information about gaining access to this field.',
              },
              package_dimensions: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description:
                      'The package height. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  length: {
                    type: 'string',
                    description:
                      'The package length. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package dimensions. Possible values based on region: - US: CENTIMETER, INCH - Other  regions: CENTIMETER    **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using KILOGRAM for the weight, you must use CENTIMETER for the dimensions.',
                  },
                  width: {
                    type: 'string',
                    description:
                      'The package width. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              package_weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package weight. Possible values based on region: - US: `KILOGRAM`, `POUND` - BR, JP, MX: `KILOGRAM`, `GRAM` - Other countries: `KILOGRAM`  **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using `KILOGRAM` for the weight, you must use `CENTIMETER` for the dimensions.',
                  },
                  value: {
                    type: 'string',
                    description:
                      'The package weight, which must be a positive number. The number format varies based on the `unit`:  - `GRAM`: integer - `KILOGRAM`: up to 3 decimal places - `POUND`: up to 2 decimal places',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              primary_combined_product_id: {
                type: 'string',
                description:
                  'If this product is associated with a virtual bundle, this value is the ID of the primary product in the bundle.  **Note**: Required only for virtual bundle products.',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in product attribute value, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - No duplicates allowed under the same attribute. - Max length: 2000 characters',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute.  **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant.  **Important**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. You must provide the product attributes marked as `is_required` in the response of the [Get Attributes API](6509c5784a0bb702c0561cc8) to avoid listing failure.",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              save_mode: {
                type: 'string',
                description:
                  'Indicates how the product should be saved. Possible values: - AS_DRAFT: Save the product as a draft for future editing. - LISTING: Immediately list the product in the shop. Default: LISTING',
              },
              shipping_insurance_requirement: {
                type: 'string',
                description:
                  "The shipping insurance purchase requirement imposed on buyers for the product.  Possible values: - REQUIRED: Shipping insurance is mandatory and buyers can\\'t opt out. - OPTIONAL: Buyers can choose to purchase shipping insurance through the platform. - NOT_SUPPORTED: Shipping insurance is not supported for the product. Default: OPTIONAL  Applicable only if the listing platforms include TOKOPEDIA.",
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=SIZE_CHART_IMAGE`.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    combined_skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          product_id: {
                            type: 'string',
                            description:
                              'The ID of the source product included in the virtual bundle.',
                          },
                          sku_count: {
                            type: 'number',
                            description:
                              'The quantity of the source SKU included in the virtual bundle.',
                          },
                          sku_id: {
                            type: 'string',
                            description: 'The ID of the source SKU included in the virtual bundle.',
                          },
                        },
                        required: ['product_id', 'sku_count', 'sku_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'If this SKU belongs to a virtual bundle, this object contains the list of individual SKUs that form the bundle (e.g. gift basket, starter pack).',
                    },
                    external_list_prices: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          amount: {
                            type: 'string',
                            description: 'The price amount. Valid range: [0.01, 7600]',
                          },
                          currency: {
                            type: 'string',
                            description: 'The currency. Possible values: USD',
                          },
                          source: {
                            type: 'string',
                            description:
                              'The external ecommerce platform from which the price is sourced. Possible values: - SHOPIFY_COMPARE_AT_PRICE: The compare_at_price in Shopify.',
                          },
                        },
                        required: ['amount', 'currency', 'source'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        "The SKU list price (e.g. MSRP, RRP) or original price information on external ecommerce platforms. Applicable only for selected sellers in the US market.  **Note**: This value may appear as the strikethrough price on the product page. However, whether the strikethrough price is shown and the amount shown are subject to the audit team\\'s review and decision based on various pricing information.",
                    },
                    external_sku_id: {
                      type: 'string',
                      description:
                        'An external identifier used in an external ecommerce platform. This is used to associate the SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
                    },
                    external_urls: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'A comma-delimited list of URLs for third-party product listing pages where consumers can place orders. Add this property if you have products listed on third-party sites other than TikTok Shop and would like to map them. Max string length: 500',
                    },
                    extra_identifier_codes: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'If the SKU belongs to a virtual bundle (containing multiple individual SKUs), you can add up to 10 additional identifier codes here for the SKUs included in the bundle.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits, or 9 digits ending in capital `X`  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.',
                    },
                    identifier_code: {
                      type: 'object',
                      properties: {
                        code: {
                          type: 'string',
                          description:
                            'The identifier code.  **Format**: - GTIN: 14 digits  - EAN: 8, 13, or 14 digits  - UPC: 12 digits  - ISBN: 13 digits, or 9 digits ending in capital `X` - JAN: 8 or 13 digits  **Note**: The identifier code must be unique for each SKU, with no repetition allowed.',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of identifier code. Possible values: - GTIN - EAN - UPC - ISBN - JAN',
                        },
                      },
                      required: ['code', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          quantity: {
                            type: 'number',
                            description:
                              'The total SKU quantity available in the warehouse. Valid range: [1, 99,999]',
                          },
                          warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the warehouse where the SKU is stored.  Retrieve the list of warehouses available for your shop from the [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).',
                          },
                        },
                        required: ['quantity', 'warehouse_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'SKU inventory information.',
                    },
                    list_price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            'The price amount. Valid range: [0.01, 7600]   **Note**:  - The value must be equal to or greater than `skus.price.amount`. Otherwise, it will be discarded. - If the value is verified to be legitimate by the audit team, it will be stored and returned in the [Get Product API](6509d85b4a0bb702c057fdda).',
                        },
                        currency: {
                          type: 'string',
                          description: 'The currency. Possible values: USD',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    pre_sale: {
                      type: 'object',
                      properties: {
                        fulfillment_type: {
                          type: 'object',
                          properties: {
                            handling_duration_days: {
                              type: 'number',
                              description:
                                'The desired duration for handling a pre-sale order and handing it over to a shipping carrier.   Applicable only for the following regions and pre-sale type: **US** - `MADE_TO_ORDER`: Business days, from 3 to 14 days. - `CUSTOM`: Business days, from 3 to 30 days.  **UK, EU, SEA, and JP** - `PRE_ORDER`: Calendar days, from 3 to 30 days.',
                            },
                            release_date: {
                              type: 'number',
                              description:
                                'The date on which the product gets converted into a regular product and becomes available for general purchase. On this date, order handling will also start, changing the status of the order to [`AWAITING_SHIPMENT`](https://partner.tiktokshop.com/docv2/page/650b1b4bbace3e02b76d1011).   Applicable only for `PRE_ORDER` in the US. **Note**: - Valid range: The date must fall within 3 - 60 days from the current date. - This date is a unix timestamp (seconds) based on the seller-selected timezone in Seller Center. - This date cannot be modified once the product goes live.',
                            },
                          },
                          required: ['handling_duration_days', 'release_date'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of pre-sale. Possible values based on the region: **US** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a **release date**. - `MADE_TO_ORDER`: The product is produced only after the order is received. Fulfillment can be extended by specifying a **duration**. - `CUSTOM`: The product requires a fulfillment timeline that exceeds the standard due to other factors. Fulfillment can be extended by specifying a **duration**.  **UK, EU, SEA, and JP** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a **duration**.',
                        },
                      },
                      required: ['fulfillment_type', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            "**Local sellers/Intra-EU sellers** The SKU\\'s **local display price** shown on the product page before any discounts. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.",
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values based on the region: - BRL: Brazil - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japan - MXN: Mexico - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                        },
                        sale_price: {
                          type: 'string',
                          description:
                            "**Global sellers** The SKU\\'s **local display price** shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  - Applicable only for global sellers. -  Required for JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                        },
                      },
                      required: ['amount', 'currency', 'sale_price'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    sales_attributes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in sales attribute, retrieved from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute name if the built-in attributes do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - Do not include sensitive characters. - Max length: 20 characters',
                          },
                          sku_img: {
                            type: 'object',
                            properties: {
                              uri: {
                                type: 'string',
                                description:
                                  'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                              },
                            },
                            required: ['uri'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          supplementary_sku_images: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                uri: {
                                  type: 'string',
                                  description:
                                    'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                                },
                              },
                              required: ['uri'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description:
                              'A list of supplementary images for each value (e.g. red) of the primary sales attribute (e.g. color) to provide multiple views or details of the product for that attribute value. These appear in the product options gallery on TikTok Shop.  **Note**: - Max number of image URIs: 8. - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Applicable only for the US market.',
                          },
                          value_id: {
                            type: 'string',
                            description:
                              'The ID of a built-in sales attribute value, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          value_name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 50 characters.',
                          },
                        },
                        required: [
                          'id',
                          'name',
                          'sku_img',
                          'supplementary_sku_images',
                          'value_id',
                          'value_name',
                        ],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - You can omit this object if there is only 1 SKU. Otherwise, this is **required**. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\\"name\\": \\"Color\\"`, `\\"value_name\\": \\"Red\\"` in different SKUs.',
                    },
                    seller_sku: {
                      type: 'string',
                      description:
                        'An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces',
                    },
                    sku_unit_count: {
                      type: 'string',
                      description:
                        'The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \\"base unit count\\" and the \\"unit type\\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8). The unit price would then be returned in the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda).',
                    },
                  },
                  required: [
                    'combined_skus',
                    'external_list_prices',
                    'external_sku_id',
                    'external_urls',
                    'extra_identifier_codes',
                    'identifier_code',
                    'inventory',
                    'list_price',
                    'pre_sale',
                    'price',
                    'sales_attributes',
                    'seller_sku',
                    'sku_unit_count',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.  **Note**: - Max SKUs for BR, EU, JP, MX, UK, US: 300 - Max SKUs for other regions: 100  **Recommendations**: Place the most important variant at the beginning of the array.',
              },
              title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - BR, MX: [1, 300]  - Other regions: [25, 255]',
              },
              video: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of the product video. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the video first and obtain the corresponding file ID.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'brand_id',
              'category_id',
              'category_version',
              'certifications',
              'delivery_option_ids',
              'description',
              'external_product_id',
              'idempotency_key',
              'is_cod_allowed',
              'is_not_for_sale',
              'is_pre_owned',
              'listing_platforms',
              'main_images',
              'manufacturer_ids',
              'minimum_order_quantity',
              'package_dimensions',
              'package_weight',
              'primary_combined_product_id',
              'product_attributes',
              'responsible_person_ids',
              'save_mode',
              'shipping_insurance_requirement',
              'size_chart',
              'skus',
              'title',
              'video',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsDelete',
    {
      name: 'ProductV202309Api_ProductsDelete',
      description: `Delete non-frozen products that you no longer need. **For the Indonesia market**: You can only delete products that are not frozen on all listing platforms. If the product is frozen on any platform, it cannot be deleted.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'The product IDs to delete. Max number of IDs: 20.',
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/product/202309/products',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsListingCheckPost',
    {
      name: 'ProductV202309Api_ProductsListingCheckPost',
      description: `Identify any issues with your product properties in advance to ensure your product is ready for listing. Every product must meet TikTok Shop requirements before it can be listed. Before listing, you can submit all relevant product information to this API to check whether a listing meets these requirements. You\\'ll receive a list of issues to resolve before listing. This process helps reduce the risk of failure when creating products. **Note**:  - The language used in the product content must align with the target market\\'s language (e.g. don\\'t use Chinese), otherwise the listing will fail or be rejected.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          is_diagnosis_required: { type: 'boolean' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product.  Use the [Get Brands API](https://partner.tiktokshop.com/docv2/page/6503075656e2bb0289dd5d01) to get the list of available brands for a shop. **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              category_id: {
                type: 'string',
                description:
                  'The ID of the category of this product. It must be a leaf category that corresponds to the category tree type specified in the `category_version` property. Use the [Get Categories API](https://partner.tiktokshop.com/docv2/page/6509c89d0fcef602bf1acd9b) to obtain the available categories.   **Note**: - Refer to TikTok Shop Academy for information on product category restrictions. - For the US market, if you are creating products in `INVITE_ONLY` categories, you must submit a separate application through the Qualification Center on TikTok Shop Seller Center to gain access. Otherwise, even if the product audit is passed, the product will not be listed and made available to buyers. (The product status will be `PENDING` and the audit status will be `PRE_APPROVED`) - For the Indonesia market, to list a product on both TikTok Shop and Tokopedia, you must use only categories that are available on both platforms.',
              },
              certifications: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    expiration_date: {
                      type: 'number',
                      description:
                        'The expiration date of this certification expressed in unix timestamp (seconds) UTC+0.  This field may be required for certain certifications. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to find out the requirements.',
                    },
                    files: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          format: {
                            type: 'string',
                            description:
                              'The format of the certification file. Only PDF is supported.',
                          },
                          id: {
                            type: 'string',
                            description:
                              'The ID of the certification file. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the files first and obtain the corresponding file ID.',
                          },
                          name: {
                            type: 'string',
                            description:
                              'The name of the certification file, including the file extension.',
                          },
                        },
                        required: ['format', 'id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related files.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The ID to identify the type of certification required for the product category. Retrieve this value from the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9).',
                    },
                    images: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          uri: {
                            type: 'string',
                            description:
                              'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=CERTIFICATION_IMAGE`.',
                          },
                        },
                        required: ['uri'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related images.',
                    },
                  },
                  required: ['expiration_date', 'files', 'id', 'images'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of certifications for your product. Max count: 10  As per TikTok Shop guidelines, certifications are required for certain restricted product categories. Retrieve the certification requirements for your product from the  [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9). Refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions.',
              },
              delivery_option_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'This field is returned for seller accounts in the following regions only: - ID - MX - MY - PH - SG - TH - VN  For all other regions, this field is NOT used and will NOT be processed if passed for create, edit, or partial edit operations.   The custom delivery option IDs to apply to this product if you want to override the default warehouse delivery options. To retrieve the available option IDs, call [Get Warehouse Delivery Options](650aa46ebace3e02b75d9afa) with `scope=PRODUCT`.  **Note**: Leave this field blank to inherit the default delivery options configured for the warehouse.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              external_product_id: {
                type: 'string',
                description:
                  'An external identifier used in an external ecommerce platform. This is used to associate the product between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
              },
              is_cod_allowed: {
                type: 'boolean',
                description:
                  'A flag indicating whether to show the Cash On Delivery (COD) payment option during checkout. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to check if COD is supported for your product category.  Applicable only for the following markets: - Global sellers: MY, PH, SA, TH, VN - Local sellers: ID, MY, PH, SA, TH, VN  **Note**: If COD is not supported, the listing will fail if you set this to `true`.',
              },
              is_pre_owned: {
                type: 'boolean',
                description:
                  'A flag to indicate if the product is pre-owned.  Applicable only if TOKOPEDIA is the sole listing platform. **Note**: To list pre-owned products on the TikTok Shop platform, please specify the ID of one of the designated pre-owned product categories (e.g. pre-owned luxury bags, luggage, and accessories) in `category_id`.',
              },
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The platforms for listing the product. Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: TIKTOK_SHOP  Applicable only for sellers that migrated from Tokopedia.',
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=MAIN_IMAGE`. You can use the returned URI directly, or process it through the [Optimize Images API](665692b35d39dc02deb49a97) first and use the resulting URI.',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. - Max count: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px]  **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white.',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              minimum_order_quantity: {
                type: 'number',
                description:
                  'The minimum order quantity for the product. Valid range: [1, 20]  Applicable only for the Indonesia market and selected sellers in other SEA markets. Contact your account manager for more information about gaining access to this field.',
              },
              package_dimensions: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description:
                      'The package height. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  length: {
                    type: 'string',
                    description:
                      'The package length. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package dimensions. Possible values based on region: - US: CENTIMETER, INCH - Other  regions: CENTIMETER    **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using KILOGRAM for the weight, you must use CENTIMETER for the dimensions.',
                  },
                  width: {
                    type: 'string',
                    description:
                      'The package width. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              package_weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package weight. Possible values based on region: - US: `KILOGRAM`, `POUND` - BR, JP, MX: `KILOGRAM`, `GRAM` - Other countries: `KILOGRAM`  **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using `KILOGRAM` for the weight, you must use `CENTIMETER` for the dimensions.',
                  },
                  value: {
                    type: 'string',
                    description:
                      'The package weight, which must be a positive number. The number format varies based on the `unit`:  - `GRAM`: integer - `KILOGRAM`: up to 3 decimal places - `POUND`: up to 2 decimal places',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              primary_combined_product_id: {
                type: 'string',
                description:
                  'If this product is associated with a virtual bundle, this value is the ID of the primary product in the bundle.  **Note**: Required only for virtual bundle products.',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in product attribute value, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - No duplicates allowed under the same attribute. - Max length: 2000 characters',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute.  **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant.   **Important**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. You must provide the product attributes marked as `is_required` in the response of the [Get Attributes API](6509c5784a0bb702c0561cc8) to avoid listing failure.",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              shipping_insurance_requirement: {
                type: 'string',
                description:
                  "The shipping insurance purchase requirement imposed on buyers for the product.  Possible values: - REQUIRED: Shipping insurance is mandatory and buyers can\\'t opt out. - OPTIONAL: Buyers can choose to purchase shipping insurance through the platform. - NOT_SUPPORTED: Shipping insurance is not supported for the product. Default: OPTIONAL  Applicable only if the listing platforms include TOKOPEDIA.",
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=SIZE_CHART_IMAGE`.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    combined_skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          product_id: {
                            type: 'string',
                            description:
                              'The ID of the source product included in the virtual bundle.',
                          },
                          sku_count: {
                            type: 'number',
                            description:
                              'The quantity of the source SKU included in the virtual bundle.',
                          },
                          sku_id: {
                            type: 'string',
                            description: 'The ID of the source SKU included in the virtual bundle.',
                          },
                        },
                        required: ['product_id', 'sku_count', 'sku_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'If this SKU belongs to a virtual bundle, this object contains the list of individual SKUs that form the bundle (e.g. gift basket, starter pack).',
                    },
                    external_list_prices: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          amount: {
                            type: 'string',
                            description: 'The price amount. Valid range: [0.01, 7600]',
                          },
                          currency: {
                            type: 'string',
                            description: 'The currency. Possible values: USD',
                          },
                          source: {
                            type: 'string',
                            description:
                              'The external ecommerce platform from which the price is sourced. Possible values: - SHOPIFY_COMPARE_AT_PRICE: The compare_at_price in Shopify.',
                          },
                        },
                        required: ['amount', 'currency', 'source'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        "The SKU list price (e.g. MSRP, RRP) or original price information on external ecommerce platforms. Applicable only for selected local sellers in the US market.  **Note**: This value may appear as the strikethrough price on the product page. However, whether the strikethrough price is shown and the amount shown are subject to the audit team\\'s review and decision based on various pricing information.",
                    },
                    external_sku_id: {
                      type: 'string',
                      description:
                        'An external identifier used in an external ecommerce platform. This is used to associate the SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
                    },
                    external_urls: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'A comma-delimited list of URLs for third-party product listing pages where consumers can place orders. Add this property if you have products listed on third-party sites other than TikTok Shop and would like to map them. Max string length: 500',
                    },
                    extra_identifier_codes: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'If the SKU belongs to a virtual bundle (containing multiple individual SKUs), you can add up to 10 additional identifier codes here for the SKUs included in the bundle.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits, or 9 digits ending in capital `X`  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.',
                    },
                    identifier_code: {
                      type: 'object',
                      properties: {
                        code: {
                          type: 'string',
                          description:
                            'The identifier code.  **Format**: - GTIN: 14 digits  - EAN: 8, 13, or 14 digits  - UPC: 12 digits  - ISBN: 13 digits, or 9 digits ending in capital `X` - JAN: 8 or 13 digits **Note**: The identifier code must be unique for each SKU, with no repetition allowed.',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of identifier code. Possible values: - GTIN - EAN - UPC - ISBN - JAN',
                        },
                      },
                      required: ['code', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          quantity: {
                            type: 'number',
                            description:
                              'The total SKU quantity available in the warehouse. Valid range: [1, 99,999]',
                          },
                          warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the warehouse where the SKU is stored.  Retrieve the list of warehouses available for your shop from the [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).',
                          },
                        },
                        required: ['quantity', 'warehouse_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'SKU inventory information.',
                    },
                    list_price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            'The price amount. Valid range: [0.01, 7600]   **Note**:  - The value must be equal to or greater than `skus.price.amount`. Otherwise, it will be discarded. - If the value is verified to be legitimate by the audit team, it will be stored and returned in the [Get Product API](6509d85b4a0bb702c057fdda).',
                        },
                        currency: {
                          type: 'string',
                          description: 'The currency. Possible values: USD',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    pre_sale: {
                      type: 'object',
                      properties: {
                        fulfillment_type: {
                          type: 'object',
                          properties: {
                            handling_duration_days: {
                              type: 'number',
                              description:
                                'The desired duration for handling a pre-sale order and handing it over to a shipping carrier.   Applicable only for the following regions and pre-sale type: **US** - `MADE_TO_ORDER`: Business days, from 3 to 14 days. - `CUSTOM`: Business days, from 3 to 30 days.  **UK and SEA** - `PRE_ORDER`: Calendar days, from 3 to 30 days.',
                            },
                            release_date: {
                              type: 'number',
                              description:
                                'The date on which the product gets converted into a regular product and becomes available for general purchase. On this date, order handling will also start, changing the status of the order to [`AWAITING_SHIPMENT`](https://partner.tiktokshop.com/docv2/page/650b1b4bbace3e02b76d1011).   Applicable only for `PRE_ORDER` in the US. **Note**: - Valid range: The date must fall within 3 - 60 days from the current date. - This date is a unix timestamp (seconds) based on the seller-selected timezone in Seller Center. - This date cannot be modified once the product goes live.',
                            },
                          },
                          required: ['handling_duration_days', 'release_date'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of pre-sale. Possible values based on the region: **US** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a release date. - `MADE_TO_ORDER`: The product is produced only after the order is received. Fulfillment can be extended by specifying a duration. - `CUSTOM`: The product requires a fulfillment timeline that exceeds the standard due to other factors. Fulfillment can be extended by specifying a duration.  **UK and SEA** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a duration.',
                        },
                      },
                      required: ['fulfillment_type', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            "**Local sellers/Intra-EU sellers** The SKU\\'s **local display price** shown on the product page before any discounts. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.",
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values based on the region: - BRL: Brazil - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japan - MXN: Mexico - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                        },
                        sale_price: {
                          type: 'string',
                          description:
                            "**Global sellers** The SKU\\'s **local display price** shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  - Applicable only for global sellers. -  Required for JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                        },
                      },
                      required: ['amount', 'currency', 'sale_price'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    sales_attributes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in sales attribute, retrieved from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute name if the built-in attributes do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**:  - Do not include sensitive characters. - Max length: 20 characters',
                          },
                          sku_img: {
                            type: 'object',
                            properties: {
                              uri: {
                                type: 'string',
                                description:
                                  'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                              },
                            },
                            required: ['uri'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          supplementary_sku_images: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                uri: {
                                  type: 'string',
                                  description:
                                    'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                                },
                              },
                              required: ['uri'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description:
                              'A list of supplementary images for each value (e.g. red) of the primary sales attribute (e.g. color) to provide multiple views or details of the product for that attribute value. These appear in the product options gallery on TikTok Shop.  **Note**: - Max number of image URIs: 8. - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Applicable only for the US market.',
                          },
                          value_id: {
                            type: 'string',
                            description:
                              'The ID of a built-in sales attribute value, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          value_name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 50 characters.',
                          },
                        },
                        required: [
                          'id',
                          'name',
                          'sku_img',
                          'supplementary_sku_images',
                          'value_id',
                          'value_name',
                        ],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - You can omit this object if there is only 1 SKU. Otherwise, this is **required**. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\\"name\\": \\"Color\\"`, `\\"value_name\\": \\"Red\\"` in different SKUs.',
                    },
                    seller_sku: {
                      type: 'string',
                      description:
                        'An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces',
                    },
                    sku_unit_count: {
                      type: 'string',
                      description:
                        'The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \\"base unit count\\" and the \\"unit type\\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8). The unit price would then be returned in the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda).',
                    },
                  },
                  required: [
                    'combined_skus',
                    'external_list_prices',
                    'external_sku_id',
                    'external_urls',
                    'extra_identifier_codes',
                    'identifier_code',
                    'inventory',
                    'list_price',
                    'pre_sale',
                    'price',
                    'sales_attributes',
                    'seller_sku',
                    'sku_unit_count',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.  **Note**: - Max SKUs for BR, EU, JP, MX, UK, US: 300 - Max SKUs for other regions: 100  **Recommendations**: Place the most important variant at the beginning of the array.',
              },
              title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - BR, MX: [1, 300]  - Other regions: [25, 255]',
              },
              video: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of the product video. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the video first and obtain the corresponding file ID.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'brand_id',
              'category_id',
              'certifications',
              'delivery_option_ids',
              'description',
              'external_product_id',
              'is_cod_allowed',
              'is_pre_owned',
              'listing_platforms',
              'main_images',
              'manufacturer_ids',
              'minimum_order_quantity',
              'package_dimensions',
              'package_weight',
              'primary_combined_product_id',
              'product_attributes',
              'responsible_person_ids',
              'shipping_insurance_requirement',
              'size_chart',
              'skus',
              'title',
              'video',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/listing_check',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'is_diagnosis_required', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsProductIdGet',
    {
      name: 'ProductV202309Api_ProductsProductIdGet',
      description: `Retrieve all properties of a product, except those in the \`FREEZE\` or \`DELETED\` status.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          return_under_review_version: { type: 'boolean' },
          return_draft_version: { type: 'boolean' },
          locale: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202309/products/{product_id}',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'return_under_review_version', in: 'query' },
        { name: 'return_draft_version', in: 'query' },
        { name: 'locale', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsProductIdPut',
    {
      name: 'ProductV202309Api_ProductsProductIdPut',
      description: `Edit all properties (e.g. description, brand, images) of an existing product that is not in the \`FREEZE\` or \`DELETED\` state. After editing the product, the latest product content (referred to as v2) will be resent for audit review. If the audit passes, v2 is published to the shop, otherwise, the existing product stays live and remains unchanged (keeping v1). However, edits to the \`price\` or \`inventory\` fields do not require a reaudit and will be immediately published on the platform. Use the [Product status change](https://partner.tiktokshop.com/docv2/page/650956aff1fd3102b90b6261) webhook to keep track of the review status. **Note**:  - This API is applicable only for **active sellers/shops** that have completed the KYC onboarding process. - There may be a limit to the number of products you can relist per day. We recommend prioritizing key products first to ensure they get published. You can find your listing limit on the Seller Center homepage. - All inputs, including blanks, in the request payload will overwrite existing values. To retain an existing value, make sure to include it in your request. Exceptions to this rule are the \`price\` and \`inventory\` fields, which will remain unchanged if they are omitted from the request. Therefore, **it is strongly recommended to retrieve the latest product data using [Get Product](6509d85b4a0bb702c057fdda) and submit the complete data when editing**. This ensures accuracy and helps avoid errors or unintentional data loss due to missing fields. - If you wish to edit only certain properties, you can use the [Partial Edit Product API](650a98d74a0bb702c06c3289), [Update Inventory API](6503068fc20ad60284b38858), or the [Update Price API](650307de5a12ff0294eac8b0). - The language used in the product content must align with the target market\\'s language (e.g. don\\'t use Chinese), otherwise the listing will fail or be rejected. **For global sellers**: If you\\'re using the local replication listing method, note the following sync rules: - To sync any changes to other markets, please provide the \`seller_sku\` and complete \`replicated_products\` data.  - Note that **category changes** and **sales attribute changes** (in sales attribute id/name) must be synced to other markets. The API call will fail if you don\\'t provide these details. **For Tokopedia sellers**: Note that a product can have **only one active version** across all platforms at any time. If a product is live on both platforms, audit results for the latest version are handled as follows: - **Mixed audit results**: If the product passes audit on one platform but fails on another, on the successful platform, the product will stay live and be updated with content from the latest version (v2), while on the failed platform, the product will be deactivated and hidden entirely. - **Audit failure on all platforms**: If the product fails audit on all platforms, the existing product stays live and remains unchanged (keeping v1).`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product.  Use the [Get Brands API](https://partner.tiktokshop.com/docv2/page/6503075656e2bb0289dd5d01) to get the list of available brands for a shop.  **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              category_id: {
                type: 'string',
                description:
                  "The ID of the category of this product. It must be a leaf category that corresponds to the category tree type specified in the `category_version` property. Use the [Get Categories API](https://partner.tiktokshop.com/docv2/page/6509c89d0fcef602bf1acd9b) to obtain the available categories.    **Note**: - Refer to TikTok Shop Academy for information on product category restrictions. - For the US market, if you change a product\\'s category to an `INVITE_ONLY` category, you must submit a separate application through the Qualification Center on TikTok Shop Seller Center to gain access. Otherwise, even if the product audit is passed, the product will not be listed and made available to buyers. (The product status will be `PENDING` and the audit status will be `PRE_APPROVED`) - For the Indonesia market, to list a product on both TikTok Shop and Tokopedia, you must use only categories that are available on both platforms.",
              },
              category_version: {
                type: 'string',
                description:
                  'The category tree version to assign this product to. Possible values based on region: - US: `v2`, represents the 7-level category tree.   **Important**: For US shops, you must pass `v2` when using this API. - Other regions: `v1`, represents the 3-level category tree. Default: `v1`',
              },
              certifications: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    expiration_date: {
                      type: 'number',
                      description:
                        'The expiration date of this certification expressed in unix timestamp (seconds) UTC+0. This field may be required for certain certifications. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to find out the requirements.',
                    },
                    files: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          format: {
                            type: 'string',
                            description:
                              'The format of the certification file. Only PDF is supported.',
                          },
                          id: {
                            type: 'string',
                            description:
                              'The ID of the certification file. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the files first and obtain the corresponding file ID.',
                          },
                          name: {
                            type: 'string',
                            description:
                              'The name of the certification file, including the file extension.',
                          },
                        },
                        required: ['format', 'id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related files.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The ID to identify the type of certification required for the product category. Retrieve this value from the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9).',
                    },
                    images: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          uri: {
                            type: 'string',
                            description:
                              'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=CERTIFICATION_IMAGE`.',
                          },
                        },
                        required: ['uri'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related images.',
                    },
                  },
                  required: ['expiration_date', 'files', 'id', 'images'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of certifications for your product. Max count: 10  As per TikTok Shop guidelines, certifications are required for certain restricted product categories. Retrieve the certification requirements for your product from the  [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9). Refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions.',
              },
              delivery_option_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'This field is returned for seller accounts in the following regions only: - ID - MX - MY - PH - SG - TH - VN  For all other regions, this field is NOT used and will NOT be processed if passed for create, edit, or partial edit operations.   The custom delivery option IDs to apply to this product if you want to override the default warehouse delivery options. To retrieve the available option IDs, call [Get Warehouse Delivery Options](https://partner.tiktokshop.com/docv2/page/650aa46ebace3e02b75d9afa) with `scope=PRODUCT`.  **Note**:  - Leave this field blank to inherit the default delivery options configured for the warehouse. - If you are saving a post-live draft with `save_mode=AS_DRAFT`, this field is not supported and will not be saved. When using Get Product to retrieve the draft, the values will reflect those in the base version.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              external_product_id: {
                type: 'string',
                description:
                  'An external identifier used in an external ecommerce platform. This is used to associate the product between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
              },
              is_cod_allowed: {
                type: 'boolean',
                description:
                  'A flag indicating whether to show the Cash On Delivery (COD) payment option during checkout.  Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to check if COD is supported for your product category.  Applicable only for the following markets: - Global sellers: MY, PH, SA, TH, VN - Local sellers: ID, MY, PH, SA, TH, VN  **Note**: If COD is not supported, the listing will fail if you set this to `true`.',
              },
              is_pre_owned: {
                type: 'boolean',
                description:
                  'A flag to indicate if the product is pre-owned.  Applicable only if TOKOPEDIA is the sole listing platform. **Note**: To list pre-owned products on the TikTok Shop platform, please specify the ID of one of the designated pre-owned product categories (e.g. pre-owned luxury bags, luggage, and accessories) in `category_id`.',
              },
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The platforms for listing the product. Possible values: - TOKOPEDIA - TIKTOK_SHOP Applicable only for sellers that migrated from Tokopedia.  **IMPORTANT**: This field controls the product\\'s visibility on the listing platforms. - If the product is live on both platforms but the request contains only 1 platform, the product will be deactivated and hidden from the omitted platform. - If the product is live on 1 platform but the request contains a different platform, the product will be deactivated and hidden from the omitted platform. - If you omit this array, the product will be sent for audit on the currently active platforms or on the platforms specified in the previous request. - If you want to deactivate the product on both platforms, use the Deactivate Product API.",
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=MAIN_IMAGE`. You can use the returned URI directly, or process it through the [Optimize Images API](665692b35d39dc02deb49a97) first and use the resulting URI.',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. - Max count: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px]    **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              minimum_order_quantity: {
                type: 'number',
                description:
                  'The minimum order quantity for the product. Valid range: [1, 20]  Applicable only for the Indonesia market and selected sellers in other SEA markets. Contact your account manager for more information about gaining access to this field.',
              },
              package_dimensions: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description:
                      'The package height. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  length: {
                    type: 'string',
                    description:
                      'The package length. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package dimensions. Possible values based on region: - US: CENTIMETER, INCH - Other regions: CENTIMETER    **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using KILOGRAM for the weight, you must use CENTIMETER for the dimensions.',
                  },
                  width: {
                    type: 'string',
                    description:
                      'The package width. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              package_weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package weight. Possible values based on region: - US: `KILOGRAM`, `POUND` - BR, JP, MX: `KILOGRAM`, `GRAM` - Other countries: `KILOGRAM`  **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using `KILOGRAM` for the weight, you must use `CENTIMETER` for the dimensions.',
                  },
                  value: {
                    type: 'string',
                    description:
                      'The package weight, which must be a positive number. The number format varies based on the `unit`:  - `GRAM`: integer - `KILOGRAM`: up to 3 decimal places - `POUND`: up to 2 decimal places',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of the product attribute value. This is either a built-in product attribute value ID from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8) or a custom product attribute value ID returned after calling [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after editing.  **Note**:  - No duplicates allowed under the same attribute. - Max length: 2000 characters',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute.  **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant.   **Important**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. You must provide the product attributes marked as `is_required` in the response of the [Get Attributes API](6509c5784a0bb702c0561cc8) to avoid listing failure.",
              },
              replicated_products: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    region: {
                      type: 'string',
                      description:
                        'The market where you want to sync the changes to. The market must already contain a replica. Use the Get Global Replicated Products to check the markets that contain a replica. Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IE: Ireland - IT: Italy - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam',
                    },
                    skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The SKU ID generated by TikTok Shop. Provide this for existing SKUs.',
                          },
                          inventory: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                quantity: {
                                  type: 'number',
                                  description:
                                    'The SKU quantity available in the warehouse. Valid range: [1, 999,999]',
                                },
                                warehouse_id: {
                                  type: 'string',
                                  description:
                                    'The warehouse ID. Retrieve this value from the [Get Warehouse List API](650aa418defece02be6e66b6) or Get Inventory Rules API.',
                                },
                              },
                              required: ['quantity', 'warehouse_id'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description: 'SKU inventory information per warehouse.',
                          },
                          price: {
                            type: 'object',
                            properties: {
                              currency: {
                                type: 'string',
                                description:
                                  'The currency. You must specify the local currency in the target market. Possible values: - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japanese - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                              },
                              sale_price: {
                                type: 'string',
                                description:
                                  "The SKU\\'s local display price shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.",
                              },
                            },
                            required: ['currency', 'sale_price'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          seller_sku: {
                            type: 'string',
                            description:
                              'The seller_sku value of the source product above. Provide this for new SKUs. - Valid length: 1-50 characters - Format: Text without spaces',
                          },
                        },
                        required: ['id', 'inventory', 'price', 'seller_sku'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'The SKUs to be synced to the specified market.  **Note**: - You must pass in all existing SKUs. Any existing SKU IDs not listed here will result in the deletion of those SKUs. For example, if this product contains 5 SKUs and you only provide 2 SKU IDs, the remaining 3 will be deleted. - To create new SKUs, leave the SKU ID blank and provide the seller_sku.',
                    },
                  },
                  required: ['region', 'skus'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "The list of local market replicas to which updates should be synced. As this is a full edit endpoint, all fields will be synced. Note that **category changes** and **sales attribute changes** (in sales attribute id/name) must be synced to other markets. Therefore, you must provide the `seller_sku` above and complete the details in this object. The API call will fail if you don\\'t provide these details.",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              save_mode: {
                type: 'string',
                description:
                  'Indicates how the product should be saved. Possible values: - AS_DRAFT: Save the product as a draft for future editing. - LISTING: Immediately list the product in the shop. Default: LISTING  **Note**:  - Saving as draft is not supported in the following cases:   - The product status is `DELETED`.   - The product status is `PENDING` or `FREEZE` on any listing platform. - If you are saving a post-live draft with `save_mode=AS_DRAFT`, `inventory` and `delivery_option_ids` fields are not supported and will not be saved.',
              },
              shipping_insurance_requirement: {
                type: 'string',
                description:
                  "The shipping insurance purchase requirement imposed on buyers for the product.  Possible values: - REQUIRED: Shipping insurance is mandatory and buyers can\\'t opt out. - OPTIONAL: Buyers can choose to purchase shipping insurance through the platform. - NOT_SUPPORTED: Shipping insurance is not supported for the product. Default: OPTIONAL  Applicable only if the listing platforms include TOKOPEDIA.",
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=SIZE_CHART_IMAGE`.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    combined_skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          product_id: {
                            type: 'string',
                            description:
                              'The ID of the source product included in the virtual bundle.',
                          },
                          sku_count: {
                            type: 'number',
                            description:
                              'The quantity of the source SKU included in the virtual bundle.',
                          },
                          sku_id: {
                            type: 'string',
                            description: 'The ID of the source SKU included in the virtual bundle.',
                          },
                        },
                        required: ['product_id', 'sku_count', 'sku_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'If this SKU belongs to a virtual bundle, this object contains the list of individual SKUs that form the bundle (e.g. gift basket, starter pack).',
                    },
                    external_list_prices: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          amount: {
                            type: 'string',
                            description: 'The price amount. Valid range: [0.01, 7600]',
                          },
                          currency: {
                            type: 'string',
                            description: 'The currency. Possible values: USD',
                          },
                          source: {
                            type: 'string',
                            description:
                              'The external ecommerce platform from which the price is sourced. Possible values: - SHOPIFY_COMPARE_AT_PRICE: The compare_at_price in Shopify.',
                          },
                        },
                        required: ['amount', 'currency', 'source'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        "The SKU list price (e.g. MSRP, RRP) or original price information on external ecommerce platforms. Applicable only for selected local sellers in the US market.  **Note**: This value may appear as the strikethrough price on the product page. However, whether the strikethrough price is shown and the amount shown are subject to the audit team\\'s review and decision based on various pricing information.",
                    },
                    external_sku_id: {
                      type: 'string',
                      description:
                        'An external identifier used in an external ecommerce platform. This is used to associate the SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
                    },
                    external_urls: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'A comma-delimited list of URLs for third-party product listing pages where consumers can place orders. Add this property if you have products listed on third-party sites other than TikTok Shop and would like to map them. Max string length: 500',
                    },
                    extra_identifier_codes: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'If the SKU belongs to a virtual bundle (containing multiple individual SKUs), you can add up to 10 additional identifier codes here for the SKUs included in the bundle.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits, or 9 digits ending in capital `X`  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The SKU ID generated by TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - To edit an existing SKU, include its SKU ID. - Any existing SKU IDs not listed here will result in the deletion of those SKUs. For example, if this product contains 5 SKUs and you only provide 2 SKU IDs, the remaining 3 will be deleted. - To create new SKUs, leave the SKU ID blank and complete the other fields.',
                    },
                    identifier_code: {
                      type: 'object',
                      properties: {
                        code: {
                          type: 'string',
                          description:
                            'The identifier code.  **Format**: - GTIN: 14 digits  - EAN: 8, 13, or 14 digits  - UPC: 12 digits  - ISBN: 13 digits, or 9 digits ending in capital `X` - JAN: 8 or 13 digits  **Note**: The identifier code must be unique for each SKU, with no repetition allowed.',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of identifier code. Possible values: - GTIN - EAN - UPC - ISBN - JAN',
                        },
                      },
                      required: ['code', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          quantity: {
                            type: 'number',
                            description:
                              'The total SKU quantity available in the warehouse. Valid range: [1, 99,999]',
                          },
                          warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the warehouse where the SKU is stored.  Retrieve the list of warehouses available for your shop from the [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).',
                          },
                        },
                        required: ['quantity', 'warehouse_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'SKU inventory information.  **Note**:  - If you omit this object array in the API request, the existing information will remain unchanged. - If you are saving a post-live draft with `save_mode=AS_DRAFT`, this field is not supported and will not be saved. When using Get Product to retrieve the draft, the values will reflect those in the base version.',
                    },
                    list_price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            'The price amount. Valid range: [0.01, 7600]   **Note**:  - The value must be equal to or greater than `skus.price.amount`. Otherwise, it will be discarded. - If the value is verified to be legitimate by the audit team, it will be stored and returned in the [Get Product API](6509d85b4a0bb702c057fdda).',
                        },
                        currency: {
                          type: 'string',
                          description: 'The currency. Possible values: USD',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    pre_sale: {
                      type: 'object',
                      properties: {
                        fulfillment_type: {
                          type: 'object',
                          properties: {
                            handling_duration_days: {
                              type: 'number',
                              description:
                                'The desired duration for handling a pre-sale order and handing it over to a shipping carrier.   Applicable only for the following regions and pre-sale type: **US** - `MADE_TO_ORDER`: Business days, from 3 to 14 days. - `CUSTOM`: Business days, from 3 to 30 days.  **UK, EU, SEA, and JP** - `PRE_ORDER`: Calendar days, from 3 to 30 days.',
                            },
                            release_date: {
                              type: 'number',
                              description:
                                'The date on which the product gets converted into a regular product and becomes available for general purchase. On this date, order handling will also start, changing the status of the order to [`AWAITING_SHIPMENT`](https://partner.tiktokshop.com/docv2/page/650b1b4bbace3e02b76d1011).   Applicable only for `PRE_ORDER` in the US. **Note**: - Valid range: The date must fall within 3 - 60 days from the current date. - This date is a unix timestamp (seconds) based on the seller-selected timezone in Seller Center. - This date cannot be modified once the product goes live.',
                            },
                          },
                          required: ['handling_duration_days', 'release_date'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of pre-sale. Possible values based on the region: **US** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a **release date**. - `MADE_TO_ORDER`: The product is produced only after the order is received. Fulfillment can be extended by specifying a **duration**. - `CUSTOM`: The product requires a fulfillment timeline that exceeds the standard due to other factors. Fulfillment can be extended by specifying a **duration**.  **UK, EU, SEA, and JP** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a **duration**.   **ALL** - `NONE`: To convert the product to a regular (non-presale) product.',
                        },
                      },
                      required: ['fulfillment_type', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            "**Local sellers/Intra-EU sellers** The SKU\\'s **local display price** shown on the product page before any discounts. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Global sellers** The SKU\\'s **local pre-tax price**. This excludes any applicable charges such as cross-border shipping costs, taxes, and other fees, and therefore does not appear on the product page. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market. - **Note**: Not applicable for JP and US shops using China warehouses, please use `price.sale_price` instead.",
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values based on the region: - BRL: Brazil - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japan - MXN: Mexico - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                        },
                        sale_price: {
                          type: 'string',
                          description:
                            "**Global sellers** The SKU\\'s **local display price** shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  - Applicable only for global sellers. -  Required for JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                        },
                      },
                      required: ['amount', 'currency', 'sale_price'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    sales_attributes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of the sales attribute. This is either a built-in sales attribute ID from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8) or a custom attribute ID returned after calling [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute name if the existing attributes do not satisfy your needs. The system will auto-generate an ID after editing.  **Note**:  - Do not include sensitive characters. - Max length: 20 characters',
                          },
                          sku_img: {
                            type: 'object',
                            properties: {
                              uri: {
                                type: 'string',
                                description:
                                  'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                              },
                            },
                            required: ['uri'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          supplementary_sku_images: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                uri: {
                                  type: 'string',
                                  description:
                                    'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                                },
                              },
                              required: ['uri'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description:
                              'A list of supplementary images for each value (e.g. red) of the primary sales attribute (e.g. color) to provide multiple views or details of the product for that attribute value. These appear in the product options gallery on TikTok Shop.  **Note**: - Max number of image URIs: 8. - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Applicable only for the US market.',
                          },
                          value_id: {
                            type: 'string',
                            description:
                              'The ID of the sales attribute value. This is either a built-in sales attribute value ID from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8) or a custom sales attribute value ID returned after calling [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a).',
                          },
                          value_name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute value if the existing values do not satisfy your needs. The system will auto-generate an ID after editing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 50 characters.',
                          },
                        },
                        required: [
                          'id',
                          'name',
                          'sku_img',
                          'supplementary_sku_images',
                          'value_id',
                          'value_name',
                        ],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - You must retain at least 1 sales attribute, deleting all existing sales attributes is not allowed. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\\"name\\": \\"Color\\"`, `\\"value_name\\": \\"Red\\"` in different SKUs.',
                    },
                    seller_sku: {
                      type: 'string',
                      description:
                        'An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces',
                    },
                    sku_unit_count: {
                      type: 'string',
                      description:
                        'The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \\"base unit count\\" and the \\"unit type\\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8). The unit price would then be returned in the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda).',
                    },
                  },
                  required: [
                    'combined_skus',
                    'external_list_prices',
                    'external_sku_id',
                    'external_urls',
                    'extra_identifier_codes',
                    'id',
                    'identifier_code',
                    'inventory',
                    'list_price',
                    'pre_sale',
                    'price',
                    'sales_attributes',
                    'seller_sku',
                    'sku_unit_count',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.  **Note**: - Max SKUs for BR, EU, MX, JP, UK, US: 300 - Max SKUs for other regions: 100  **Recommendations**: Place the most important variant at the beginning of the array.',
              },
              title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - BR, MX: [1, 300]  - Other regions: [25, 255]',
              },
              video: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of the product video. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the video first and obtain the corresponding file ID.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'brand_id',
              'category_id',
              'category_version',
              'certifications',
              'delivery_option_ids',
              'description',
              'external_product_id',
              'is_cod_allowed',
              'is_pre_owned',
              'listing_platforms',
              'main_images',
              'manufacturer_ids',
              'minimum_order_quantity',
              'package_dimensions',
              'package_weight',
              'product_attributes',
              'replicated_products',
              'responsible_person_ids',
              'save_mode',
              'shipping_insurance_requirement',
              'size_chart',
              'skus',
              'title',
              'video',
            ],
            description: 'Request body',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'put',
      pathTemplate: '/product/202309/products/{product_id}',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsProductIdInventoryUpdatePost',
    {
      name: 'ProductV202309Api_ProductsProductIdInventoryUpdatePost',
      description: `Update the inventory quantity of SKUs belonging to a product in the \`ACTIVATE\` status.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The SKU ID generated by TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - The SKU ID must belong to a product with the `ACTIVATE` status. - If you are updating multiple SKUs, all the SKU IDs must belong to the same product.',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          quantity: {
                            type: 'number',
                            description: 'The updated SKU quantity. Valid range: [0, 99,999]',
                          },
                          warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the warehouse where the SKU is stored. Retrieve this value from the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda).  **Note**: Optional if there is only 1 warehouse. Otherwise, please provide this ID.',
                          },
                        },
                        required: ['quantity', 'warehouse_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'SKU inventory information. **Note**: You must include all warehouse IDs assigned to this SKU, along with the respective quantity. Do not omit any or add unrelated warehouses.',
                    },
                  },
                  required: ['id', 'inventory'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.',
              },
            },
            required: ['skus'],
            description: 'Request body',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/{product_id}/inventory/update',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsProductIdPartialEditPost',
    {
      name: 'ProductV202309Api_ProductsProductIdPartialEditPost',
      description: `Edit some properties (e.g. description, images, attributes) of a product that is not in the \`FREEZE\` or \`DELETED\` state. After editing the product, the latest product content (referred to as v2) will be resent for audit review. If the audit passes, v2 is published to the shop, otherwise, the existing product stays live and remains unchanged (keeping v1). However, edits to the \`price\` or \`inventory\` fields do not require a reaudit and will be immediately published on the platform. Use the [Product status change](650956aff1fd3102b90b6261) webhook to keep track of the review status. **Note**:  - This API is applicable for all sellers. - There may be a limit to the number of products you can relist per day. We recommend prioritizing key products first to ensure they get published. You can find your listing limit on the Seller Center homepage. - If a draft or audit-review version exists, unedited fields will retain their values over those of the base (live) version. - **Updates are handled per top-level property**, so all non-empty fields within an updated object must be supplied to prevent overwriting with blanks. For top-level properties (e.g. \`description\`, \`brand_id\`) that are not nested in an object, you can update them individually. Omitting these properties in the request will leave them unchanged. If you need to edit any nested property within an object, you must provide values for all nested properties of that object. Any omitted nested properties will be overwritten with blanks. - If new mandatory product attributes were added by TikTok Shop after the creation of your product, ensure that you provide these attributes too. **For global sellers**: If you\\'re using the local replication listing method, note the following sync rules: **Sales attribute changes** (in sales attribute id/name) must be synced to other markets. Therefore, you must provide the \`seller_sku\` and complete \`replicated_products\` data. The API call will fail if you don\\'t provide these details. **New SKUs* (new sales attribute value id/name) are optional to sync to other markets. To sync, please provide the \`seller_sku\` and complete \`replicated_products\` data. **General changes** are optional to sync to other markets. To sync, you only need to provide \`replicated_products.region\`. **For Tokopedia sellers**: Note that a product can have **only one active version** across all platforms at any time. If a product is live on both platforms, audit results for the latest version are handled as follows: - **Mixed audit results**: If the product passes audit on one platform but fails on another, on the successful platform, the product will stay live and be updated with content from the latest version (v2), while on the failed platform, the product will be deactivated and hidden entirely. - **Audit failure on all platforms**: If the product fails audit on all platforms, the existing product stays live and remains unchanged (keeping v1).`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product.  Use the [Get Brands API](https://partner.tiktokshop.com/docv2/page/6503075656e2bb0289dd5d01) to get the list of available brands for a shop.  **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              certifications: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    expiration_date: {
                      type: 'number',
                      description:
                        'The expiration date of this certification expressed in unix timestamp (seconds) UTC+0. This field may be required for certain certifications. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to find out the requirements.',
                    },
                    files: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          format: {
                            type: 'string',
                            description:
                              'The format of the certification file. Only PDF is supported.',
                          },
                          id: {
                            type: 'string',
                            description:
                              'The ID of the certification file. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the files first and obtain the corresponding file ID.',
                          },
                          name: {
                            type: 'string',
                            description:
                              'The name of the certification file, including the file extension.',
                          },
                        },
                        required: ['format', 'id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related files.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The ID to identify the type of certification required for the product category. Retrieve this value from the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9).',
                    },
                    images: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          uri: {
                            type: 'string',
                            description:
                              'The URI of the image.  Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=CERTIFICATION_IMAGE`.',
                          },
                        },
                        required: ['uri'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'A list of certification related images.',
                    },
                  },
                  required: ['expiration_date', 'files', 'id', 'images'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of certifications for your product. Max count: 10  As per TikTok Shop guidelines, certifications are required for certain restricted product categories. Retrieve the certification requirements for your product from the  [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9). Refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format.  **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Image guidelines: You must use [TikTok Shop image URLs](6509df95defece02be598a22). Max 30 `<img>` tags, each under 4000px with `src`, `width`, and `height` attributes.  **Recommendations**:  - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              external_product_id: {
                type: 'string',
                description:
                  'An external identifier used in an external ecommerce platform. This is used to associate the product between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
              },
              is_cod_allowed: {
                type: 'boolean',
                description:
                  'A flag indicating whether to show the Cash On Delivery (COD) payment option during checkout. Use the [Get Category Rules API](https://partner.tiktokshop.com/docv2/page/6509c0febace3e02b74594a9) to check if COD is supported for your product category.  Applicable only for the following markets: - Global sellers: MY, PH, SA, TH, VN - Local sellers: ID, MY, PH, SA, TH, VN  **Note**: If COD is not supported, the listing will fail if you set this to `true`.',
              },
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The platforms for listing the product. Possible values: - TOKOPEDIA - TIKTOK_SHOP Applicable only for sellers that migrated from Tokopedia.  **IMPORTANT**: This field controls the product\\'s visibility on the listing platforms. - If the product is live on both platforms but the request contains only 1 platform, the product will be deactivated and hidden from the omitted platform. - If the product is live on 1 platform but the request contains a different platform, the product will be deactivated and hidden from the omitted platform. - If you want to deactivate the product on both platforms, use the Deactivate Product API.",
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=MAIN_IMAGE`. You can use the returned URI directly, or process it through the [Optimize Images API](665692b35d39dc02deb49a97) first and use the resulting URI.',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. -  Max count: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px]    **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white.',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of manufacturer IDs. Retrieve the IDs from the [Search Manufacturers API](67066a580dcee902fa03ccf9).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              package_dimensions: {
                type: 'object',
                properties: {
                  height: {
                    type: 'string',
                    description:
                      'The package height. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  length: {
                    type: 'string',
                    description:
                      'The package length. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package dimensions. Possible values based on region: - US: CENTIMETER, INCH - Other regions: CENTIMETER    **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using KILOGRAM for the weight, you must use CENTIMETER for the dimensions.',
                  },
                  width: {
                    type: 'string',
                    description:
                      'The package width. A positive whole number. **Note**: For the BR market, decimal values using `.` or `,` as separators are also accepted but will be rounded to the nearest whole number.',
                  },
                },
                required: ['height', 'length', 'unit', 'width'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              package_weight: {
                type: 'object',
                properties: {
                  unit: {
                    type: 'string',
                    description:
                      'The unit for the package weight. Possible values based on region: - US: `KILOGRAM`, `POUND` - BR, JP, MX: `KILOGRAM`, `GRAM` - Other countries: `KILOGRAM`  **Note**: You must use the same system of measurement (metric system or imperial system) for `package_weight` and `package_dimensions`. In other words, if you are using `KILOGRAM` for the weight, you must use `CENTIMETER` for the dimensions.',
                  },
                  value: {
                    type: 'string',
                    description:
                      'The package weight, which must be a positive number. The number format varies based on the `unit`:  - `GRAM`: integer - `KILOGRAM`: up to 3 decimal places - `POUND`: up to 2 decimal places',
                  },
                },
                required: ['unit', 'value'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of the product attribute value. This is either a built-in product attribute value ID from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8) or a custom product attribute value ID returned after calling [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the existing values do not satisfy your needs. The system will auto-generate an ID after editing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 2000 characters.',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute.  **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant.   **Important**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. You must provide the product attributes marked as `is_required` in the response of the [Get Attributes API](6509c5784a0bb702c0561cc8) to avoid listing failure.",
              },
              replicated_products: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    region: {
                      type: 'string',
                      description:
                        'The market where you want to sync the changes to. The market must already contain a replica. Use the Get Global Replicated Products to check the markets that contain a replica. Possible values: - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IE: Ireland - IT: Italy - JP: Japan - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam',
                    },
                    skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The SKU ID generated by TikTok Shop. Provide this for existing SKUs',
                          },
                          inventory: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                quantity: {
                                  type: 'number',
                                  description:
                                    'The SKU quantity available in the warehouse. Valid range: [1, 999,999]',
                                },
                                warehouse_id: {
                                  type: 'string',
                                  description:
                                    'The warehouse ID. Retrieve this value from the [Get Warehouse List API](650aa418defece02be6e66b6) or Get Inventory Rules API.',
                                },
                              },
                              required: ['quantity', 'warehouse_id'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description: 'SKU inventory information per warehouse.',
                          },
                          price: {
                            type: 'object',
                            properties: {
                              currency: {
                                type: 'string',
                                description:
                                  'The currency. You must specify the local currency in the target market. Possible values: - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japanese - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                              },
                              sale_price: {
                                type: 'string',
                                description:
                                  "The SKU\\'s local display price shown on the product page before any discounts.  Refer to Product Pricing for the allowed price ranges in each market.",
                              },
                            },
                            required: ['currency', 'sale_price'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          seller_sku: {
                            type: 'string',
                            description:
                              'The seller_sku value of the source product above. - Valid length: 1-50 characters - Format: Text without spaces',
                          },
                        },
                        required: ['id', 'inventory', 'price', 'seller_sku'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'The SKUs to be synced to the specified market. Specify this **only if** you are adding SKUs or changing the sales attribute id/name. **Note**: - You must pass in all existing SKUs. Any existing SKU IDs not listed here will result in the deletion of those SKUs. For example, if this product contains 5 SKUs and you only provide 2 SKU IDs, the remaining 3 will be deleted. - To create new SKUs, leave the SKU ID blank and provide the seller_sku.',
                    },
                  },
                  required: ['region', 'skus'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "The list of local market replicas to which updates should be synced. As this is a partial edit endpoint, only updated fields will be synced. **Compulsory sync** - **Sales attribute changes** (in sales attribute id/name) must be synced to other markets. Therefore, you must provide the `seller_sku` above and complete the details in this object. The API call will fail if you don\\'t provide these details. **Optional sync** - **New SKUs* (new sales attribute value id/name) are optional to sync to other markets. To sync, please provide the `seller_sku` above and complete the details in this object. - **General changes** are optional to sync to other markets. To sync, you only need to provide `replicated_products.region`.",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'A comma-delimited list of responsible person IDs. Retrieve the IDs from the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1).  **Note**: Applicable only for the EU market in certain categories. Use the [Get Category Rules API](6509c0febace3e02b74594a9) to check the requirements.',
              },
              save_mode: {
                type: 'string',
                description:
                  'Indicates how the product should be saved. Possible values: - AS_DRAFT: Save the product as a draft for future editing. - LISTING: Immediately list the product in the shop. Default: LISTING  **Note**:  - Saving as draft is not supported in the following cases:   - The product status is `DELETED`.   - The product status is `PENDING` or `FREEZE` on any listing platform. - If you are saving a post-live draft with `save_mode=AS_DRAFT`, `inventory` and `delivery_option_ids` fields are **not supported** and will not be saved.',
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=SIZE_CHART_IMAGE`.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    external_list_prices: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          amount: {
                            type: 'string',
                            description: 'The price amount. Valid range: [0.01, 7600]',
                          },
                          currency: {
                            type: 'string',
                            description: 'The currency. Possible values: USD',
                          },
                          source: {
                            type: 'string',
                            description:
                              'The external ecommerce platform from which the price is sourced. Possible values: - SHOPIFY_COMPARE_AT_PRICE: The compare_at_price in Shopify.',
                          },
                        },
                        required: ['amount', 'currency', 'source'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        "The SKU list price (e.g. MSRP, RRP) or original price information on external ecommerce platforms. Applicable only for selected sellers in the US market.  **Note**: This value may appear as the strikethrough price on the product page. However, whether the strikethrough price is shown and the amount shown are subject to the audit team\\'s review and decision based on various pricing information.",
                    },
                    external_sku_id: {
                      type: 'string',
                      description:
                        'An external identifier used in an external ecommerce platform. This is used to associate the SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters',
                    },
                    external_urls: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'A comma-delimited list of URLs for third-party product listing pages where consumers can place orders. Add this property if you have products listed on third-party sites other than TikTok Shop and would like to map them. Max string length: 500',
                    },
                    extra_identifier_codes: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'If the SKU belongs to a virtual bundle (containing multiple individual SKUs), you can add up to 10 additional identifier codes here for the SKUs included in the bundle.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits, or 9 digits ending in capital `X`  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.',
                    },
                    id: {
                      type: 'string',
                      description:
                        'The SKU ID generated by TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - To edit an existing SKU, include its SKU ID. - Any existing SKU IDs not listed here will result in the deletion of those SKUs. For example, if this product contains 5 SKUs and you only provide 2 SKU IDs, the remaining 3 will be deleted. - To create new SKUs, leave the SKU ID blank and complete the other fields.',
                    },
                    identifier_code: {
                      type: 'object',
                      properties: {
                        code: {
                          type: 'string',
                          description:
                            'The identifier code.  **Format**: - GTIN: 14 digits  - EAN: 8, 13, or 14 digits  - UPC: 12 digits  - ISBN: 13 digits, or 9 digits ending in capital `X` - JAN: 8 or 13 digits **Note**: The identifier code must be unique for each SKU, with no repetition allowed.',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of identifier code. Possible values: - GTIN - EAN - UPC - ISBN - JAN',
                        },
                      },
                      required: ['code', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    inventory: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          quantity: {
                            type: 'number',
                            description:
                              'The total SKU quantity available in the warehouse. Valid range: [1, 99,999]',
                          },
                          warehouse_id: {
                            type: 'string',
                            description:
                              'The ID of the warehouse where the SKU is stored.  Retrieve the list of warehouses available for your shop from the [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).',
                          },
                        },
                        required: ['quantity', 'warehouse_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'SKU inventory information. **Note**: If you are saving a post-live draft with `save_mode=AS_DRAFT`, this field is not supported and will not be saved. When using Get Product to retrieve the draft, the values will reflect those in the base version.',
                    },
                    list_price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            'The price amount. Valid range: [0.01, 7600]   **Note**:  - The value must be equal to or greater than `skus.price.amount`. Otherwise, it will be discarded. - If the value is verified to be legitimate by the audit team, it will be stored and returned in the [Get Product API](6509d85b4a0bb702c057fdda).',
                        },
                        currency: {
                          type: 'string',
                          description: 'The currency. Possible values: USD',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    pre_sale: {
                      type: 'object',
                      properties: {
                        fulfillment_type: {
                          type: 'object',
                          properties: {
                            handling_duration_days: {
                              type: 'number',
                              description:
                                'The desired duration for handling a pre-sale order and handing it over to a shipping carrier.   Applicable only for the following regions and pre-sale type: **US** - `MADE_TO_ORDER`: Business days, from 3 to 14 days. - `CUSTOM`: Business days, from 3 to 30 days.  **UK, EU, SEA, and JP** - `PRE_ORDER`: Calendar days, from 3 to 30 days.',
                            },
                            release_date: {
                              type: 'number',
                              description:
                                'The date on which the product gets converted into a regular product and becomes available for general purchase. On this date, order handling will also start, changing the status of the order to [`AWAITING_SHIPMENT`](https://partner.tiktokshop.com/docv2/page/650b1b4bbace3e02b76d1011).   Applicable only for `PRE_ORDER` in the US. **Note**: - Valid range: The date must fall within 3 - 60 days from the current date. - This date is a unix timestamp (seconds) based on the seller-selected timezone in Seller Center. - This date cannot be modified once the product goes live.',
                            },
                          },
                          required: ['handling_duration_days', 'release_date'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of pre-sale. Possible values based on the region: **US** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a **release date**. - `MADE_TO_ORDER`: The product is produced only after the order is received. Fulfillment can be extended by specifying a **duration**. - `CUSTOM`: The product requires a fulfillment timeline that exceeds the standard due to other factors. Fulfillment can be extended by specifying a **duration**.  **UK, EU, SEA, and JP** - `PRE_ORDER`: The product is not yet available or released. Fulfillment can be extended by specifying a **duration**.',
                        },
                      },
                      required: ['fulfillment_type', 'type'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            "**Local sellers/Intra-EU sellers** The SKU\\'s **local display price** shown on the product page before any discounts. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.",
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values based on the region: - BRL: Brazil - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japan - MXN: Mexico - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                        },
                        sale_price: {
                          type: 'string',
                          description:
                            "**Global sellers** The SKU\\'s **local display price** shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  - Applicable for all global sellers. - Required for JP and US shops using China warehouses. Optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                        },
                      },
                      required: ['amount', 'currency', 'sale_price'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    sales_attributes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of the sales attribute. This is either a built-in sales attribute ID from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8) or a custom attribute ID returned after calling [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute name if the existing attributes do not satisfy your needs. The system will auto-generate an ID after editing.  **Note**:  - Do not include sensitive characters. - Max length: 20 characters',
                          },
                          sku_img: {
                            type: 'object',
                            properties: {
                              uri: {
                                type: 'string',
                                description:
                                  'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                              },
                            },
                            required: ['uri'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          supplementary_sku_images: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                uri: {
                                  type: 'string',
                                  description:
                                    'The URI of the image. Obtain this URI by uploading the images through the [Upload Product Image API](6509df95defece02be598a22)  with `use_case=ATTRIBUTE_IMAGE`.',
                                },
                              },
                              required: ['uri'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description:
                              'A list of supplementary images for each value (e.g. red) of the primary sales attribute (e.g. color) to provide multiple views or details of the product for that attribute value. These appear in the product options gallery on TikTok Shop.  **Note**: - Max number of image URIs: 8. - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Applicable only for the US market.',
                          },
                          value_id: {
                            type: 'string',
                            description:
                              'The ID of the sales attribute value. This is either a built-in sales attribute value ID from [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8) or a custom sales attribute value ID returned after calling [Create Product API](https://partner.tiktokshop.com/docv2/page/6502fc8da57708028b42b18a).',
                          },
                          value_name: {
                            type: 'string',
                            description:
                              'A self-defined custom sales attribute value if the existing values do not satisfy your needs. The system will auto-generate an ID after editing.  **Note**: - No duplicates allowed under the same attribute. - Max length: 50 characters.',
                          },
                        },
                        required: [
                          'id',
                          'name',
                          'sku_img',
                          'supplementary_sku_images',
                          'value_id',
                          'value_name',
                        ],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - You must retain at least 1 sales attribute, deleting all existing sales attributes is not allowed. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\\"name\\": \\"Color\\"`, `\\"value_name\\": \\"Red\\"` in different SKUs.',
                    },
                    seller_sku: {
                      type: 'string',
                      description:
                        'An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces',
                    },
                    sku_unit_count: {
                      type: 'string',
                      description:
                        'The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \\"base unit count\\" and the \\"unit type\\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8). The unit price would then be returned in the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda).',
                    },
                  },
                  required: [
                    'external_list_prices',
                    'external_sku_id',
                    'external_urls',
                    'extra_identifier_codes',
                    'id',
                    'identifier_code',
                    'inventory',
                    'list_price',
                    'pre_sale',
                    'price',
                    'sales_attributes',
                    'seller_sku',
                    'sku_unit_count',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.  **Note**: - Max SKUs for BR, EU, JP, MX, UK, US: 300 - Max SKUs for other regions: 100  **Recommendations**: Place the most important variant at the beginning of the array.',
              },
              title: {
                type: 'string',
                description:
                  'The product title.  Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255]  - BR, MX: [1, 300]  - Other regions: [25, 255]',
              },
              video: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description:
                      'The ID of the product video. Use the [Upload Product File API](https://partner.tiktokshop.com/docv2/page/6509dffdc16ffe02b8dc10c5) to upload the video first and obtain the corresponding file ID.',
                  },
                },
                required: ['id'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: [
              'brand_id',
              'certifications',
              'description',
              'external_product_id',
              'is_cod_allowed',
              'listing_platforms',
              'main_images',
              'manufacturer_ids',
              'package_dimensions',
              'package_weight',
              'product_attributes',
              'replicated_products',
              'responsible_person_ids',
              'save_mode',
              'size_chart',
              'skus',
              'title',
              'video',
            ],
            description: 'Request body',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/{product_id}/partial_edit',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsProductIdPricesUpdatePost',
    {
      name: 'ProductV202309Api_ProductsProductIdPricesUpdatePost',
      description: `Update the price of multiple SKUs belonging to a product in the \`ACTIVATE\` status and not included in any ongoing promotions. **Note**: The \`data\` response field is always empty as there is no additional response data.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    external_list_prices: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          amount: {
                            type: 'string',
                            description: 'The price amount. Valid range: [0.01, 7600]',
                          },
                          currency: {
                            type: 'string',
                            description: 'The currency. Possible values: USD',
                          },
                          source: {
                            type: 'string',
                            description:
                              'The external ecommerce platform from which the price is sourced. Possible values: - SHOPIFY_COMPARE_AT_PRICE: The compare_at_price in Shopify.',
                          },
                        },
                        required: ['amount', 'currency', 'source'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        "The SKU list price (e.g. MSRP, RRP) or original price information on external ecommerce platforms. Applicable only for selected sellers in the US market.  **Note**: This value may appear as the strikethrough price on the product page. However, whether the strikethrough price is shown and the amount shown are subject to the audit team\\'s review and decision based on various pricing information.",
                    },
                    id: {
                      type: 'string',
                      description:
                        'The SKU ID generated by TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - The SKU ID must belong to a product with the `ACTIVATE` status. - If you are updating multiple SKUs, all the SKU IDs must belong to the same product.',
                    },
                    list_price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            'The price amount. Valid range: [0.01, 7600]   **Note**:  - The value must be equal to or greater than `skus.price.amount`. Otherwise, it will be discarded. - If the value is verified to be legitimate by the audit team, it will be stored and returned in the [Get Product API](6509d85b4a0bb702c057fdda).',
                        },
                        currency: {
                          type: 'string',
                          description: 'The currency. Possible values: USD',
                        },
                      },
                      required: ['amount', 'currency'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    price: {
                      type: 'object',
                      properties: {
                        amount: {
                          type: 'string',
                          description:
                            "**Local sellers/Intra-EU sellers** The SKU\\'s **local display price** shown on the product page before any discounts. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.   **Global sellers** The SKU\\'s **local pre-tax price**. This excludes any applicable charges such as cross-border shipping costs, taxes, and other fees, and therefore does not appear on the product page. Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market. - **Note**: Not applicable for JP and US shops using China warehouses, please use `price.sale_price` instead.",
                        },
                        currency: {
                          type: 'string',
                          description:
                            'The currency. Possible values based on the region: - BRL: Brazil - EUR: France, Germany, Ireland, Italy, Spain - GBP: United Kingdom - IDR: Indonesia - JPY: Japan - MXN: Mexico - MYR: Malaysia - PHP: Philippines - SGD: Singapore - THB: Thailand - USD: United States - VND: Vietnam',
                        },
                        sale_price: {
                          type: 'string',
                          description:
                            "**Global sellers** The SKU\\'s **local display price** shown on the product page before any discounts.  Refer to [Product Pricing](https://partner.tiktokshop.com/docv2/page/67e1288d76cfee049d9af858) for the allowed price ranges in each market.  **Note**:  - Applicable only for global sellers. -  Required for the JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.",
                        },
                      },
                      required: ['amount', 'currency', 'sale_price'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                  },
                  required: ['external_list_prices', 'id', 'list_price', 'price'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.',
              },
            },
            required: ['skus'],
            description: 'Request body',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/{product_id}/prices/update',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsRecoverPost',
    {
      name: 'ProductV202309Api_ProductsRecoverPost',
      description: `Recover products that are in the \`Deleted\` status. The status changes to \`Seller_deactivated\` after recovery.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'The product IDs to recover. Max number of IDs: 20.',
              },
            },
            required: ['product_ids'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/recover',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202309Api_ProductsSearchPost',
    {
      name: 'ProductV202309Api_ProductsSearchPost',
      description: `Retrieve a list of products that meet the specified conditions.  This API will only return the key product properties. You can pass a returned product ID to the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda) to obtain more details about the product.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              create_time_ge: {
                type: 'number',
                description:
                  'Filter products to show only those that are created on or after the specified date and time. Unix timestamp. Note: The \\"create_time_ge\\" and \\"create_time_le\\" together constitute the creation time filter condition. - If \\"create_time_ge\\" is filled but \\"create_time_le\\" is empty, \\"create_time_le\\" will default to the current time. - If \\"create_time_le\\" is filled but \\"create_time_ge\\" is empty, \\"create_time_ge\\" will default to the earliest shop time.',
              },
              create_time_le: {
                type: 'number',
                description:
                  'Filter products to show only those that are created on or before the specified date and time. Unix timestamp. Refer to notes in \\"create_time_ge\\" for more usage information.',
              },
              seller_skus: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter products by these seller SKU codes.',
              },
              status: {
                type: 'string',
                description:
                  'Filter products by their status. Default: ALL Possible values:  - ALL - DRAFT - PENDING - FAILED - ACTIVATE - SELLER_DEACTIVATED - PLATFORM_DEACTIVATED - FREEZE - DELETED',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter products to show only those that are updated on or after the specified date and time. Unix timestamp. Note: The fields \\"update_time_ge\\" and \\"update_time_le\\" together define the update time filter condition. - If \\"update_time_ge\\" is filled but \\"update_time_le\\" is empty, \\"update_time_le\\" will default to the current time. - If \\"update_time_le\\" is filled but \\"update_time_ge\\" is empty, \\"update_time_ge\\" will default to the earliest shop time.',
              },
              update_time_le: {
                type: 'number',
                description:
                  'Filter products to show only those that are updated on or before the specified date and time. Unix timestamp. Refer to notes in `update_time_ge` for more usage information.',
              },
            },
            required: [
              'create_time_ge',
              'create_time_le',
              'seller_skus',
              'status',
              'update_time_ge',
              'update_time_le',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202309/products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202312Api_GlobalProductsSearchPost',
    {
      name: 'ProductV202312Api_GlobalProductsSearchPost',
      description: `Retrieve a list of global products that meet the specified conditions.  This API will only return the key product properties. You can pass a returned global product ID to the [Get Global Product API](https://partner.tiktokshop.com/docv2/page/6509e2b0bace3e02b7490c96) to obtain more details about the product.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              create_time_ge: {
                type: 'number',
                description:
                  'Filter global products to show only those that are created on or after the specified date and time. Unix timestamp.  **Note**: The \\"create_time_ge\\" and \\"create_time_le\\" together constitute the creation time filter condition. - If \\"create_time_ge\\" is filled but \\"create_time_le\\" is empty, \\"create_time_le\\" will default to the current time. - If \\"create_time_le\\" is filled but \\"create_time_ge\\" is empty, \\"create_time_ge\\" will default to the earliest shop time.',
              },
              create_time_le: {
                type: 'number',
                description:
                  'Filter global products to show only those that are created on or before the specified date and time. Unix timestamp. Refer to notes in \\"create_time_ge\\" for more usage information.',
              },
              seller_skus: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter global products by these seller SKU codes.',
              },
              status: {
                type: 'string',
                description:
                  'Filter global products by their status. Possible values: - PUBLISHED - UNPUBLISHED - DRAFT - DELETED',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter global products to show only those that are updated on or after the specified date and time. Unix timestamp.  **Note**: The fields \\"update_time_ge\\" and \\"update_time_le\\" together define the update time filter condition. - If \\"update_time_ge\\" is filled but \\"update_time_le\\" is empty, \\"update_time_le\\" will default to the current time. - If \\"update_time_le\\" is filled but \\"update_time_ge\\" is empty, \\"update_time_ge\\" will default to the earliest shop time.',
              },
              update_time_le: {
                type: 'number',
                description:
                  'Filter global products to show only those that are updated on or before the specified date and time. Unix timestamp. Refer to notes in `update_time_ge` for more usage information.',
              },
            },
            required: [
              'create_time_ge',
              'create_time_le',
              'seller_skus',
              'status',
              'update_time_ge',
              'update_time_le',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202312/global_products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202312Api_PrerequisitesGet',
    {
      name: 'ProductV202312Api_PrerequisitesGet',
      description: `Check if a TikTok shop is ready to list products. Each shop needs to satisfy a series of TikTok Shop requirements before you can start listing products. Before you proceed to list products, use this API to check if your shop has satisfied all requirements. **Tip**: We recommend that you run this check before any bulk updates to avoid listing issues. For example, sellers may change the delivery option to \\"Shipped by seller\\" but fail to add a shipping template, thus blocking the shop from listing products. In this case, the API would return \`is_failed=true\` for the \`SHIPPING_TEMPLATE\` check item and you can prompt the seller to fix the problem.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202312/prerequisites',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202312Api_ProductsSearchPost',
    {
      name: 'ProductV202312Api_ProductsSearchPost',
      description: `Retrieve a list of products that meet the specified conditions.  This API will only return the key product properties. You can pass a returned product ID to the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda) to obtain more details about the product.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              audit_status: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter products by their audit status for TikTok Shop. Possible values:  - AUDITING: The product is currently being audited. - FAILED: The product failed the audit, or the audit was cancelled. - APPROVED: The product passed the audit and has been listed on the platform.',
              },
              category_version: {
                type: 'string',
                description:
                  'Filter products by the category tree version. Possible values based on region: - US: `v2`, represents the 7-level category tree. - Other regions: `v1`, represents the 3-level category tree. Default: Return all products from both `v1` and `v2` category trees.',
              },
              create_time_ge: {
                type: 'number',
                description:
                  'Filter products to show only those that are created on or after the specified date and time. Unix timestamp.  **Note**: `create_time_ge` and `create_time_le` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_le` is empty, `create_time_le` will default to the current time. - If `create_time_le` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_le: {
                type: 'number',
                description:
                  'Filter products to show only those that are created on or before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter products by the listing platforms. Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: Return all products regardless of their listing platform.  Applicable only for sellers that migrated from Tokopedia. **Note**: - You must also specify a `status` value other than `ALL` when filtering by listing platforms. Returning all statuses is not supported. - If you pass in one platform, the search will return products that are listed on that platform, including those that are listed on both platforms. - If you pass in `[\\"TIKTOK_SHOP\\", \\"TOKOPEDIA\\"]`, only products listed on both platforms will be returned, not those listed on just one.',
              },
              listing_quality_tier: {
                type: 'string',
                description:
                  'Filter products by their listing quality tier. Possible values: - POOR - FAIR - GOOD  **Note**: Available only for the US market.',
              },
              seller_skus: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter products by these seller SKU codes.',
              },
              sku_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter products by SKU IDs. Max count: 10',
              },
              status: {
                type: 'string',
                description:
                  'Filter products by their status. Default: ALL Possible values:  - ALL - DRAFT - PENDING - FAILED - ACTIVATE - SELLER_DEACTIVATED - PLATFORM_DEACTIVATED - FREEZE - DELETED',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter products to show only those that are updated on or after the specified date and time. Unix timestamp.  **Note**: `update_time_ge` and `update_time_le` together define the update time filter condition. - If `update_time_ge` is filled but `update_time_le` is empty, `update_time_le` will default to the current time. - If `update_time_le` is filled but `update_time_ge` is empty, `update_time_ge` will default to the earliest shop time.',
              },
              update_time_le: {
                type: 'number',
                description:
                  'Filter products to show only those that are updated on or before the specified date and time. Unix timestamp. Refer to notes in `update_time_ge` for more usage information.',
              },
            },
            required: [
              'audit_status',
              'category_version',
              'create_time_ge',
              'create_time_le',
              'listing_platforms',
              'listing_quality_tier',
              'seller_skus',
              'sku_ids',
              'status',
              'update_time_ge',
              'update_time_le',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202312/products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202401Api_ListingSchemasGet',
    {
      name: 'ProductV202401Api_ListingSchemasGet',
      description: `The interface returns the field requirements for creating a product. By providing the leaf category ID, you can obtain the field information and input methods for the product creation requirements.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_ids: {
            type: 'array',
            items: { type: 'number' },
            description: 'categoryIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'category_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202401/listing_schemas',
      executionParameters: [
        { name: 'category_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202404Api_ImagesOptimizePost',
    {
      name: 'ProductV202404Api_ImagesOptimizePost',
      description: `Optimize images used in your TikTok Shop by changing the background to white. This is especially useful for images displayed in the product image gallery as it enhances product visibility.  **Note**:  - The images to be optimized must first be uploaded to TikTok Shop through the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22). You will not be able to optimize any images that are not hosted by TikTok Shop. - Images that were previously optimized will not be processed again. - The optimization is processed asynchronously and typically completes within a few seconds. Therefore, the \`optimize_status\` returned in the first API request for an image is always \`PROCESSING\`, indicating that optimization is underway. Please call the API again after a few seconds to get the final optimization status.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    optimization_mode: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'The optimization type. Possible values: - WHITE_BACKGROUND: Change the background to white.',
                    },
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image.  Retrieve the URI from the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22).',
                    },
                  },
                  required: ['optimization_mode', 'uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The list of images to be optimized.  Use the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) to upload the images first and obtain the corresponding image URIs. Max count: 200',
              },
            },
            required: ['images'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202404/images/optimize',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202405Api_ProductsDiagnosesGet',
    {
      name: 'ProductV202405Api_ProductsDiagnosesGet',
      description: `Diagnose multiple existing live (status: \`ACTIVATE\`) products to obtain information that helps you to improve the product content, enhancing product visibility and customer trust. The returned information includes: - Listing quality information (available only for the US market). - Issues with the current product details and the overall recommendations - Auto-generated optimization suggestions targeted for specific product fields, including the title, description, and image. **Note**: This API focuses solely on optimizing product visibility and does not evaluate whether your product meets listing requirements. Quality issues identified by this API do not block your product from being listed. To verify listing requirements, use the [Check Product Listing API](650a0ee8f1fd3102b91c6493).`,
      inputSchema: {
        type: 'object',
        properties: {
          product_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'productIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202405/products/diagnoses',
      executionParameters: [
        { name: 'product_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202405Api_ProductsSeoWordsGet',
    {
      name: 'ProductV202405Api_ProductsSeoWordsGet',
      description: `Obtain SEO suggestions for product titles of live products (status: \`ACTIVATE\`) to enhance product visibility. Applicable only for the US, UK, and SEA markets.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'productIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202405/products/seo_words',
      executionParameters: [
        { name: 'product_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202405Api_ProductsSuggestionsGet',
    {
      name: 'ProductV202405Api_ProductsSuggestionsGet',
      description: `Obtain AI-optimized product titles and descriptions for live products (status: \`ACTIVATE\`).`,
      inputSchema: {
        type: 'object',
        properties: {
          product_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'productIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202405/products/suggestions',
      executionParameters: [
        { name: 'product_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202407Api_ListingSchemasGet',
    {
      name: 'ProductV202407Api_ListingSchemasGet',
      description: `The interface returns the field requirements for creating a product. By providing the leaf category ID, you can obtain the field information and input methods for the product creation requirements.`,
      inputSchema: {
        type: 'object',
        properties: {
          category_ids: {
            type: 'array',
            items: { type: 'number' },
            description: 'categoryIds identifier',
          },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          category_version: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'category_ids',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202407/listing_schemas',
      executionParameters: [
        { name: 'category_ids', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'category_version', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202407Api_ProductsCategoryUpgradeTaskPost',
    {
      name: 'ProductV202407Api_ProductsCategoryUpgradeTaskPost',
      description: `Create a task to upgrade live products (status: \`ACTIVATE\`) from a 3-level to a 7-level category tree. The task runs for up to 2 hours, depending on the number of products. If the upgrade is incomplete after 2 hours, call the API again. To figure out which products\\' categories have not been upgraded, call the [Search Product API](https://partner.tiktokshop.com/docv2/page/65854ffb8f559302d8a6acda) and set \\"category_version\\" to \\"v1\\". **Note**: You must wait at least 24 hours after a product goes live to successfully upgrade its category. If you call this API on the same day a new product goes live, the system will be unable to detect it.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202407/products/category_upgrade_task',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202407Api_SizechartsSearchPost',
    {
      name: 'ProductV202407Api_SizechartsSearchPost',
      description: `Retrieve size charts that a seller has created.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locales: { type: 'array', items: { type: 'string' } },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter size charts by size chart template IDs.  Max: 50 IDs',
              },
              keyword: {
                type: 'string',
                description:
                  'Filter size charts by size chart template name or by key words in the template name. If both `ids` and `keyword` are provided, `ids` takes priority.',
              },
            },
            required: ['ids', 'keyword'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202407/sizecharts/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locales', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202409Api_ComplianceManufacturersManufacturerIdPartialEditPost',
    {
      name: 'ProductV202409Api_ComplianceManufacturersManufacturerIdPartialEditPost',
      description: `Edit the details of a manufacturer in the EU languages supported by TikTok Shop. Include the locale code to edit the responsible person\\'s information in a particular language. Target seller: Local sellers operating in EU countries **Note**: - Updates are handled per top-level property, so all non-empty fields within an updated object must be supplied to prevent overwriting with blanks. - For top-level properties (e.g. \`name\`, \`email\`) that are not nested in an object, you can update them individually. Omitting these properties in the request will leave them unchanged. - If you need to edit any nested property within an object, you must provide values for all nested properties of that object. Any omitted nested properties will be overwritten with blanks. For example, if you want to update \`phone_number.local_number\`, you must also include the \`country_code\` property to avoid data loss for that property.`,
      inputSchema: {
        type: 'object',
        properties: {
          manufacturer_id: { type: 'string', description: 'manufacturerId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              address: {
                type: 'string',
                description: 'The postal address of the manufacturer. Max length: 500 characters',
              },
              email: { type: 'string', description: 'The email address of the manufacturer.' },
              locale: {
                type: 'string',
                description:
                  "The BCP-47 locale code representing the language used for specifying the responsible person information. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT Default: The locale of the seller\\'s registered business address.  **Note**: The information provided will be automatically translated into all EU languages supported by TikTok Shop. Ensure the locale matches the language used in field values to avoid inaccurate translations.",
              },
              name: {
                type: 'string',
                description: 'The manufacturer name. Max length: 255 characters',
              },
              phone_number: {
                type: 'object',
                properties: {
                  availability: {
                    type: 'string',
                    description:
                      'Indicates the availability of the phone number. Possible values: - `AVAILABLE`: The phone number is available and required. - `UNAVAILABLE`: No phone number is available.  Default: AVAILABLE',
                  },
                  country_code: {
                    type: 'string',
                    description:
                      'The country code of the phone number, prefixed by a plus `+` symbol. E.g. +353 for Ireland. Max digits: 4 Required if `availability=AVAILABLE`.',
                  },
                  local_number: {
                    type: 'string',
                    description:
                      'The local number. Length: 7 - 20 digits Required if `availability=AVAILABLE`.',
                  },
                },
                required: ['availability', 'country_code', 'local_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              registered_trade_name: {
                type: 'string',
                description:
                  'The registered trade name of the manufacturer. Max length: 200 characters',
              },
            },
            required: [
              'address',
              'email',
              'locale',
              'name',
              'phone_number',
              'registered_trade_name',
            ],
            description: 'Request body',
          },
        },
        required: [
          'manufacturer_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202409/compliance/manufacturers/{manufacturer_id}/partial_edit',
      executionParameters: [
        { name: 'manufacturer_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202409Api_ComplianceManufacturersPost',
    {
      name: 'ProductV202409Api_ComplianceManufacturersPost',
      description: `Add a manufacturer for a seller. The provided information will be automatically translated into all EU languages supported by TikTok Shop. - Use the [Search Manufacturers API](67066a580dcee902fa03ccf9) to obtain the translations. - Use the [Partial Edit Manufacturer API](67066a55c55b3a03044eea29) to edit the translations, if necessary. - When creating a product, pass the returned \`manufacturer_id\` to associate the product with the manufacturer. Target seller: Local sellers operating in EU countries`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              address: {
                type: 'string',
                description: 'The postal address of the manufacturer. Max length: 500 characters',
              },
              email: { type: 'string', description: 'The email address of the manufacturer.' },
              locale: {
                type: 'string',
                description:
                  "The BCP-47 locale code representing the language used for specifying the manufacturer information. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT Default: The locale of the seller\\'s registered business address.  **Note**: The information provided will be automatically translated into all EU languages supported by TikTok Shop. Ensure the locale matches the language used in field values to avoid inaccurate translations.",
              },
              name: {
                type: 'string',
                description: 'The manufacturer name. Max length: 255 characters',
              },
              phone_number: {
                type: 'object',
                properties: {
                  availability: {
                    type: 'string',
                    description:
                      'Indicates the availability of the phone number. Possible values: - `AVAILABLE`: The phone number is available and required. - `UNAVAILABLE`: No phone number is available.  Default: AVAILABLE',
                  },
                  country_code: {
                    type: 'string',
                    description:
                      'The country code of the phone number, prefixed by a plus `+` symbol. E.g. +353 for Ireland. Max digits: 4 Required if `availability=AVAILABLE`.',
                  },
                  local_number: {
                    type: 'string',
                    description:
                      'The local number. Length: 7 - 20 digits Required if `availability=AVAILABLE`.',
                  },
                },
                required: ['availability', 'country_code', 'local_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              registered_trade_name: {
                type: 'string',
                description:
                  'The registered trade name of the manufacturer. Max length: 200 characters',
              },
            },
            required: [
              'address',
              'email',
              'locale',
              'name',
              'phone_number',
              'registered_trade_name',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202409/compliance/manufacturers',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202409Api_ComplianceManufacturersSearchPost',
    {
      name: 'ProductV202409Api_ComplianceManufacturersSearchPost',
      description: `Retrieve a list of manufacturers based on their ID or keywords. When creating a product, pass the returned \`manufacturer_id\` to associate the product with the manufacturer. Target seller: Local sellers operating in EU countries`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Filter results to show those that contain this keyword. Search scope: name, registered trade name, local_number, email Max length: 200 characters  **Note**: Provide either the `manufacturer_ids` or `keyword`; if both are provided, `manufacturer_ids` will take priority.',
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter results by these manufacturer IDs. Max IDs: The value of `page_size`',
              },
            },
            required: ['keyword', 'manufacturer_ids'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202409/compliance/manufacturers/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202409Api_ComplianceResponsiblePersonsPost',
    {
      name: 'ProductV202409Api_ComplianceResponsiblePersonsPost',
      description: `Add a new EU responsible person who ensures a seller\\'s products comply with EU regulations. The provided information will be automatically translated into all EU languages supported by TikTok Shop. - Use the [Search Responsible Persons API](67066a55f17b7d02f95d2fb1) to obtain the translations. - Use the [Partial Edit Responsible Person API](67066a5587019802fdce19b3) to edit the translations, if necessary. - When creating a product, pass the returned \`responsible_person_id\` to associate the product with the responsible person.  Target seller: Local sellers operating in EU countries`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              address: {
                type: 'object',
                properties: {
                  city: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.)  The city name. Max length: 500 characters',
                  },
                  country: {
                    type: 'string',
                    description:
                      'The two letter ISO 3166 country code representing the country of the address. It must be an EU country.',
                  },
                  district: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.)  The district name. Max length: 500 characters',
                  },
                  postal_code: {
                    type: 'string',
                    description: 'The postal code. Max length: 500 characters',
                  },
                  province: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.)  The province, state, or region name. Max length: 500 characters',
                  },
                  street_address_line1: {
                    type: 'string',
                    description:
                      'The detailed street address of the location, including the building number, street name, district, city, province, and any relevant details. Max length: 500 characters',
                  },
                  street_address_line2: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.) An optional secondary line for additional address details, if necessary. Max length: 500 characters',
                  },
                },
                required: [
                  'city',
                  'country',
                  'district',
                  'postal_code',
                  'province',
                  'street_address_line1',
                  'street_address_line2',
                ],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              email: {
                type: 'string',
                description: 'The email address of the responsible person.',
              },
              locale: {
                type: 'string',
                description:
                  "The BCP-47 locale code representing the language used for specifying the responsible person information. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT Default: The locale of the seller\\'s registered business address.  **Note**: The information provided will be automatically translated into all EU languages supported by TikTok Shop. Ensure the locale matches the language used in field values to avoid inaccurate translations.",
              },
              name: {
                type: 'string',
                description: 'The responsible person name. Max length: 200 characters',
              },
              phone_number: {
                type: 'object',
                properties: {
                  country_code: {
                    type: 'string',
                    description:
                      'The country code of the phone number, prefixed by a plus `+` symbol. E.g. +353 for Ireland. Only EU country codes are allowed. Max digits: 4',
                  },
                  local_number: {
                    type: 'string',
                    description: 'The local number. Length: 7 - 11 digits',
                  },
                },
                required: ['country_code', 'local_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['address', 'email', 'locale', 'name', 'phone_number'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202409/compliance/responsible_persons',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202409Api_ComplianceResponsiblePersonsResponsiblePersonIdPartialEditPost',
    {
      name: 'ProductV202409Api_ComplianceResponsiblePersonsResponsiblePersonIdPartialEditPost',
      description: `Edit the details of an EU responsible person in the EU languages supported by TikTok Shop. Include the locale code to edit the responsible person\\'s information in a particular language. Target seller: Local sellers operating in EU countries **Note**: - Updates are handled per top-level property, so all non-empty fields within an updated object must be supplied to prevent overwriting with blanks. - For top-level properties (e.g. \`name\`, \`email\`) that are not nested in an object, you can update them individually. Omitting these properties in the request will leave them unchanged. - If you need to edit any nested property within an object, you must provide values for all nested properties of that object. Any omitted nested properties will be overwritten with blanks. For example, if you want to update \`phone_number.local_number\`, you must also include the \`country_code\` property to avoid data loss for that property.`,
      inputSchema: {
        type: 'object',
        properties: {
          responsible_person_id: { type: 'string', description: 'responsiblePersonId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              address: {
                type: 'object',
                properties: {
                  city: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.) The city name. Max length: 500 characters',
                  },
                  country: {
                    type: 'string',
                    description:
                      'The two letter ISO 3166 country code representing the country of the address. It must be an EU country.',
                  },
                  district: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.) The district name. Max length: 500 characters',
                  },
                  postal_code: {
                    type: 'string',
                    description: 'The postal code. Max length: 500 characters',
                  },
                  province: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.) The province, state, or region name. Max length: 500 characters',
                  },
                  street_address_line1: {
                    type: 'string',
                    description:
                      'The detailed street address of the location, including the building number, street name, district, city, province, and any relevant details. Max length: 500 characters',
                  },
                  street_address_line2: {
                    type: 'string',
                    description:
                      '(**Deprecated**: This field is deprecated and will be removed in a future API version. If provided, its value will be merged into `street_address_line1`. It is recommended to specify `street_address_line1` directly.) An optional secondary line for additional address details, if necessary. Max length: 500 characters',
                  },
                },
                required: [
                  'city',
                  'country',
                  'district',
                  'postal_code',
                  'province',
                  'street_address_line1',
                  'street_address_line2',
                ],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              email: {
                type: 'string',
                description: 'The email address of the responsible person.',
              },
              locale: {
                type: 'string',
                description:
                  "The BCP-47 locale code representing the language used for specifying the responsible person information. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT Default: The locale of the seller\\'s registered business address.  **Note**: The information provided will be automatically translated into all EU languages supported by TikTok Shop. Ensure the locale matches the language used in field values to avoid inaccurate translations.",
              },
              name: {
                type: 'string',
                description: 'The responsible person name. Max length: 200 characters',
              },
              phone_number: {
                type: 'object',
                properties: {
                  country_code: {
                    type: 'string',
                    description:
                      'The country code of the phone number, prefixed by a plus `+` symbol. E.g. +353 for Ireland. Only EU country codes are allowed. Max digits: 4',
                  },
                  local_number: {
                    type: 'string',
                    description: 'The local number. Length: 7 - 11 digits',
                  },
                },
                required: ['country_code', 'local_number'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['address', 'email', 'locale', 'name', 'phone_number'],
            description: 'Request body',
          },
        },
        required: [
          'responsible_person_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate:
        '/product/202409/compliance/responsible_persons/{responsible_person_id}/partial_edit',
      executionParameters: [
        { name: 'responsible_person_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202409Api_ComplianceResponsiblePersonsSearchPost',
    {
      name: 'ProductV202409Api_ComplianceResponsiblePersonsSearchPost',
      description: `Retrieve a list of responsible persons based on their ID or keywords. When creating a product, pass the returned \`responsible_person_id\` to associate the product with the responsible person. Target seller: Local sellers operating in EU countries`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Filter results to show those that contain this keyword. Search scope: name, local_number, email Max length: 200 characters  **Note**: Provide either the `responsible_person_ids` or `keyword`; if both are provided, `responsible_person_ids` will take priority.',
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter results by these responsible person IDs. Max IDs: The value of `page_size`',
              },
            },
            required: ['keyword', 'responsible_person_ids'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202409/compliance/responsible_persons/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202411Api_ProductsDiagnoseOptimizePost',
    {
      name: 'ProductV202411Api_ProductsDiagnoseOptimizePost',
      description: `Diagnose products to obtain information that helps you to improve the product content, enhancing product visibility and customer trust. The returned information includes: - Listing quality information (available only for the US market). - Issues with the current product details and the overall recommendations - Auto-generated optimization suggestions targeted for specific product fields, including the title, description, and image. This API enables you to diagnose both live products (status: \`ACTIVATE\`)  and brand-new products not yet listed in TikTok Shop. - To diagnose a **live product**, provide the \`product_id\` and \`category_id\` and leave all other product details blank. - To diagnose a **brand-new product** not yet listed in TikTok Shop, omit the \`product_id\` and provide the product details as necessary. - To diagnose a **product similar to an existing one**, provide the \`product_id\` and \`category_id\`, along with any new details. The diagnosis will combine the existing product\\'s information with the new details you provide. For example, if you provide a new \`title\`, the diagnosis will use the new title instead of the existing one while keeping the other values from the product ID. **Note**:  - To diagnose multiple live products, use the [Product Information Issue Diagnosis API](665048f380b6b302e73917d9). - This API focuses solely on optimizing product visibility and does not evaluate whether your product meets listing requirements. Quality issues identified by this API do not block your product from being listed. To verify listing requirements, use the [Check Product Listing API](650a0ee8f1fd3102b91c6493).`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              brand_id: {
                type: 'string',
                description:
                  "The ID of the brand of this product. Use the [Get Brands API](https://partner.tiktokshop.com/docv2/page/6503075656e2bb0289dd5d01) to get the list of available brands for a shop. **Note**: Unauthorized brands won\\'t be displayed on TikTok Shop.",
              },
              category_id: {
                type: 'string',
                description:
                  'The ID of the category of this product. It must be a leaf category that corresponds to the category tree type specified in the `category_version` property. Use the [Get Categories API](https://partner.tiktokshop.com/docv2/page/6509c89d0fcef602bf1acd9b) to find out if a category is a leaf category in a particular `category_version`. **Note**: - For the US market, refer to [TikTok Shop Restricted Products Policy](https://seller-us.tiktok.com/university/essay?identity=1&role=1&knowledge_id=3238037484275457&from=policy) for information on product category restrictions. - For the Indonesia market, to list a product on both TikTok Shop and Tokopedia, you must use only categories that are available on both platforms.',
              },
              description: {
                type: 'string',
                description:
                  'The product description in HTML format. **Note**: - The content must conform to the [HTML syntax](https://html.spec.whatwg.org/). All HTML tags are accepted but to optimize display on the TikTok Shop product detail page, the system will automatically convert certain tags into alternative formats, such as rendering `<table>` tags as images. - Max length: 10,000 characters. - Images must use TikTok Shop image URLs, not exceed 4000px, and include `src`, `width`, and `height` attributes. **Recommendations**: - If you are syncing a pre-existing description from another platform, include the full HTML source description here. - Provide a detailed description, ideally over 300 characters. - Include 3-5 key selling points, each under 250 characters, with supporting images. - Use 1600x1600 px for the image dimensions.',
              },
              main_images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    uri: {
                      type: 'string',
                      description:
                        'The URI of the image. Retrieve the URI from the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) or the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97).',
                    },
                  },
                  required: ['uri'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'A list of images to display in the product image gallery. Use the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) to upload the images first and obtain the corresponding image URI. **Note**: - Max number of image URIs: 9 - Arrange your image URIs in the sequence that they should appear on TikTok Shop. - Image dimensions: [300x300 px, 4000x4000 px] **Recommendations**: - Use a minimum of 5 images. - The first image should have a white background. Use the [Optimize Images API](https://partner.tiktokshop.com/docv2/page/665692b35d39dc02deb49a97) to change the background to white.',
              },
              optimization_fields: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The fields for which you want to generate specific optimization suggestions. Possible values:  - TITLE: Product title - DESCRIPTION: Product description (suggestions for this may take more than 10 seconds to generate) - IMAGE: Product image displayed in the image gallery  - ALL: Suggestions are generated for all the above fields - NONE: No suggestions will be provided. Default: NONE',
              },
              product_attributes: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    id: {
                      type: 'string',
                      description:
                        'The ID of the product attribute, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                    },
                    values: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description:
                              'The ID of a built-in product attribute value, retrieved from the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).',
                          },
                          name: {
                            type: 'string',
                            description:
                              'A self-defined custom product attribute value if the built-in values do not satisfy your needs. The system will auto-generate an ID after listing. **Note**: - No duplicates allowed under the same attribute. - Max length: 500 characters',
                          },
                        },
                        required: ['id', 'name'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'A list of selectable values for the product attribute. **Note**: Provide either a built-in ID or a custom name; if both are provided, the ID takes priority.',
                    },
                  },
                  required: ['id', 'values'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "A list of general attributes (e.g. manufacturer, country of origin, materials used) that describe the product as a whole, regardless of variant. **Note**: The attributes available for use are determined by the system based on the product\\'s assigned category, with some being mandatory. Retrieve the product attributes by using the [Get Attributes API](https://partner.tiktokshop.com/docv2/page/6509c5784a0bb702c0561cc8).",
              },
              product_id: {
                type: 'string',
                description:
                  "The product ID of an existing product in TikTok Shop. - Omit this if you are diagnosing a brand-new product not yet listed in TikTok Shop. - Provide this ID if the product is similar to an existing one, and you want the diagnosis to consider both the existing product\\'s details and the new information in this request.",
              },
              size_chart: {
                type: 'object',
                properties: {
                  image: {
                    type: 'object',
                    properties: {
                      uri: {
                        type: 'string',
                        description:
                          'The URI of the size chart image. Use the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) to upload the image first and obtain the corresponding image URI.',
                      },
                    },
                    required: ['uri'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  template: {
                    type: 'object',
                    properties: {
                      id: { type: 'string', description: 'The size chart template ID.' },
                    },
                    required: ['id'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['image', 'template'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              title: {
                type: 'string',
                description:
                  'The product title. Title length: - DE, ES, FR, IE, IT, JP, UK, US: [1, 255] - BR, MX: [1, 300] - Other regions: [25, 255]',
              },
            },
            required: [
              'brand_id',
              'category_id',
              'description',
              'main_images',
              'optimization_fields',
              'product_attributes',
              'product_id',
              'size_chart',
              'title',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202411/products/diagnose_optimize',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202501Api_ComplianceManufacturersSearchPost',
    {
      name: 'ProductV202501Api_ComplianceManufacturersSearchPost',
      description: `Retrieve a list of manufacturers in the EU languages supported by TikTok Shop based on their IDs or keyword. When creating a product, pass the returned \`manufacturer_id\` to associate the product with the manufacturer. Target seller: Local sellers operating in EU countries`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Filter results to show those that contain this keyword. Search scope: name, registered trade name, local_number, email Max length: 200 characters  **Note**: Provide either the `manufacturer_ids` or `keyword`; if both are provided, `manufacturer_ids` will take priority.',
              },
              locales: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The BCP-47 locale codes for displaying the manufacturer information. Default: The locale of the seller\\'s registered business address. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT",
              },
              manufacturer_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter results by these manufacturer IDs. Max IDs: The value of `page_size`',
              },
            },
            required: ['keyword', 'locales', 'manufacturer_ids'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202501/compliance/manufacturers/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202501Api_ComplianceResponsiblePersonsSearchPost',
    {
      name: 'ProductV202501Api_ComplianceResponsiblePersonsSearchPost',
      description: `Retrieve a list of responsible persons in the EU languages supported by TikTok Shop based on their ID or keywords. When creating a product, pass the returned \`responsible_person_id\` to associate the product with the responsible person. Target seller: Local sellers operating in EU countries`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              keyword: {
                type: 'string',
                description:
                  'Filter results to show those that contain this keyword. Search scope: name, local_number, email Max length: 200 characters  **Note**: Provide either the `responsible_person_ids` or `keyword`; if both are provided, `responsible_person_ids` will take priority.',
              },
              locales: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "The BCP-47 locale codes for displaying the responsible person information. Default: The locale of the seller\\'s registered business address. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT",
              },
              responsible_person_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter results by these responsible person IDs. Max IDs: The value of `page_size`',
              },
            },
            required: ['keyword', 'locales', 'responsible_person_ids'],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202501/compliance/responsible_persons/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202502Api_ProductsSearchPost',
    {
      name: 'ProductV202502Api_ProductsSearchPost',
      description: `Retrieve a list of products that meet the specified conditions.  This API will only return the key product properties. You can pass a returned product ID to the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda) to obtain more details about the product.`,
      inputSchema: {
        type: 'object',
        properties: {
          page_size: { type: 'number', description: 'Number of items per page' },
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              audit_status: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter products by their audit status for TikTok Shop. Possible values:  - AUDITING: Returns products where the base version or a post-live edit is currently being audited. - FAILED: Returns products where the base version or a post-live edit has failed audit, or had the audit cancelled. - APPROVED: Returns products that passed the audit and has been listed on the platform.',
              },
              category_version: {
                type: 'string',
                description:
                  'Filter products by the category tree version. Possible values based on region: - US: `v2`, represents the 7-level category tree. - Other regions: `v1`, represents the 3-level category tree. Default: Return all products from both `v1` and `v2` category trees.',
              },
              create_time_ge: {
                type: 'number',
                description:
                  'Filter products to show only those that are created on or after the specified date and time. Unix timestamp.  **Note**: `create_time_ge` and `create_time_le` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_le` is empty, `create_time_le` will default to the current time. - If `create_time_le` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_le: {
                type: 'number',
                description:
                  'Filter products to show only those that are created on or before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
              listing_platforms: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter products by the listing platforms. Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: Return all products regardless of their listing platform.  Applicable only for sellers that migrated from Tokopedia. **Note**: - You must also specify a `status` value other than `ALL` when filtering by listing platforms. Returning all statuses is not supported. - If you pass in one platform, the search will return products that are listed on that platform, including those that are listed on both platforms. - If you pass in `[\\"TIKTOK_SHOP\\", \\"TOKOPEDIA\\"]`, only products listed on both platforms will be returned, not those listed on just one.',
              },
              listing_quality_tiers: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Filter products by their listing quality tier. Possible values: - POOR - FAIR - GOOD Default: Returns all **Note**: Available only for the US market.',
              },
              return_draft_version: {
                type: 'boolean',
                description:
                  'Filter products to show only those that have a draft. - true: Returns products in their draft version only. Excludes those without a draft. - false: Returns all products regardless of whether they have a draft. Default: false  **Note**: Applicable only if the product status filter is `ALL`, `DRAFT`, `ACTIVATE`, `SELLER_DEACTIVATED`, or `PLATFORM_DEACTIVATED`.',
              },
              seller_skus: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter products by these seller SKU codes.',
              },
              sku_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'Filter products by SKU IDs. Max count: 10',
              },
              sns_filter: {
                type: 'string',
                description:
                  'Filter products by their Subscribe and Save (SNS) status. Possible values: - CONFIGURED - ELIGIBLE',
              },
              status: {
                type: 'string',
                description:
                  "Filter products based on the product\\'s base version. In other words, this filter does not apply to post-live drafts or edits. For example, `status=DRAFT` returns only unpublished products in the DRAFT state, not live products with an active draft.  Possible values:  - ALL - DRAFT - PENDING - FAILED - ACTIVATE - SELLER_DEACTIVATED - PLATFORM_DEACTIVATED - FREEZE - DELETED Default: ALL",
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter products to show only those that are updated on or after the specified date and time. Unix timestamp.  **Note**: `update_time_ge` and `update_time_le` together define the update time filter condition. - If `update_time_ge` is filled but `update_time_le` is empty, `update_time_le` will default to the current time. - If `update_time_le` is filled but `update_time_ge` is empty, `update_time_ge` will default to the earliest shop time.',
              },
              update_time_le: {
                type: 'number',
                description:
                  'Filter products to show only those that are updated on or before the specified date and time. Unix timestamp. Refer to notes in `update_time_ge` for more usage information.',
              },
            },
            required: [
              'audit_status',
              'category_version',
              'create_time_ge',
              'create_time_le',
              'listing_platforms',
              'listing_quality_tiers',
              'return_draft_version',
              'seller_skus',
              'sku_ids',
              'sns_filter',
              'status',
              'update_time_ge',
              'update_time_le',
            ],
            description: 'Request body',
          },
        },
        required: [
          'page_size',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202502/products/search',
      executionParameters: [
        { name: 'page_size', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202505Api_ImagesTranslationTasksPost',
    {
      name: 'ProductV202505Api_ImagesTranslationTasksPost',
      description: `Initiates a translation task for one or more images. This asynchronous API queues the images for processing in the specified target language.  Applicable only for sellers that sell across EU. Use the [Image Translation Completed webhook](684f8d9bcc4e44049347a12e) to monitor the translation progress, or pass the task ID to the [Get Image Translation Tasks API](684f8b2d535a9d048f234564) to retrieve the status and the translated images. **Note**:  - Please wait 5 minutes after task creation before calling the Get endpoint, and retry at intervals over 10 seconds to avoid rate limiting. - Each task corresponds to the translation of 1 image into 1 target language. - You can create up to 20 tasks per call and 500 tasks per day. Any tasks beyond the daily limit will be rejected.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    image_uri: {
                      type: 'string',
                      description:
                        'The URI of the image, retrieved from the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22)  **Recommendation**: Specify up to 5 images to avoid exceeding the task limit per call.',
                    },
                    target_languages: {
                      type: 'array',
                      items: { type: 'string' },
                      description:
                        'The target languages to translate the image into. You can specify multiple target languages for each image. Possible values: - de-DE - en-IE - es-ES - fr-FR - it-IT  **Recommendation**: Specify up to 4 languages to avoid exceeding the task limit per call.',
                    },
                  },
                  required: ['image_uri', 'target_languages'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "The list of images to translate. Use the [Upload Product Image API](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) to upload the images first and obtain the corresponding image URIs.  **Note**: The total number of image and target language combinations must not exceed 20. For example, you can submit 10 images with 2 target languages each, but you can\\'t submit 10 images with 5 target languages each.",
              },
            },
            required: ['images'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202505/images/translation_tasks',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202506Api_ImagesTranslationTasksGet',
    {
      name: 'ProductV202506Api_ImagesTranslationTasksGet',
      description: `Retrieves the image translation task status and translated images for one or more previously submitted images. **Note**: Please wait 5 minutes after [task creation](684f8b2d6e0b37048b2448b4) before calling this API, and retry at intervals over 10 seconds to avoid rate limiting. Applicable only for sellers that sell across EU.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          translation_task_ids: {
            type: 'array',
            items: { type: 'string' },
            description: 'translationTaskIds? identifier',
          },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202506/images/translation_tasks',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'translation_task_ids', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202507Api_GlobalListingRulesGet',
    {
      name: 'ProductV202507Api_GlobalListingRulesGet',
      description: `Retrieves the global listing rules for a local shop that belongs to a global seller. E.g. The supported listing methods or the inventory allocation rules. The rules differ by the markets they serve. **Note**: Applicable only for global sellers.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202507/global_listing_rules',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202507Api_ProductsProductIdGlobalReplicatePost',
    {
      name: 'ProductV202507Api_ProductsProductIdGlobalReplicatePost',
      description: `Description of [POST]/product/:version/Replicate_Product`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              replicate_target: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    region: {
                      type: 'string',
                      description: 'The new market where you want to replicate the product.',
                    },
                    skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          inventory: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                quantity: {
                                  type: 'number',
                                  description:
                                    'The SKU quantity available in the warehouse. Valid range: [1, 999,999]',
                                },
                                warehouse_id: {
                                  type: 'string',
                                  description:
                                    'The warehouse ID. Retrieve this value from the [Get Warehouse List API](650aa418defece02be6e66b6) or Get Inventory Rules API.',
                                },
                              },
                              required: ['quantity', 'warehouse_id'],
                              description:
                                'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                            },
                            description:
                              'SKU inventory information per warehouse. This field is only required if the inventory allocation mode for the warehouse is MANUAL. Otherwise, it is optional.',
                          },
                          price: {
                            type: 'object',
                            properties: {
                              currency: {
                                type: 'string',
                                description:
                                  'The currency. You must specify the local currency in the target market.',
                              },
                              sale_price: {
                                type: 'string',
                                description:
                                  "The SKU\\'s local display price shown on the product page before any discounts.  Refer to Product Pricing for the allowed price ranges in each market.",
                              },
                            },
                            required: ['currency', 'sale_price'],
                            description:
                              'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                          },
                          source_sku_id: {
                            type: 'string',
                            description: 'The ID of the SKU being replicated',
                          },
                        },
                        required: ['inventory', 'price', 'source_sku_id'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'The SKUs to be published in the specified market. - Max SKUs for EU, JP, UK, US: 300 - Max SKUs for other regions: 100 Note: SKUs of all source country must be included.',
                    },
                  },
                  required: ['region', 'skus'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Target markets for replicating the local product.',
              },
            },
            required: ['replicate_target'],
            description: 'Request body',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/product/202507/products/{product_id}/global_replicate',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ProductV202507Api_ProductsProductIdReplicatedProductsGet',
    {
      name: 'ProductV202507Api_ProductsProductIdReplicatedProductsGet',
      description: `Retrieves the globally associated replicas in other markets if the product has been replicated through local replication. Applicable only for global sellers.`,
      inputSchema: {
        type: 'object',
        properties: {
          product_id: { type: 'string', description: 'productId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'product_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/product/202507/products/{product_id}/replicated_products',
      executionParameters: [
        { name: 'product_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesActivityIdDeactivatePost',
    {
      name: 'PromotionV202309Api_ActivitiesActivityIdDeactivatePost',
      description: `Deactivate an ongoing or upcoming activity.`,
      inputSchema: {
        type: 'object',
        properties: {
          activity_id: { type: 'string', description: 'activityId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'activity_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/promotion/202309/activities/{activity_id}/deactivate',
      executionParameters: [
        { name: 'activity_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesActivityIdGet',
    {
      name: 'PromotionV202309Api_ActivitiesActivityIdGet',
      description: `Get the details of a product discount or flash deal promotion activity. For coupon activities, use [Get Coupon](6699dce0de15e502ed219e37).`,
      inputSchema: {
        type: 'object',
        properties: {
          activity_id: { type: 'string', description: 'activityId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'activity_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/promotion/202309/activities/{activity_id}',
      executionParameters: [
        { name: 'activity_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesActivityIdPut',
    {
      name: 'PromotionV202309Api_ActivitiesActivityIdPut',
      description: `Change the title and the beginning and end time of the existing product discount or flash sale promotion activity.`,
      inputSchema: {
        type: 'object',
        properties: {
          activity_id: { type: 'string', description: 'activityId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              begin_time: {
                type: 'number',
                description:
                  'Activity start time. UNIX timestamp. The value must be greater than the value of the current time.',
              },
              discount: {
                type: 'object',
                properties: {
                  bmsm_discount: {
                    type: 'object',
                    properties: {
                      details: {
                        type: 'array',
                        items: {
                          type: 'object',
                          properties: {
                            threshold_type: {
                              type: 'string',
                              description:
                                'The type of purchase criteria. Possible enumerations are: - `MINIMAL_ITEM_QUANTITY`: Buyer must meet or exceed the minimum spend criteria with eligible products. - `MINIMAL_ORDER_AMOUNT`: Buyer must meet or exceed the minimum spend criteria with eligible order.',
                            },
                            threshold_value: {
                              type: 'string',
                              description:
                                'The purchase threshold of the discount, based on the `threshold_type`, e.g., \\"3\\". Determined by user. - When `threshold_type==NO_THRESHOLD`, this value is not required. - When `threshold_type==MINIMAL_ITEM_QUANTITY`, buyer must purchase at least the specified number of eligible products (e.g. must purchase 3 or more eligible products to receive the benefit). If it represents a quantity, it must be an integer. - When `threshold_type==MINIMAL_ORDER_AMOUNT`, the eligible product subtotal for the buyer\\\'s order must meet or exceed the specified order value in local currency (e.g. buyer\\\'s order subtotal must be at least $3 to receive the benefit). If it represents an order value, it must be limited to two decimal places.',
                            },
                            tier: {
                              type: 'number',
                              description:
                                '`tier` uses 1-based indexing, i.e. the first and second tiers are counted \\"1, 2\\", not \\"0, 1\\". `threshold_value` and `discount_value` for a given tier must be greater than that of the previous tier.  E.g. If `tier`==1 has `threshold_value`==`20` and `discount_value`== `15`, `tier`==2 must have `threshold_value` > `20` and `discount_value`>`15`.',
                            },
                            type: {
                              type: 'string',
                              description:
                                'The type of discount awarded as a benefit. The value of the discount is determined by `value`. Possible enumerations are: ​- `PERCENTAGE_OFF`​: Buyer will receive X% off the price of the eligible products. - `AMOUNT_OFF`: Buyer will receive X units of local currency off the price of eligible products.',
                            },
                            value: {
                              type: 'string',
                              description:
                                'Value of the discount. - When `type`==`PERCENTAGE_OFF`, the buyer will receive X% off the price of eligible products. If the value represents a percentage, it should be an integer. - `type`==`AMOUNT_OFF`, the buyer will receive X units of local currency off the price of eligible products. If the value represents a monetary amount, it should be limited to two decimal places.',
                            },
                          },
                          required: ['threshold_type', 'threshold_value', 'tier', 'type', 'value'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        description:
                          'Configurations regarding BMSM promotions.  A maximum of two `tier`s are permitted. `details.threshold_type` and `details.discount_type` must be the same across all `tier`s.',
                      },
                    },
                    required: ['details'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  gift_discount: {
                    type: 'object',
                    properties: {
                      gift_infos: {
                        type: 'array',
                        items: {
                          type: 'object',
                          properties: {
                            gift_details: {
                              type: 'array',
                              items: {
                                type: 'object',
                                properties: {
                                  product_id: {
                                    type: 'string',
                                    description: 'TikTok Shop product id of gift.',
                                  },
                                  sku_id: {
                                    type: 'string',
                                    description: 'TikTok Shop sku id of gift.',
                                  },
                                  total_claim_limit: {
                                    type: 'string',
                                    description:
                                      'The quantity limit of the gift sku which is involved in the activity. The range is [1, 99999].  If you are updating the value of an existing sku, the value cannot be decreased.',
                                  },
                                },
                                required: ['product_id', 'sku_id', 'total_claim_limit'],
                                description:
                                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                              },
                              description:
                                'Gift configurations related to Gift With Purchase (GWP) promotions.',
                            },
                            threshold_type: {
                              type: 'string',
                              description:
                                'The purchase threshold type of discount. The threshold type of each tier must be consistent. Possible enumerations are: - `MINIMAL_ITEM_QUANTITY`: Buyer must meet or exceed the minimum spend criteria with eligible products. - `MINIMAL_ORDER_AMOUNT`: Buyer must meet or exceed the minimum spend criteria with eligible order.',
                            },
                            threshold_value: {
                              type: 'string',
                              description:
                                "The purchase threshold value of the gift, based on the `threshold_type`. Determined by user. - When `threshold_type==MINIMAL_ITEM_QUANTITY`, buyer must purchase at least the specified number of eligible products (e.g. must purchase 3 or more eligible products to receive the benefit). If it represents a quantity, it must be an integer. - When `threshold_type==MINIMAL_ORDER_AMOUNT`, the eligible product subtotal for the buyer\\'s order must meet or exceed the specified order value in local currency (e.g. buyer\\'s order subtotal must be at least $3 to receive the benefit). If it represents an order value, it must be limited to two decimal places.",
                            },
                            tier: {
                              type: 'number',
                              description:
                                '`tier` uses 1-based indexing, i.e. the first and second tiers are counted \\"1, 2\\", not \\"0, 1\\". `threshold_value` for a given tier must be greater than that of the previous tier.  E.g. If `tier`==1 has `threshold_value`==`2`, `tier`==2 must have `threshold_value` > `2`.',
                            },
                          },
                          required: ['gift_details', 'threshold_type', 'threshold_value', 'tier'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        description:
                          'Configurations regarding Gift With Purchase (GWP) promotions.  A maximum of two `tier`s are permitted in SEA and UK. Only one `tier` is permitted in US.  And `threshold_type` must be the same across all `tier`s.',
                      },
                      gift_receiving_type: {
                        type: 'string',
                        description:
                          'The receiving type of gift. Currently only supports one type: `ALL_RECEIVE` -`ALL_RECEIVE`: All gifts configured in the promotion can be collected.',
                      },
                    },
                    required: ['gift_infos', 'gift_receiving_type'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  shipping_discount: {
                    type: 'object',
                    properties: {
                      area_scope: {
                        type: 'object',
                        properties: {
                          specific_areas: {
                            type: 'array',
                            items: { type: 'string' },
                            description:
                              'The list of areas for which the promotion activity applies. The valid values that may be included in this list are dependent on the region of the shop. The list of valid values for each shop region are available here: [link](https://partner.tiktokshop.com/docv2/page/67e3b059e7dc4f04a4ff9e09)',
                          },
                          type: {
                            type: 'string',
                            description:
                              "The (buyer\\'s) geographical area to which the promotion activity applies. ​- `WHOLE`: Promotion activity applies to all areas to which the seller offers fulfillment.  - `SPECIFIC_AREAS`: Only applies to specific fulfillment areas, as defined in `area_scope.specific_areas`",
                          },
                        },
                        required: ['specific_areas', 'type'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      inventory_type: {
                        type: 'string',
                        description:
                          'The inventory types to which the promotion activity applies: - `SELF_FULFILLED`: Only applies to Inventory fulfilled from seller warehouses - `FULFILLED_BY_TIKTOK`: Only applies to Inventory fulfilled by TikTok from FBT (Fulfilled by TikTok) warehouses. - `ALL`:  Applies to all inventory of eligible products. Default: `SELF_FULFILLED` `FULFILLED_BY_TIKTOK` and `ALL` can only be set when `product_level`==`SHOP` and `threshold_type=NO_THRESHOLD`.',
                      },
                      shipping_method: {
                        type: 'string',
                        description:
                          'The shipping methods to which this promotion applies. - When `STANDARD_SHIPPING`: Only applies to Standard Shipping methods, including Economy. - `EXPRESS_SHIPPING`: Only applies to Express Shipping methods. - `ALL_SHIPPING_METHOD`: Applies to all shipping methods that the shop offers. Default: `STANDARD_SHIPPING`',
                      },
                      threshold_type: {
                        type: 'string',
                        description:
                          'The type of purchase criteria. Possible enumerations are: - `NO_THRESHOLD`: No minimum purchase criteria.  - `MINIMAL_ITEM_QUANTITY`: Buyer must meet or exceed the minimum spend criteria with eligible products. - `MINIMAL_ORDER_AMOUNT`: Buyer must meet or exceed the minimum spend criteria with eligible order. `MINIMAL_ITEM_QUANTITY` and `MINIMAL_ORDER_AMOUNT` can only be set when `product_level==SHOP`.',
                      },
                      threshold_value: {
                        type: 'string',
                        description:
                          'The purchase threshold of the discount, based on the threshold type, e.g., \\"3\\". Determined by user. - When `threshold_type==NO_THRESHOLD`, this value is not required. - When `threshold_type==MINIMAL_ITEM_QUANTITY`, buyer must purchase at least the specified number of eligible products (e.g. must purchase 3 or more eligible products to receive the benefit). If it represents a quantity, it must be an integer. - When `threshold_type==MINIMAL_ORDER_AMOUNT`, the eligible product subtotal for the buyer\\\'s order must meet or exceed the specified order value in local currency (e.g. buyer\\\'s order subtotal must be at least $3 to receive the benefit). If it represents an order value, it must be limited to two decimal places.',
                      },
                      type: {
                        type: 'string',
                        description:
                          "The type of benefit awarded by the promotion activity.  - `FREE_SHIPPING`, the buyer\\'s cost of shipping is reduced to zero. ​- `DISCOUNT_SHIPPING_FEE`, the discount is reduced by the value specified in `shipping_discount.value`.",
                      },
                      value: {
                        type: 'string',
                        description:
                          "Value of the discount. - When `discount_type==FREE_SHIPPING`, this value is not required. - `discount_type==DISCOUNT_SHIPPING_FEE`, this value is the maximum amount deducted from the buyer\\'s price of shipping in local currency.  The value should be limited to two decimal places.",
                      },
                    },
                    required: [
                      'area_scope',
                      'inventory_type',
                      'shipping_method',
                      'threshold_type',
                      'threshold_value',
                      'type',
                      'value',
                    ],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['bmsm_discount', 'gift_discount', 'shipping_discount'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              duration_type: {
                type: 'string',
                description:
                  "The effective time type of the current activity - NORMAL:  `begin_time` and `end_time` must be filled - INDEFINITE: `begin_time` and `end_time` aren\\'t required, and the promotion will be a long-term activity which runs indefinitely.  1.  `INDEFINITE` is only valid when `activity_type` is `SHIPPING_DISCOUNT`, 2. If `duration_type` is `INDEFINITE`, `start_time` and `end_time` should be 0 Default: NORMAL",
              },
              end_time: { type: 'number', description: 'Activity end time. UNIX timestamp.' },
              participation_limit: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    type: {
                      type: 'string',
                      description:
                        'Determines whether the promotion activity limits the number of times each buyer can receive its benefit. e.g.: - `BUYER_NO_LIMIT`: No limit for buyer​s. Buyers can benefit from this promotion across multiple orders. - `BUYER_LIMIT_ONLY_ONE`: Buyers can benefit from this promotion activity for no more than one order. ​Default: `BUYER_NO_LIMIT`',
                    },
                  },
                  required: ['type'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The number of times a buyer can participate in the promotion.',
              },
              product_level: {
                type: 'string',
                description:
                  'Activity product dimension, values are: ​- PRODUCT: Promotion activity applies at the product (SPU) level. Any and all SKUs that are part of this product will be subject to the promotion. ​- VARIATION: Promotion activity only applies to specified SKUs. ​- SHOP: Promotion activity applies to all products in the shop.',
              },
              title: {
                type: 'string',
                description: 'Activity name (50 characters max). The name must be unique.',
              },
            },
            required: [
              'begin_time',
              'discount',
              'duration_type',
              'end_time',
              'participation_limit',
              'product_level',
              'title',
            ],
            description: 'Request body',
          },
        },
        required: [
          'activity_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'put',
      pathTemplate: '/promotion/202309/activities/{activity_id}',
      executionParameters: [
        { name: 'activity_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesActivityIdProductsPut',
    {
      name: 'PromotionV202309Api_ActivitiesActivityIdProductsPut',
      description: `Use this API to add the products or SKUs to the list of a product discount activity or a flash deal activity. You can also change the discounts on existing products or SKUs. To remove the products or SKUs from the list, use [Remove Activity Product](https://partner.tiktokshop.com/docv2/page/650acfd84a0bb702c072b4eb).`,
      inputSchema: {
        type: 'object',
        properties: {
          activity_id: { type: 'string', description: 'activityId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              activity_id: {
                type: 'string',
                description:
                  'A unique ID that identifies activities. You cannot update the products in `DEACTIVATED` or `EXPIRED` activities.',
              },
              products: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    activity_price_amount: {
                      type: 'string',
                      description:
                        'Deal price.  You must specify the value when `product_level==PRODUCT` and `activity_type==FIXED_PRICE / FLASHSALE`. The currency is the same between activity price and product price.',
                    },
                    discount: {
                      type: 'string',
                      description:
                        "Discount value. If the product is 10% off, the value is `10`. You must specify the value when `product_level==PRODUCT` and `activity_type==DIRECT_DISCOUNT`; and you must not specify it when it\\'s not.",
                    },
                    id: { type: 'string', description: 'TikTok Shop product ID' },
                    quantity_limit: {
                      type: 'number',
                      description:
                        'The quantity limit of the products involved in the activity. The range is `[1, 99]`, or you can use `-1` for unlimited. If you are updating the value of an existing product, the value cannot be less than the current value. When `product_level==VARIATION`, you must specify `-1`.',
                    },
                    quantity_per_user: {
                      type: 'number',
                      description:
                        'Limit of product purchase per buyer. The range is `[1, 99]`, or you can use `-1` for unlimited. If you are updating the value of an existing product, the value cannot be less than the current value. When `product_level==VARIATION`, you must specify `-1`.',
                    },
                    skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          activity_price_amount: {
                            type: 'string',
                            description:
                              'Deal price.  You must specify the value when `product_level==VARIATION` and `activity_type==FIXED_PRICE / FLASHSALE`. The currency of activity price is the same as that of SKU price.',
                          },
                          discount: {
                            type: 'string',
                            description:
                              'Discount value. If the SKU is 10% off, the value is `10`. You must specify the value when `product_level==VARIATION` and `activity_type==DIRECT_DISCOUNT`.',
                          },
                          id: { type: 'string', description: 'SKU ID' },
                          quantity_limit: {
                            type: 'number',
                            description:
                              'The quantity limit of the SKU involved in the activity. The range is `[1, 99]`, or you can use `-1` for unlimited. If you are updating the value of an existing SKU, the value cannot be decreased.',
                          },
                          quantity_per_user: {
                            type: 'number',
                            description:
                              'Limit of SKU purchase per buyer. The range is `[1, 99]`, or you can use `-1` for unlimited. If you are updating the value of an existing SKU, the value cannot be decreased.',
                          },
                        },
                        required: [
                          'activity_price_amount',
                          'discount',
                          'id',
                          'quantity_limit',
                          'quantity_per_user',
                        ],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description:
                        'The SKUs to add to the list or to edit. The number of the SKUs across all products must not exceed 300 in an API call. You must specify the value to `[]` when `product_level==PRODUCT`.',
                    },
                  },
                  required: [
                    'activity_price_amount',
                    'discount',
                    'id',
                    'quantity_limit',
                    'quantity_per_user',
                    'skus',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'The items to add to the list or the existing items in the list of promotion activity to edit. The length must not exceed `300`.',
              },
            },
            required: ['activity_id', 'products'],
            description: 'Request body',
          },
        },
        required: [
          'activity_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'put',
      pathTemplate: '/promotion/202309/activities/{activity_id}/products',
      executionParameters: [
        { name: 'activity_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesActivityIdProductsDelete',
    {
      name: 'PromotionV202309Api_ActivitiesActivityIdProductsDelete',
      description: `Use this API to remove products or SKUs from the existing product discount or flash sale promotion activity.`,
      inputSchema: {
        type: 'object',
        properties: {
          activity_id: { type: 'string', description: 'activityId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              product_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'IDs of the products to remove. Max count: 300.',
              },
              sku_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'IDs of the SKUs to remove. Max count: 300.',
              },
            },
            required: ['product_ids', 'sku_ids'],
            description: 'Request body',
          },
        },
        required: [
          'activity_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'delete',
      pathTemplate: '/promotion/202309/activities/{activity_id}/products',
      executionParameters: [
        { name: 'activity_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesPost',
    {
      name: 'PromotionV202309Api_ActivitiesPost',
      description: `Use this API to create a product discount activity or a flash deal activity. You cannot create a coupon activity with this API. To do that, you\\'ll need to go to the seller center or the seller app. To update the products or SKUs included in the activity, use [Update Activity Product](https://partner.tiktokshop.com/docv2/page/650d32c42aaa3602b86ccb5c).`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              activity_type: {
                type: 'string',
                description:
                  'The type of activities. Possible enumerations: - `FIXED_PRICE`: product discount activity with fixed price. - `DIRECT_DISCOUNT`: product discount activities with percentage off. - `FLASHSALE`: flash sale activity. - `SHIPPING_DISCOUNT`: shipping fee discount. - `BUY_MORE_SAVE_MORE`: Buy more save more discount.',
              },
              begin_time: {
                type: 'number',
                description:
                  'Activity start time. UNIX timestamp. The value must be greater than the value of the current time.',
              },
              discount: {
                type: 'object',
                properties: {
                  bmsm_discount: {
                    type: 'object',
                    properties: {
                      details: {
                        type: 'array',
                        items: {
                          type: 'object',
                          properties: {
                            threshold_type: {
                              type: 'string',
                              description:
                                'The type of purchase criteria. Possible enumerations are: - `MINIMAL_ITEM_QUANTITY`: Buyer must meet or exceed the minimum spend criteria with eligible products. - `MINIMAL_ORDER_AMOUNT`: Buyer must meet or exceed the minimum spend criteria with eligible order.',
                            },
                            threshold_value: {
                              type: 'string',
                              description:
                                'The purchase threshold of the discount, based on the `threshold_type`, e.g., \\"3\\". Determined by user. - When `threshold_type==NO_THRESHOLD`, this value is not required. - When `threshold_type==MINIMAL_ITEM_QUANTITY`, buyer must purchase at least the specified number of eligible products (e.g. must purchase 3 or more eligible products to receive the benefit). If it represents a quantity, it must be an integer. - When `threshold_type==MINIMAL_ORDER_AMOUNT`, the eligible product subtotal for the buyer\\\'s order must meet or exceed the specified order value in local currency (e.g. buyer\\\'s order subtotal must be at least $3 to receive the benefit). If it represents an order value, it must be limited to two decimal places.',
                            },
                            tier: {
                              type: 'number',
                              description:
                                '`tier` uses 1-based indexing, i.e. the first and second tiers are counted \\"1, 2\\", not \\"0, 1\\". `threshold_value` and `discount_value` for a given tier must be greater than that of the previous tier.  E.g. If `tier`==1 has `threshold_value`==`20` and `discount_value`== `15`, `tier`==2 must have `threshold_value` > `20` and `discount_value`>`15`.',
                            },
                            type: {
                              type: 'string',
                              description:
                                'The type of discount awarded as a benefit. The value of the discount is determined by `value`. Possible enumerations are: ​- `PERCENTAGE_OFF`​: Buyer will receive X% off the price of the eligible products. - `AMOUNT_OFF`: Buyer will receive X units of local currency off the price of eligible products.',
                            },
                            value: {
                              type: 'string',
                              description:
                                'Value of the discount. - When `type`==`PERCENTAGE_OFF`, the buyer will receive X% off the price of eligible products. If the value represents a percentage, it should be an integer. - `type`==`AMOUNT_OFF`, the buyer will receive X units of local currency off the price of eligible products. If the value represents a monetary amount, it should be limited to two decimal places.',
                            },
                          },
                          required: ['threshold_type', 'threshold_value', 'tier', 'type', 'value'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        description:
                          'Configurations regarding BMSM promotions.  A maximum of two `tier`s are permitted. `details.threshold_type` and `details.discount_type` must be the same across all `tier`s.',
                      },
                    },
                    required: ['details'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  gift_discount: {
                    type: 'object',
                    properties: {
                      gift_infos: {
                        type: 'array',
                        items: {
                          type: 'object',
                          properties: {
                            gift_details: {
                              type: 'array',
                              items: {
                                type: 'object',
                                properties: {
                                  product_id: {
                                    type: 'string',
                                    description: 'TikTok Shop product id of gift.',
                                  },
                                  sku_id: {
                                    type: 'string',
                                    description: 'TikTok Shop sku id of gift.',
                                  },
                                  total_claim_limit: {
                                    type: 'string',
                                    description:
                                      'The quantity limit of the gift sku which is involved in the activity. The range is [1, 99999].  If you are updating the value of an existing sku, the value cannot be decreased.',
                                  },
                                },
                                required: ['product_id', 'sku_id', 'total_claim_limit'],
                                description:
                                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                              },
                              description:
                                'Gift configurations related to Gift With Purchase (GWP) promotions.',
                            },
                            threshold_type: {
                              type: 'string',
                              description:
                                'The purchase threshold type of discount. Possible enumerations are: - `MINIMAL_ITEM_QUANTITY`: Buyer must meet or exceed the minimum spend criteria with eligible products. - `MINIMAL_ORDER_AMOUNT`: Buyer must meet or exceed the minimum spend criteria with eligible order.',
                            },
                            threshold_value: {
                              type: 'string',
                              description:
                                "The purchase threshold value of the gift, based on the `threshold_type`. Determined by user. - When `threshold_type==MINIMAL_ITEM_QUANTITY`, buyer must purchase at least the specified number of eligible products (e.g. must purchase 3 or more eligible products to receive the benefit). If it represents a quantity, it must be an integer. - When `threshold_type==MINIMAL_ORDER_AMOUNT`, the eligible product subtotal for the buyer\\'s order must meet or exceed the specified order value in local currency (e.g. buyer\\'s order subtotal must be at least $3 to receive the benefit). If it represents an order value, it must be limited to two decimal places.",
                            },
                            tier: {
                              type: 'number',
                              description:
                                '`tier` uses 1-based indexing, i.e. the first and second tiers are counted \\"1, 2\\", not \\"0, 1\\". `threshold_value` for a given tier must be greater than that of the previous tier.  E.g. If `tier`==1 has `threshold_value`==`2`, `tier`==2 must have `threshold_value` > `2`.',
                            },
                          },
                          required: ['gift_details', 'threshold_type', 'threshold_value', 'tier'],
                          description:
                            'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                        },
                        description:
                          'Configurations regarding Gift With Purchase (GWP) promotions.  A maximum of two `tier`s are permitted in SEA and UK. Only one `tier` is permitted in US. And `threshold_type` must be the same across all `tier`s.',
                      },
                      gift_receiving_type: {
                        type: 'string',
                        description:
                          'The receiving type of gift. Currently only supports one type: `ALL_RECEIVE` -`ALL_RECEIVE`: All gifts configured in the promotion can be collected.',
                      },
                    },
                    required: ['gift_infos', 'gift_receiving_type'],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                  shipping_discount: {
                    type: 'object',
                    properties: {
                      area_scope: {
                        type: 'object',
                        properties: {
                          specific_areas: {
                            type: 'array',
                            items: { type: 'string' },
                            description:
                              'The list of areas for which the promotion activity applies. The valid values that may be included in this list are dependent on the region of the shop. The list of valid values for each shop region are available here: [link](https://partner.tiktokshop.com/docv2/page/67e3b059e7dc4f04a4ff9e09)',
                          },
                          type: {
                            type: 'string',
                            description:
                              "The (buyer\\'s) geographical area to which the promotion activity applies. ​- `WHOLE`: Promotion activity applies to all areas to which the seller offers fulfillment.  - `SPECIFIC_AREAS`: Only applies to specific fulfillment areas, as defined in `area_scope.specific_areas`",
                          },
                        },
                        required: ['specific_areas', 'type'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      inventory_type: {
                        type: 'string',
                        description:
                          'The inventory types to which the promotion activity applies: - `SELF_FULFILLED`: Only applies to Inventory fulfilled from seller warehouses - `FULFILLED_BY_TIKTOK`: Only applies to Inventory fulfilled by TikTok from FBT (Fulfilled by TikTok) warehouses. - `ALL`:  Applies to all inventory of eligible products. Default: `SELF_FULFILLED` `FULFILLED_BY_TIKTOK` and `ALL` can only be set when `product_level`==`SHOP` and `threshold_type=NO_THRESHOLD`.',
                      },
                      shipping_method: {
                        type: 'string',
                        description:
                          'The shipping methods to which this promotion applies. - When `STANDARD_SHIPPING`: Only applies to Standard Shipping methods, including Economy. - `EXPRESS_SHIPPING`: Only applies to Express Shipping methods. - `ALL_SHIPPING_METHOD`: Applies to all shipping methods that the shop offers. Default: `STANDARD_SHIPPING`',
                      },
                      threshold_type: {
                        type: 'string',
                        description:
                          'The type of purchase criteria. Possible enumerations are: - `NO_THRESHOLD`: No minimum purchase criteria.  - `MINIMAL_ITEM_QUANTITY`: Buyer must meet or exceed the minimum spend criteria with eligible products. - `MINIMAL_ORDER_AMOUNT`: Buyer must meet or exceed the minimum spend criteria with eligible order. `MINIMAL_ITEM_QUANTITY` and `MINIMAL_ORDER_AMOUNT` can only be set when `product_level==SHOP`.',
                      },
                      threshold_value: {
                        type: 'string',
                        description:
                          'The purchase threshold of the discount, based on the threshold type, e.g., \\"3\\". Determined by user. - When `threshold_type==NO_THRESHOLD`, this value is not required. - When `threshold_type==MINIMAL_ITEM_QUANTITY`, buyer must purchase at least the specified number of eligible products (e.g. must purchase 3 or more eligible products to receive the benefit). If it represents a quantity, it must be an integer. - When `threshold_type==MINIMAL_ORDER_AMOUNT`, the eligible product subtotal for the buyer\\\'s order must meet or exceed the specified order value in local currency (e.g. buyer\\\'s order subtotal must be at least $3 to receive the benefit). If it represents an order value, it must be limited to two decimal places.',
                      },
                      type: {
                        type: 'string',
                        description:
                          "The type of benefit awarded by the promotion activity.  -When `FREE_SHIPPING`, the buyer\\'s cost of shipping is reduced to zero. ​-When `DISCOUNT_SHIPPING_FEE`, the discount is reduced by the value specified in `shipping_discount.value`.",
                      },
                      value: {
                        type: 'string',
                        description:
                          "Value of the discount. - When `discount_type==FREE_SHIPPING`, this value is not required. - `discount_type==DISCOUNT_SHIPPING_FEE`, this value is the maximum amount deducted from the buyer\\'s price of shipping in local currency.  The value should be limited to two decimal places.",
                      },
                    },
                    required: [
                      'area_scope',
                      'inventory_type',
                      'shipping_method',
                      'threshold_type',
                      'threshold_value',
                      'type',
                      'value',
                    ],
                    description:
                      'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                  },
                },
                required: ['bmsm_discount', 'gift_discount', 'shipping_discount'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
              duration_type: {
                type: 'string',
                description:
                  "The effective time type of the current activity - NORMAL:  `begin_time` and `end_time` must be filled - INDEFINITE: `begin_time` and `end_time` aren\\'t required, and the promotion will be a long-term activity which runs indefinitely.  1.  `INDEFINITE` is only valid when `activity_type` is `SHIPPING_DISCOUNT`, 2. If `duration_type` is `INDEFINITE`, `start_time` and `end_time` should be 0 Default: NORMAL",
              },
              end_time: { type: 'number', description: 'Activity end time. UNIX timestamp.' },
              participation_limit: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    type: {
                      type: 'string',
                      description:
                        'Determines whether the promotion activity limits the number of times each buyer can receive its benefit. e.g.: - `BUYER_NO_LIMIT`: No limit for buyer​s. Buyers can benefit from this promotion across multiple orders. - `BUYER_LIMIT_ONLY_ONE`: Buyers can benefit from this promotion activity for no more than one order. ​Default: `BUYER_NO_LIMIT`',
                    },
                  },
                  required: ['type'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'The number of times a buyer can participate in the promotion.',
              },
              product_level: {
                type: 'string',
                description:
                  'Activity product dimension, values are: ​- PRODUCT: Promotion activity applies at the product (SPU) level. Any and all SKUs that are part of this product will be subject to the promotion. ​- VARIATION: Promotion activity only applies to specified SKUs. ​- SHOP: Promotion activity applies to all products in the shop. When `activity_type` is `SHIPPING_DISCOUNT`, the `product_level` can not be `VARIATION`. To set the products or SKUs covered by the activity, use [Update Activity Product](https://partner.tiktokshop.com/docv2/page/650d32c42aaa3602b86ccb5c).',
              },
              title: {
                type: 'string',
                description:
                  'Unique name across all your activities. The length must not exceed 50 characters.',
              },
            },
            required: [
              'activity_type',
              'begin_time',
              'discount',
              'duration_type',
              'end_time',
              'participation_limit',
              'product_level',
              'title',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/promotion/202309/activities',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202309Api_ActivitiesSearchPost',
    {
      name: 'PromotionV202309Api_ActivitiesSearchPost',
      description: `Get a list of product discount or flash deal promotion activities. For coupon activities, use [Search Coupons](https://partner.tiktokshop.com/docv2/page/6699dcdf115ebe02f841e4cd).`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
          requestBody: {
            type: 'object',
            properties: {
              activity_title: {
                type: 'string',
                description: 'Activity title key words. No fuzzy matching.',
              },
              activity_type: {
                type: 'string',
                description:
                  "The type of activities. If `activity_type`  isn\\'t passed, return activities of all types. Possible values: The type of activities. Possible values: - `FIXED_PRICE` - `DIRECT_DISCOUNT` - `FLASHSALE` - `SHIPPING_DISCOUNT` - `BUY_MORE_SAVE_MORE`",
              },
              page_size: {
                type: 'number',
                description: 'Page size. The range is `[0, 100]`. `50` by default.',
              },
              page_token: {
                type: 'string',
                description: 'Specify the value for the page. Use `\\"\\"` for the first page.',
              },
              status: {
                type: 'string',
                description:
                  'Activity status. Possible values: - DRAFT: Promotion activities with this status are not available to TikTok users. - NOT_START: Promotion activities with this status are not available to TikTok users until the set activity start time. - ONGOING: Promotion activities with this status are available to TikTok users. - EXPIRED: Promotion activities with this status are not available to TikTok users because it has expired. - DEACTIVATED: The activity has been deactivated by the seller and is not available to TikTok users. - NOT_EFFECTIVE:  The activity is terminated by the platform and is not available to TikTok users.',
              },
            },
            required: ['activity_title', 'activity_type', 'page_size', 'page_token', 'status'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/promotion/202309/activities/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202406Api_CouponsCouponIdGet',
    {
      name: 'PromotionV202406Api_CouponsCouponIdGet',
      description: `Use this API to get the full details of a coupon matching the {coupon_id}.`,
      inputSchema: {
        type: 'object',
        properties: {
          coupon_id: { type: 'string', description: 'couponId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'coupon_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/promotion/202406/coupons/{coupon_id}',
      executionParameters: [
        { name: 'coupon_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'PromotionV202406Api_CouponsSearchPost',
    {
      name: 'PromotionV202406Api_CouponsSearchPost',
      description: `Use this API to get a list of coupons, narrowed down further based on search parameters.  The coupons are created in Seller Center or Seller App. For further details of the specific coupon, use \`GET Coupon\`.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          page_size: { type: 'number' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              display_type: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'The display type of coupons. Values: - `REGULAR`: Regular coupons which are displayed to TikTok users across all display locations available in TTS, including PLPs, PDPs, TikTok Videos, LIVE Rooms, Creator Showcases, and may be shared via TTS Customer Support instant messages. Includes coupons which target select customer segments. - `LIVE`: Coupons which are only displayed to TikTok users in LIVE Rooms. - `CREATOR_EXCLUSIVE`: Coupons that can be claimed through the display channels of the specified creator, such as their LIVE Rooms, and their Creator Showcase. - `CHAT`: Exclusive coupons that may be sent to customers via TTS customer support chat messages, but are not displayed in other display locations. - `PROMO_CODE`: Promo codes do not have dedicated display locations on TikTok, but may be shared with customers in LIVEs, in TikTok videos, or other social media platforms. They can be claimed by customers entering a claim code at checkout or by customers that use a custom promo code landing page URL.',
              },
              status: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "Coupon\\'s promotion status. Values: - `NOT_START`: Not available to TikTok users until the coupon\\'s configured start time. - `ONGOING`: Available to TikTok users. - `EXPIRED`: Not available to TikTok users because it has expired. - `DEACTIVATED`: Deactivated by the seller and is not available to TikTok users.",
              },
              title_keyword: {
                type: 'string',
                description:
                  'Keywords in the coupon titles to search for. The range of the length is `(0, 100]`. Fuzzy matching not supported.',
              },
            },
            required: ['display_type', 'status', 'title_keyword'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/promotion/202406/coupons/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_CancellationsCancelIdApprovePost',
    {
      name: 'ReturnRefundV202309Api_CancellationsCancelIdApprovePost',
      description: `Use this API to approve a buyer\\'s order cancellation request.`,
      inputSchema: {
        type: 'object',
        properties: {
          cancel_id: { type: 'string', description: 'cancelId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          idempotency_key: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'cancel_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/cancellations/{cancel_id}/approve',
      executionParameters: [
        { name: 'cancel_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'idempotency_key', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_CancellationsCancelIdRejectPost',
    {
      name: 'ReturnRefundV202309Api_CancellationsCancelIdRejectPost',
      description: `Use this API to reject a buyer\\'s order cancellation request.`,
      inputSchema: {
        type: 'object',
        properties: {
          cancel_id: { type: 'string', description: 'cancelId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          idempotency_key: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              comment: {
                type: 'string',
                description:
                  "Seller\\'s comment on rejection decision. This is where a seller will provide more information about rejecting the request.",
              },
              images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    height: { type: 'number', description: 'Image height. Unit: px' },
                    image_id: { type: 'string', description: 'Image ID.' },
                    mime_type: { type: 'string', description: 'MIME type.' },
                    width: { type: 'number', description: 'Image width. Unit: px' },
                  },
                  required: ['height', 'image_id', 'mime_type', 'width'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  "List of images provided by the seller to support seller\\'s decision to reject the order cancellation request.",
              },
              reject_reason: {
                type: 'string',
                description:
                  "Seller\\'s reason to reject buyer\\'s order cancellation request.   Please visit our [cancel reason appendix ](650b28280fcef602bf435096) to see a list of possible rejection reasons.",
              },
            },
            required: ['comment', 'images', 'reject_reason'],
            description: 'Request body',
          },
        },
        required: [
          'cancel_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/cancellations/{cancel_id}/reject',
      executionParameters: [
        { name: 'cancel_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'idempotency_key', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_CancellationsPost',
    {
      name: 'ReturnRefundV202309Api_CancellationsPost',
      description: `Use this API to cancel an order on behalf of a seller. In the US and UK markets, when an item is out of stock, partial cancellation on the single item level is supported by this API.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              cancel_reason: {
                type: 'string',
                description:
                  'Reason to cancel the order  Please see \\"Return API Overview\\" for a list of reasons a seller can select to cancel the order.',
              },
              order_id: { type: 'string', description: 'TikTok Shop order id' },
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "List of order line item ids to cancel. In the US and UK markets, when an item is out of stock, partial cancellation on the single item level is supported. To initiate a partial cancellation, specify the item\\'s order line id.",
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    quantity: { type: 'number', description: 'The quantity of SKU to cancel' },
                    sku_id: { type: 'string', description: 'The SKU id to cancel' },
                  },
                  required: ['quantity', 'sku_id'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'List of SKU to cancel',
              },
            },
            required: ['cancel_reason', 'order_id', 'order_line_item_ids', 'skus'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/cancellations',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_CancellationsSearchPost',
    {
      name: 'ReturnRefundV202309Api_CancellationsSearchPost',
      description: `Use this API to search and retrieve one or more order cancellations.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_field: { type: 'string' },
          sort_order: { type: 'string' },
          page_size: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              buyer_user_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of TikTok Shop buyer user IDs.',
              },
              cancel_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of order cancellations IDs.',
              },
              cancel_status: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'List of order cancellation statuses. Possible values: - CANCELLATION_REQUEST_PENDING - CANCELLATION_REQUEST_SUCCESS - CANCELLATION_REQUEST_CANCEL - CANCELLATION_REQUEST_COMPLETE  Please see \\"API Overview\\" for more information about these statuses.',
              },
              cancel_types: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'List of order cancellation types. Possible values: - CANCEL: Cancel by seller or system. - BUYER_CANCEL: Cancel by buyer. Need to be approved by seller or system.',
              },
              create_time_ge: {
                type: 'number',
                description:
                  'Filter cancellations to show only orders that have been created after a specified date and time. Unix timestamp.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter cancellations to show only orders that have been created before a specified date and time. Unix timestamp.',
              },
              locale: {
                type: 'string',
                description:
                  'The BCP-47 locale codes for displaying the order, delimited by commas. Default: en-US Refer to [Locale codes](678e3a47bae28f030a8c7523) for the list of supported locale codes.',
              },
              order_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of TikTok Shop order IDs.',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter cancellations to show only orders that have been updated after a specified date and time. Unix timestamp.',
              },
              update_time_lt: {
                type: 'number',
                description:
                  'Filter cancellations to show only orders that have been updated before a specified date and time. Unix timestamp.',
              },
            },
            required: [
              'buyer_user_ids',
              'cancel_ids',
              'cancel_status',
              'cancel_types',
              'create_time_ge',
              'create_time_lt',
              'locale',
              'order_ids',
              'update_time_ge',
              'update_time_lt',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/cancellations/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_field', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_OrdersOrderIdAftersaleEligibilityGet',
    {
      name: 'ReturnRefundV202309Api_OrdersOrderIdAftersaleEligibilityGet',
      description: `Use this API to check eligible aftersale solutions for an order, including whether the seller or buyer can initiate a refund, return, or cancel a specific order.`,
      inputSchema: {
        type: 'object',
        properties: {
          order_id: { type: 'string', description: 'orderId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          initiate_aftersale_user: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          page_size: {
            type: 'number',
            description: 'Number of items to return per page (default: 10, max: 50)',
          },
        },
        required: [
          'order_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/return_refund/202309/orders/{order_id}/aftersale_eligibility',
      executionParameters: [
        { name: 'order_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'initiate_aftersale_user', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
        { name: 'page_size', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_RefundsCalculatePost',
    {
      name: 'ReturnRefundV202309Api_RefundsCalculatePost',
      description: `Use this API to check order refundable amounts.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              handover_method: {
                type: 'string',
                description:
                  'Which handover method buyer chooses to use when returning goods to seller by platform - DROP_OFF: buyer drops off the parcel in logistics service collect point. - PICKUP: logistics service picks up the buyer package.',
              },
              order_id: { type: 'string', description: 'TikTok Shop order id.' },
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'TikTok Shop order line item ids.',
              },
              reason_name: {
                type: 'string',
                description:
                  "Seller\\'s reason to create a return，all available reasons, please reference to API overview.",
              },
              request_type: {
                type: 'string',
                description:
                  'Request type - CANCEL - REFUND - RETURN_AND_REFUND Note: different request types are used for different aftersales scenarios. Also, different request types might have different refund amounts, because the refund amount calculation policy is different.',
              },
              shipment_type: {
                type: 'string',
                description:
                  'How buyer ships items to seller when in a return request, could be: - PLATFORM - BUYER_ARRANGE',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    quantity: {
                      type: 'number',
                      description: 'Sku id seller wants to create a return request.',
                    },
                    sku_id: {
                      type: 'string',
                      description: 'Quantity seller wants to create a return request.',
                    },
                  },
                  required: ['quantity', 'sku_id'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
              },
            },
            required: [
              'handover_method',
              'order_id',
              'order_line_item_ids',
              'reason_name',
              'request_type',
              'shipment_type',
              'skus',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/refunds/calculate',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_RejectReasonsGet',
    {
      name: 'ReturnRefundV202309Api_RejectReasonsGet',
      description: `Use this API to obtain order return or cancellation rejection reasons. The seller is required to provide a reason when they reject a cancel, refund, or return request.`,
      inputSchema: {
        type: 'object',
        properties: {
          return_or_cancel_id: { type: 'string', description: 'returnOrCancelId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'return_or_cancel_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/return_refund/202309/reject_reasons',
      executionParameters: [
        { name: 'return_or_cancel_id', in: 'query' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_ReturnsPost',
    {
      name: 'ReturnRefundV202309Api_ReturnsPost',
      description: `Use this API to initiate a return request on behalf of the buyer Sellers can reject the request, or accept and issue: -Return and Refund (buyer must send package back) -Returnless Refund (buyer can keep the item) -Partial Refund (Seller issues a partial refund, buyer can keep the item)`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          idempotency_key: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              currency: {
                type: 'string',
                description:
                  'Currency for refund which should be same as currency in TikTok Ship Order.',
              },
              handover_method: {
                type: 'string',
                description:
                  'Which handover method buyer chooses to use when returning goods to seller by platform - DROP_OFF - PICKUP',
              },
              order_id: { type: 'string', description: 'Tiktok Shop order id' },
              order_line_item_ids: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'Order line ids seller wants to create return request, should use order line ids to create return request if had split parcel to multiple packages, default value is all order line ids in the order if not input order_line_ids and skus',
              },
              refund_total: {
                type: 'string',
                description:
                  'Total refund amount to the buyer.  The total refund amount can not exceed the refundable amount',
              },
              return_reason: {
                type: 'string',
                description: "Seller\\'s reason to create a return",
              },
              return_type: {
                type: 'string',
                description: 'Which type to create:  - REFUND - RETURN_AND_REFUND',
              },
              shipment_type: {
                type: 'string',
                description:
                  'How buyer ships items to seller when in a return request, could be: - PLATFORM - BUYER_ARRANGE',
              },
              skus: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    quantity: {
                      type: 'number',
                      description: 'Quantity seller wants to create a return request',
                    },
                    sku_id: {
                      type: 'string',
                      description: 'Sku id seller wants to create a return request',
                    },
                  },
                  required: ['quantity', 'sku_id'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Skus',
              },
            },
            required: [
              'currency',
              'handover_method',
              'order_id',
              'order_line_item_ids',
              'refund_total',
              'return_reason',
              'return_type',
              'shipment_type',
              'skus',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/returns',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'idempotency_key', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_ReturnsReturnIdApprovePost',
    {
      name: 'ReturnRefundV202309Api_ReturnsReturnIdApprovePost',
      description: `Use this API to approve a buyer\\'s return request.`,
      inputSchema: {
        type: 'object',
        properties: {
          return_id: { type: 'string', description: 'returnId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          idempotency_key: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              buyer_keep_item: {
                type: 'boolean',
                description:
                  "If true, the seller will issue a returnless refund. In other words, the seller will refund without requiring the buyer to send the product back to the seller.  Note: Seller\\'s decision for the return request should be APPROVE_RETURN",
              },
              decision: {
                type: 'string',
                description:
                  "Seller\\'s decision for the return request, available values: - APPROVE_REFUND: seller approve  refund request - APPROVE_RETURN: seller approve return request - APPROVE_RECEIVED_PACKAGE: seller approve received package - APPROVE_REPLACEMENT: seller approve replacement request - ISSUE_REPLACEMENT_REFUND: seller decline the replacement request and directly refund to buyer. - OFFER_PARTIAL_REFUND: seller offer partial refund. Partial refund no need buyer to return the product. If buyer accept partial refund, seller only refund the partial amount and buyer keep the item(s).",
              },
              partial_refund: {
                type: 'object',
                properties: {
                  amount: {
                    type: 'string',
                    description:
                      "If seller would like to offer partial refund to buyer, should enter the refund amount. Note: Seller\\'s decision for the return request should be OFFER_PARTIAL_REFUND",
                  },
                  currency: { type: 'string', description: 'Refund currency' },
                },
                required: ['amount', 'currency'],
                description:
                  'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
              },
            },
            required: ['buyer_keep_item', 'decision', 'partial_refund'],
            description: 'Request body',
          },
        },
        required: [
          'return_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/returns/{return_id}/approve',
      executionParameters: [
        { name: 'return_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'idempotency_key', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_ReturnsReturnIdRecordsGet',
    {
      name: 'ReturnRefundV202309Api_ReturnsReturnIdRecordsGet',
      description: `Use this API to get a list of return records.`,
      inputSchema: {
        type: 'object',
        properties: {
          return_id: { type: 'string', description: 'returnId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          locale: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'return_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/return_refund/202309/returns/{return_id}/records',
      executionParameters: [
        { name: 'return_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'locale', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_ReturnsReturnIdRejectPost',
    {
      name: 'ReturnRefundV202309Api_ReturnsReturnIdRejectPost',
      description: `Use this API to reject a buyer\\'s return or refund request.`,
      inputSchema: {
        type: 'object',
        properties: {
          return_id: { type: 'string', description: 'returnId identifier' },
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          idempotency_key: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              comment: {
                type: 'string',
                description:
                  "Seller\\'s comment on the rejection decision. This is where a seller will provide more information about rejecting the request.",
              },
              decision: {
                type: 'string',
                description:
                  'Return decision, available values: - `REJECT_REFUND`: Seller rejects the refund request - `REJECT_RETURN`: Seller rejects the return request - `REJECT_RECEIVED_PACKAGE`: Seller rejects the received package - `REJECT_REPLACEMENT`: Seller rejects the replacement request',
              },
              images: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    height: { type: 'number', description: 'Image height Units: px' },
                    image_id: {
                      type: 'string',
                      description:
                        'Image URI obtained from the [Upload Product Image](https://partner.tiktokshop.com/docv2/page/6509df95defece02be598a22) API.',
                    },
                    mime_type: { type: 'string', description: 'MIME type.' },
                    width: { type: 'number', description: 'Image width Units: px' },
                  },
                  required: ['height', 'image_id', 'mime_type', 'width'],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description:
                  'List of images provided by the seller to support their decision to reject the return request.',
              },
              reject_reason: {
                type: 'string',
                description:
                  "Seller\\'s reason to reject buyer\\'s return request. Please use the [Get Reject Reasons](https://partner.tiktokshop.com/docv2/page/650ab658defece02be706f98) endpoint to obtain a list of rejection reasons.",
              },
            },
            required: ['comment', 'decision', 'images', 'reject_reason'],
            description: 'Request body',
          },
        },
        required: [
          'return_id',
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/returns/{return_id}/reject',
      executionParameters: [
        { name: 'return_id', in: 'path' },
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'idempotency_key', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'ReturnRefundV202309Api_ReturnsSearchPost',
    {
      name: 'ReturnRefundV202309Api_ReturnsSearchPost',
      description: `Use this API to retrieve one or more returns. This API supports filtering returns using query parameters. You can filter returns by create time, update time, return status, or return types.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          sort_field: { type: 'string' },
          sort_order: { type: 'string' },
          page_size: { type: 'string' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          page_token: {
            type: 'string',
            description: 'Token for pagination to get the next page of results',
          },
          requestBody: {
            type: 'object',
            properties: {
              arbitration_status: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'List of arbitration statuses.  Available values: - `IN_PROGRESS`: The TikTok Shop platform operator is processing arbitration. Platform may request additional information from the seller.   - `SUPPORT_BUYER`: The platform operator supports buyer. - `SUPPORT_SELLER`: The platform operator supports seller. - `CLOSED`: Arbitration is closed.',
              },
              buyer_user_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of TikTok Shop buyer user IDs.',
              },
              create_time_ge: {
                type: 'number',
                description:
                  'Filter returns to show only those that are created on or after the specified date and time. Unix timestamp.  Note: `create_time_ge` and `create_time_le` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_le` is empty, `create_time_le` will default to the current time. - If `create_time_lt` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.',
              },
              create_time_lt: {
                type: 'number',
                description:
                  'Filter returns to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
              locale: {
                type: 'string',
                description:
                  'The BCP-47 locale codes for displaying the returns, delimited by commas. Default: `en` Refer to [Locale codes](678e3a47bae28f030a8c7523) for the list of supported locale codes.',
              },
              order_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of TikTok Shop order IDs.',
              },
              return_ids: {
                type: 'array',
                items: { type: 'string' },
                description: 'List of return IDs.',
              },
              return_status: {
                type: 'array',
                items: { type: 'string' },
                description:
                  "List of return status. Available values: - `RETURN_OR_REFUND_REQUEST_PENDING`: Buyer has initiated a return or refund request. The request is pending review by seller or system.  - `REFUND_OR_RETURN_REQUEST_REJECT`: The return or refund request was rejected.  - `AWAITING_BUYER_SHIP`: The return request was approved. The seller is waiting for the buyer to ship the approved items to the seller. If the buyer doesn\\'t ship the items to the seller before the deadline, the platform will close the request. - `BUYER_SHIPPED_ITEM`: Buyer has shipped the approved items to seller. - `REJECT_RECEIVE_PACKAGE`: Seller inspected the returned items and rejected the return request.  - `RETURN_OR_REFUND_REQUEST_SUCCESS`: The return/refund request was successful. The buyer will be refunded. - `RETURN_OR_REFUND_REQUEST_CANCEL`: The request has been cancelled by the buyer or system. - `RETURN_OR_REFUND_REQUEST_COMPLETE`: The return/refund was processed successfully. The buyer has been refunded. - `AWAITING_BUYER_RESPONSE`: Seller offer another return type to the buyer, and waiting buyer response. Seller proposed return type can check the `seller_proposed_return_type`.",
              },
              return_types: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'List of return types. Available values: - `REFUND` - `RETURN_AND_REFUND` - `REPLACEMENT`',
              },
              seller_proposed_return_type: {
                type: 'array',
                items: { type: 'string' },
                description:
                  'List of seller proposed return types. Available values: - `PARTIAL_REFUND`',
              },
              update_time_ge: {
                type: 'number',
                description:
                  'Filter returns to show only those that are updated on or after the specified date and time. Unix timestamp.  Note: `update_time_ge` and `update_time_le` together define the update time filter condition. - If `update_time_ge` is filled but `update_time_le` is empty, `update_time_le` will default to the current time. - If `update_time_lt` is filled but `update_time_ge` is empty, `update_time_ge` will default to the earliest shop time.',
              },
              update_time_lt: {
                type: 'number',
                description:
                  'Filter returns to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.',
              },
            },
            required: [
              'arbitration_status',
              'buyer_user_ids',
              'create_time_ge',
              'create_time_lt',
              'locale',
              'order_ids',
              'return_ids',
              'return_status',
              'return_types',
              'seller_proposed_return_type',
              'update_time_ge',
              'update_time_lt',
            ],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/return_refund/202309/returns/search',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'sort_field', in: 'query' },
        { name: 'sort_order', in: 'query' },
        { name: 'page_size', in: 'query' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
        { name: 'page_token', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'SellerV202309Api_PermissionsGet',
    {
      name: 'SellerV202309Api_PermissionsGet',
      description: `Retrieves the cross-border operations that a cross-border seller is permitted to perform. You can use this API prior to listing products to check whether a seller has the ability to list global products. Target seller: Cross-border sellers`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/seller/202309/permissions',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'SellerV202309Api_ShopsGet',
    {
      name: 'SellerV202309Api_ShopsGet',
      description: `Retrieves all active shops that belong to a seller.  You can use this API to check the activation status of shops. Target seller: All`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'get',
      pathTemplate: '/seller/202309/shops',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: undefined,
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
  [
    'SupplyChainV202309Api_PackagesSyncPost',
    {
      name: 'SupplyChainV202309Api_PackagesSyncPost',
      description: `This API enables a warehouse service provider to send package shipment information for an order. Only warehouse service providers who have been certified by the platform have permission to access this interface.`,
      inputSchema: {
        type: 'object',
        properties: {
          'x-tts-access-token': { type: 'string', description: 'Access token for authentication' },
          'Content-Type': { type: 'string', description: 'Content type of the request' },
          shop_cipher: {
            type: 'string',
            description:
              'Encrypted shop identifier required for TikTok Shop API authentication. This parameter is mandatory for all API calls to identify and authenticate the shop making the request.',
          },
          app_key: {
            type: 'string',
            description: 'Application key provided by TikTok Shop for API authentication',
          },
          sign: {
            type: 'string',
            description: 'Request signature for API authentication and integrity verification',
          },
          timestamp: {
            type: 'number',
            format: 'int64',
            description: 'Unix timestamp when the request was made, used for API authentication',
          },
          requestBody: {
            type: 'object',
            properties: {
              packages: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    create_time_millis: {
                      type: 'number',
                      description:
                        'Time when warehouse receives the order (Unix timestamp in milliseconds)',
                    },
                    dimension: {
                      type: 'object',
                      properties: {
                        height: { type: 'number', description: 'Package height value' },
                        length: { type: 'number', description: 'Package length value' },
                        unit: {
                          type: 'string',
                          description:
                            'Package dimension unit Possible values: - METER - CENTIMETER - MILLIMETER - MICRON - FOOT - INCH',
                        },
                        width: { type: 'number', description: 'Package width value' },
                      },
                      required: ['height', 'length', 'unit', 'width'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    handover_time_millis: {
                      type: 'number',
                      description:
                        'Time when the order is handed over to the shipping provider (Unix timestamp in milliseconds)',
                    },
                    id: { type: 'string', description: 'Package ID' },
                    provider_warehouse_code: { type: 'string', description: 'Warehouse code' },
                    provider_warehouse_name: { type: 'string', description: 'Warehouse name' },
                    ship_time_millis: {
                      type: 'number',
                      description:
                        'Time when the order is shipped out of the warehouse (Unix timestamp in milliseconds)',
                    },
                    shipping_origin_city: {
                      type: 'string',
                      description: 'Origin city name for the shipment',
                    },
                    shipping_provider_id: {
                      type: 'string',
                      description: 'Shipping service provider ID',
                    },
                    shipping_provider_name: {
                      type: 'string',
                      description: 'Shipping service provider name',
                    },
                    skus: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          id: { type: 'string', description: 'TikTok Shop SKU ID' },
                          quantity: { type: 'number', description: 'The quantity of each SKU' },
                        },
                        required: ['id', 'quantity'],
                        description:
                          'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                      },
                      description: 'List of order SKUs',
                    },
                    tcw_warehouse_type: {
                      type: 'string',
                      description:
                        'TikTok warehouse type  Possible values: - STANDARD: Standard warehouse that has not been specifically certified by TikTok  - TIKTOK_CERTIFIED_WAREHOUSE_FULFILLMENT: TikTok certified warehouse usually offering better service levels. Certified warehouses are required to meet fulfillment timeline standards set by TikTok',
                    },
                    time_zone: { type: 'string', description: 'The warehouse time zone' },
                    tracking_number: { type: 'string', description: 'Tracking number' },
                    weight: {
                      type: 'object',
                      properties: {
                        unit: {
                          type: 'string',
                          description:
                            'Package weight unit Possible values: - KILOGRAM - GRAM - MILLIGRAM - POUND - OUNCE',
                        },
                        value: { type: 'number', description: 'Package weight value' },
                      },
                      required: ['unit', 'value'],
                      description:
                        'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                    },
                    wms_order_id: {
                      type: 'string',
                      description: 'Warehouse Management System order number',
                    },
                  },
                  required: [
                    'create_time_millis',
                    'dimension',
                    'handover_time_millis',
                    'id',
                    'provider_warehouse_code',
                    'provider_warehouse_name',
                    'ship_time_millis',
                    'shipping_origin_city',
                    'shipping_provider_id',
                    'shipping_provider_name',
                    'skus',
                    'tcw_warehouse_type',
                    'time_zone',
                    'tracking_number',
                    'weight',
                    'wms_order_id',
                  ],
                  description:
                    'tiktok shop openapi sdk for apis  The version of the OpenAPI document: 1.0.0',
                },
                description: 'Package info list',
              },
              warehouse_provider_id: {
                type: 'string',
                description: 'Warehouse provider ID, unique and provided by TikTok',
              },
            },
            required: ['packages', 'warehouse_provider_id'],
            description: 'Request body',
          },
        },
        required: [
          'x-tts-access-token',
          'Content-Type',
          'shop_cipher',
          'app_key',
          'sign',
          'timestamp',
        ],
      },
      method: 'post',
      pathTemplate: '/supply_chain/202309/packages/sync',
      executionParameters: [
        { name: 'x-tts-access-token', in: 'header' },
        { name: 'Content-Type', in: 'header' },
        { name: 'shop_cipher', in: 'query' },
        { name: 'app_key', in: 'query' },
        { name: 'sign', in: 'query' },
        { name: 'timestamp', in: 'query' },
      ],
      requestBodyContentType: 'application/json',
      securityRequirements: [{ AccessToken: [] }],
    },
  ],
]);
